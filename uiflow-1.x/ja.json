{
  "EVENT": "イベント",
  "UI": "UI",
  "TITLE": "タイトル",
  "LABEL": "ラベル",
  "RECT": "四角形",
  "UPDATA": "更新ログ",
  "CIRCLE": "円形",
  "IMAGE": "画像",
  "HARDWARES": "ハードウェア",
  "SPEAKER": "スピーカー",
  "RGB": "RGBカラー",
  "IMU": "加速度&ジャイロ",
  "UNITS": "Units",
  "ENV": "環境",
  "ANGLE": "アングル",
  "PIR": "人感",
  "NEOPIXEL": "RGB LED",
  "JOYSTICK": "ジョイスティック",
  "LIGHT": "ライト",
  "EARTH": "アース",
  "MAKEY": "Makey",
  "MODULES": "モジュール",
  "STEP_MOTOR": "ステップモーター",
  "SERVO": "サーボ",
  "WEIGHT": "重さ",
  "TRACK": "Track",
  "BALA": "Bala",
  "BALA_MOTOR": "Balaモーター",
  "LEGO_MOTOR": "DC Motor",
  "VARIABLES": "変数",
  "MATH": "数学",
  "TEXT": "テキスト",
  "LOOPS": "ループ",
  "LOGIC": "論理",
  "LISTS": "リスト",
  "GRAPHIC": "グラフィック",
  "EMOJI": "絵文字",
  "TIMER": "タイマー",
  "FUNCTIONS": "関数",
  "ADVANCED": "高度なブロック",
  "PIN": "デジタル入出力",
  "GPIO": "入出力端子",
  "PWM": "PWM出力",
  "ADC": "アナログ入力",
  "DAC": "DAC出力",
  "UART": "UART",
  "IIC": "I2Cマスター",
  "EXECUTE": "コード実行",
  "REMOTE": "リモコン",
  "_OPTION_LEFT": "左",
  "_OPTION_RIGHT": "右",
  "_OPTION_TO_LEFT": "左へ",
  "_OPTION_TO_RIGHT": "右へ",
  "_OPTION_TO_FORWARD": "前へ",
  "_OPTION_TO_BACKWARD": "後ろへ",
  "_OPTION_TO_LEFTWHEEL": "左ホイール",
  "_OPTION_TO_RIGHTWHEEL": "右ホイール",
  "_OPTION_TO_CLOCKWISE": "時計まわり",
  "_OPTION_TO_ANTICLOCKWISE": "反時計まわり",
  "_OPTION_TO_BORDERCOLOR": "ボーダーの色",
  "_OPTION_TO_FILLCOLOR": "塗りつぶしの色",
  "_OPTION_TO_UP": "離されたとき",
  "_OPTION_TO_DOWN": "押されたとき",
  "FUNCTION_IN_EVENT": "%1 イベント開始 %2",
  "FUNCTION_OUT_EVENT": "%1 イベント終了 %2",
  "FUNCTION_MAIN_EVENT": "%1 ずっと %2",
  "BUTTONC_CALLBACK": "ボタン %1 が %2 のとき",
  "BUTTONC_STATE": "ボタン %1 %2 が %3 である",
  "BASIC_ON_LOOP": "ずっと",
  "SPEAKER_TONE": "%1 スピーカーを音の高さ %2 [Hz] %3 %4 [ミリ秒]鳴らす",
  "SPEAKER_VOL": "スピーカーの音量を %1 に設定する",
  "SPEAKER_SING": "%1 スピーカーを高さ %2 で %3 拍鳴らす",
  "RGB_INIT": "%1 Setup RGB Bar",
  "RGB_SET_ALL": "%1 LEDバーの色を %2 色に設定する",
  "RGB_SET_ALL_RGB": "%1 LEDバーの色をRGB(赤 %2 緑 %3 青 %4 )色に設定する",
  "RGB_SET_DIR": "%1 %2 のLEDバーを %3 色に設定する",
  "RGB_SET_DIR_RGB": "%1 %2 のLEDバーをRGB( 赤 %3 緑 %4 青 %5 )色に設定する",
  "RGB_SET": "%1 LEDバーの %2 番目のLEDを %3 に設定する",
  "RGB_SET_RGB": "%1 LEDバーの %2 番目のLEDをRGB( 赤 %3 緑 %4 青 %5 )色に設定する",
  "RGB_SET_BRIGHTNESS": "%1 LEDバーの明るさを %2 に設定する",
  "IMU_GET_X": "%1 ピッチ角",
  "IMU_GET_Y": "%1 ロール角",
  "IMU_GET_Z": "%1 ヨー角",
  "IMU_GET_ACC_X": "%1 X軸の加速度",
  "IMU_GET_ACC_Y": "%1 Y軸の加速度",
  "IMU_GET_ACC_Z": "%1 Z軸の加速度",
  "IMU_IS_LEVEL": "%1 レベルがないか",
  "IMU_IS_STAND": "%1 立つかどうか",
  "IMU_IS_LEFT_TILT": "%1 左傾",
  "IMU_IS_RIGHT_TILT": "%1 右に傾くか",
  "IMU_IS_OTHER_SIDE": "%1 反対か否か",
  "IMU_GET_X_tow": "%1 ピッチ角",
  "IMU_GET_Y_tow": "%1 ロール角",
  "IMU_GET_Z_tow": "%1 ヨー角",
  "IMU_GET_ACC_X_tow": "%1 X軸の加速度",
  "IMU_GET_ACC_Y_tow": "%1 Y軸の加速度",
  "IMU_GET_ACC_Z_tow": "%1 Z軸の加速度",
  "IMU_IS_LEVEL_tow": "%1 レベルがないか",
  "IMU_IS_STAND_tow": "%1 立つかどうか",
  "IMU_IS_LEFT_TILT_tow": "%1 左傾",
  "IMU_IS_RIGHT_TILT_tow": "%1 右に傾くか",
  "IMU_IS_OTHER_SIDE_tow": "%1 反対か否か",
  "DHT12_INIT": "%1 環境センサを初期化",
  "DHT12_PRESSURE": "%1 %2 の気圧[Pa]",
  "DHT12_GET_TEMPERATURE": "%1 %2 の温度[℃]",
  "DHT12_GET_HUMIDITY": "%1 Get %2 Humidity (%, return float)",
  "JOYSTICK_X": "%1 %2 のX軸の入力値",
  "JOYSTICK_Y": "%1 %2 のY軸の入力値",
  "JOYSTICK_REVERSAL_X": "%1 %2 のX軸の入力反転値",
  "JOYSTICK_REVERSAL_Y": "%1 %2 のY軸の入力反転値",
  "JOYSTICK_PRESS": "%1 %2 が押されている",
  "LIGHT_A_READ": "%1 %2 のアナログ値を読み取る",
  "LIGHT_D_READ": "%1 %2 が暗くなっている",
  "EARTH_A_READ": "%1 %2 のアナログ値を読み取る",
  "EARTH_D_READ": "%1 %2 のデジタル値を読み取る",
  "MAKEY_VALUE": "%1 %2 の値",
  "MAKEY_PLAY_PIANO": "%1 %2 のピアノモード開始 %3 拍",
  "SERVO_INIT": "%1 サーボ %2 %3 をピン番号 %4 にする",
  "SERVO_ANGLE": "%1 %2 を %3 %4 %5 度回転",
  "SERVO_WRITE": "%1 %2 %3 の書き込み間隔を %4 %5 [マイクロ秒]に設定する",
  "SERVO_UNIT_WRITE_US": "%1 サーボ %2 %3 の書き込み間隔を %4 %5 (500 ~ 2500) [マイクロ秒]に設定する",
  "SERVO_UNIT_WRITE_ANGLE": "%1 サーボ %2 を %3 %4 (0 ~ 180) 度回転",
  "WEIGH_ZERO": "%1 %2 を0にリセット",
  "WEIGH_GET_WEIGHT": "%1 %2 の重さ",
  "PULSE_GET_IR": "%1 %2 IR値",
  "PULSE_GET_RED": "%1 %2 RED値",
  "M5TRACK_GET_ANALOG": "%1 ピン %2 のアナログ値を読み取る",
  "M5TRACK_GET_DIGITAL": "%1 ピン %2 のデジタル値を読み取る",
  "M5TRACK_SET_ANALOG": "%1 ピン %2 limite value %3",
  "NXT_INIT": "%1 %2 %3 = ポート %4 %5 ",
  "NXT_SET_PWM": "%1 %2 %3 回転方向 %4 回転スピード %5 %6",
  "NXT_RUN": "%1 %2 Run %3 %4 %5 Speed %6",
  "NXT_RUN_GOTO": "%1 %2 Go To Position %3 %4 MaxSpeed %5",
  "NXT_STOP": "%1 停止 %2",
  "NXT_READ_ENCODER": "%1 %2 の位置",
  "LEGO_REGISTER_MOTOR": "%1 %2  = ポート %3 %4 ",
  "LEGO_SET_PWM": "%1 %2 %3 回転方向 %4 PWM %5",
  "LEGO_SET_SPEED": "%1 %2 %3 回転方向 %4 スピード %5",
  "LEGO_SET_ANGLE": "%1 %2 %3 回転方向 %4 角度 %5",
  "LEGO_SET_ANGLE_ZERO": "%1 %2 を0度にリセット %3",
  "LEGO_STEP": "%1 ステップ %2",
  "LEGO_BRAKE": "%1 ブレーキ %2",
  "LEGO_CLEAR": "%1 Clear %2 encode",
  "LCD_CLEAR": "%1 画面をクリア",
  "LCD_FILL": "%1 画面を %2 色で塗りつぶす",
  "LCD_PRINT": "テキスト %1 を x %2 y %3 %4 に %5 色で 回転角度 %6で表示",
  "LCD_SETFONT": "%1 フォントを %2 に設定",
  "LCD_PIXEL": "%1 ピクセルを(x %2 y %3 %4 )に %5 色で表示",
  "LCD_LINE": "%1 線を 始点(x %2 y %3 ) 終点(x %4 y %5 %6 )に %7 色で表示",
  "LCD_RECT": "%1 四角形を 始点(x %2 y %3 )に 幅 %4 高さ %5 %6 として %7 %8 色で表示",
  "LCD_TRIANGLE": "%1 三角形を頂点(x1 %2 y1 %3 ) (x2 %4 y2 %5 ) (x3 %6 y3 %7 %8 )として %9 %10 色で表示",
  "LCD_CIRCLE": "%1 円を(x %2 y %3 )中心で半径 %4 %5 として %6 %7 色で表示",
  "LCD_ELLIPSE": "%1 楕円を(x %2 y %3 ) と (rx %4 ry %5 %6 )を焦点として %7 %8 色で表示",
  "LCD_ARC": "%1 円弧を(x %2 y %3 )中心で半径 %4 厚み %5 開始角度 %6 終了角度 %7 %8 として %9 %10 色で表示",
  "LCD_POLYGON": "%1 多角形を(x %2 y %3 )中心で半径 %4 頂点数 %5 厚み %6 %7 として %8 %9 色で %10 回転角度 %11 で表示",
  "EMOJI_SET_SINGLE": "%1 絵文字の行 %2 列 %3 を %4 色で表示",
  "EMOJI_SHOW": "絵文字を表示 色",
  "GPIO_PINOUT": "%1 デジタル入出力ピン %2 をピン番号 %3 モード %4 ピンの状態 %5 にする",
  "GPIO_PININ": "%1 %2 にHIGHを書き出す",
  "GPIO_PINOUT_VALUE": "%1 %2 にLOWを書き出す",
  "GPIO_PININ_VALUE": "%1 変数 %2 に入力ピン %3 の入力値をセット",
  "PWM_PIN": "%1 PWM出力ピン %2 をピン番号 %3 周波数 %4 [Hz] デューティ %5 [％] 使用タイマー %6 にする",
  "PWM_FREQ": "%1 %2 の周波数を %3 [Hz]に設定",
  "PWM_DUTY": "%1 %2 のデューティを %3 [％]に設定",
  "ADC_PIN": "%1 アナログ入力ピン %2 をピン番号 %3 にする",
  "ADC_READ": "%1 %2 のアナログ値を読み取る",
  "ADC_READ_VAR": "%1 set %2 to %3",
  "ADC_WIDTH": "%1 %2 の読み取り解像度を %3 に設定",
  "DAC_PIN": "%1 DAC出力ピン %2 をピン番号 %3 にする",
  "DAC_WIDTH": "%1 %2 に %3 を書き出す",
  "UART_PIN": "%1 UART %2 を送信ピン %3 受信ピン %4 %5 ボーレート %6 bps 使用UART %7 にする",
  "UART_READ": "%1 %2 からすべて読み取る",
  "UART_READ_CHARACTERS": "%1 %2 から %3 文字分読み取る",
  "UART_READLINE": "%1 %2 から1行読み取る",
  "UART_READINTO": "%1 %2 を %3 まで読み取る",
  "UART_WRITE": "%1 %3 に %2 を書き出す",
  "UART_READANY": "%1 %2 にデータがある",
  "UART_WRITE_NUMBER": "%2 に %1 を書き出す",
  "UART_WRITE_LINE": "%2 に %1 を1行書き出す",
  "IIC_SET": "%1 マスター %2 freq %3",
  "IIC_SCAN": "%1 からI2Cデバイスをスキャンする",
  "IIC_ADDR": "I2Cアドレス %1 が準備できている",
  "IIC_READ_ADDR": "I2Cアドレス %1 から %2 読み込む",
  "IIC_READ_ADDR_FROM": "I2Cアドレス %1 レジスタ %2 から %3 読み込む",
  "EXECUTE_IN": "%1 コードを実行: %2 ",
  "ANGLE_READ": "%1 %2 角度",
  "PIR_READ": "%1 %2 ステータス",
  "RGB_MULTI_SET_COLOR": "%1 %2 の %3 %4 番目のLEDの色を %5 に設定",
  "RGB_MULTI_SET_COLOR_FROM": "%1 %2 の %3 から %4 %5 番目のLEDの色を %6 に設定",
  "RGB_MULTI_SET_COLOR_ALL": "%1 %2 %3 の全てのLEDの色を %4 に設定",
  "RGB_MULTI_SET_BRIGHTNESS": "%1 %2 の明るさを %3 に設定",
  "RGB_MULTI_SET_COLOR_FROM_RGB": "%1 %2 の %3 から %4 番目のLEDの色を 赤 %5 緑 %6 青 %7 に設定",
  "COLOR_GETR": " %1 赤成分を読み取る",
  "COLOR_GETG": " %1 緑成分を読み取る",
  "COLOR_GETB": " %1 青成分を読み取る",
  "FINGER_GET_STATE": "%1 の状態",
  "FINGER_REMOVEALL": "%1 の指紋情報を全削除",
  "FINGER_REMOVE_USER": "%1 のID %2 の指紋情報を削除",
  "FINGER_GET_ID": "IDを読み込む",
  "FINGER_GET_ACCESS": "アクセスNoを読み込む",
  "FINGER_ADD_USER": "%1 指紋情報をID %2 として アクセスNo %3 への追加を開始",
  "FINGER_READ": "%1 指紋情報が読み込まれたとき",
  "RFID_READSTR": "%1 のアドレス %2 から文字列を読み込む",
  "RFID_WRITE": "%1 のアドレス %3 に文字列 %2 を書き込む",
  "RFID_CARDON": "%1 の近くにカードがあるか",
  "RFID_UID": "%1 のカードのUID",
  "MOTOR_INSTANCE": "%1 モーター %2 %3 アドレス %4",
  "MOTOR_MOVE_XYZ": "%1 モーター %2 X %3 Y %4 Z %5 スピード %6 %7",
  "TIMER_DELAY": "%2 %1 [秒]停止",
  "CONVENT_INT": "整数に変換する %1",
  "CONVENT_STR": "テキストに変換する %1",
  "CONVENT_FLOAT": "小数に変換する %1",
  "M5BALA_MOVE": "%1 %2 スピード: %3 %4 ",
  "M5BALA_TURN": "%1 %2 だけ スピード: %3  %4 ",
  "M5BALA_ROTATE": "%1 %2 スピード: %3  %4 ",
  "M5BALA_GET_ANGLE": " get angle",
  "M5BALA_SET_OFFSET": " set angle offset %1",
  "M5BALA_LOOP": "balance loop",
  "BUTTONA_PRESSED_HANDLER": "%1 ボタンAが押されたとき %2",
  "BUTTONB_PRESSED_HANDLER": "%1 ボタンBが押されたとき %2",
  "BUTTONC_PRESSED_HANDLER": "%1 ボタンCが押されたとき %2",
  "PINS_ANALOG_READ": "%1 %2 ピンからアナログ値を読み取る",
  "PINS_ANALOG_WRITE": "%1 ピン %2 %3 にデューティー比 %4 でアナログデータを書き込み",
  "PINS_ANALOG_TOGGLE": "%1 %2 ピンを反転する",
  "PINS_DIGITAL_READ": "%1 %2 ピンからデジタルで読み取る",
  "PINS_DIGITAL_WRITE": "%1 %2 %3 ピンに %4 をデジタルで出力する",
  "PINS_SET_MODE": "%1 ピン %2 %3 をモード %4 %5 プル %6 にセット",
  "PINS_SET_MAP": "マップ %1 変換前下限 %2 変換前上限 %3 変換後下限 %4 変換後上限 %5",
  "TITLE_SET_TEXT": "%1 タイトル %2 に %3 を表示",
  "TITLE_SHOW": "%1 タイトル %2 を見せる",
  "TITLE_HIDE": "%1 タイトル %2 を隠す",
  "TITLE_SET_COLOR": "%1 タイトル %2 の文字色を %3 に設定",
  "TITLE_SET_COLORRGB": "%1 タイトル %2 の色 赤 %3 緑 %4 青 %5",
  "TITLE_SET_BGCOLOR": "%1 タイトル %2 の背景色を %3 に設定",
  "TITLE_SET_BGCOLORRGB": "%1 タイトル %2 の背景色を 赤 %3 緑 %4 青 %5 に設定",
  "LABEL_SET_MODE": "%1 ラベル %2 の表示を %3 に設定する",
  "LABEL_SET_TEXT": "%1 ラベル %2 に %3 を表示",
  "LABEL_SET_POSITION": "%1 ラベル %2 を座標(x %3 y %4 )に移動する",
  "LABEL_SET_POSITION_X": "%1 ラベル %2 のx座標を %3 に移動する",
  "LABEL_SET_POSITION_Y": "%1 ラベル %2 のy座標を %3 に移動する",
  "LABEL_SET_ROTATE": "%1 ラベル %2 を時計回りに %3 度回転する",
  "LABEL_SET_COLOR": "%1 ラベル %2 の文字色を %3 色に設定する",
  "LABEL_SET_COLOR_RGB": "%1 ラベル %2 の文字色をRGB(赤 %3 緑 %4 青 %5 )色に設定する",
  "RECT_SET_MODE": "%1 四角形 %2 の表示を %3 に設定",
  "RECT_SET_SIZE": "%1 四角形 %2 を幅 %3 高さ %4 に設定",
  "RECT_SET_SIZE_WIDTH": "%1 四角形 %2 の幅を %3 に設定",
  "RECT_SET_SIZE_HEIGHT": "%1 四角形 %2 の高さを %3 に設定",
  "RECT_SET_POSITION": "%1 四角形 %2 の位置を x %3 y %4 に移動",
  "RECT_SET_POSITION_X": "%1 四角形 %2 の位置xを %3 に移動",
  "RECT_SET_POSITION_Y": "%1 四角形 %2 の位置yを %3 に移動",
  "RECT_SET_BGCOLOR": "%1 四角形 %2 の色を %3 に設定",
  "RECT_SET_BGCOLOR_RGB": "%1 四角形 %2 の色を 赤 %3 緑 %4 青 %5 に設定",
  "RECT_SET_BORDER_COLOR": "%1 四角形 %2 のボーダー色を %3 に設定",
  "RECT_SET_BORDERCOLOR_RGB": "%1 四角形 %2 のボーダー色 赤 %3 緑 %4 青 %5 に設定",
  "CIRCLE_SET_MODE": "%1 円形 %2 の表示を %3 に設定",
  "CIRCLE_SET_SIZE": "%1 円形 %2 の半径を %3 に設定",
  "CIRCLE_SET_POSITION": "%1 円形 %2 の中心の位置を x %3 y %4 に移動",
  "CIRCLE_SET_POSITION_X": "%1 円形 %2 の中心の位置xを %3 に移動",
  "CIRCLE_SET_POSITION_Y": "%1 円形 %2 の中心の位置yを %3 に移動",
  "CIRCLE_SET_BGCOLOR": "%1 円形 %2 の色を %3 に設定",
  "CIRCLE_SET_BGCOLOR_RGB": "%1 円形 %2 の色を 赤 %3 緑 %4 青 %5 に設定",
  "CIRCLE_SET_BORDERCOLOR": "%1 円形 %2 のボーダー色を %3 に設定",
  "CIRCLE_SET_BORDERCOLOR_RGB": "%1 円形 %2 のボーダー色 赤 %3 緑 %4 青 %5 に設定",
  "IMAGE_HIDE": "%1 画像 %2 を隠す",
  "IMAGE_SHOW": "%1 画像 %2 を見せる",
  "IMAGE_SET_POSITION_X": "%1 画像 %2 の位置xを %3 に移動",
  "IMAGE_SET_POSITION_Y": "%1 画像 %2 の位置yを %3 に移動",
  "IMAGE_SET_POSITION": "%1 画像 %2 の位置を x %3 y %4 に移動",
  "IMAGE_SET_IMAGE": "%1 画像 %2 に %3 %4 を表示",
  "REMOTE_SET_QRCODE": "%1 リモコンページの二次元コードを x %2 y %3 にサイズ %4 で表示",
  "VARIABLES_DEFAULT_NAME": "項目",
  "TODAY": "今日",
  "DUPLICATE_BLOCK": "複製",
  "ADD_COMMENT": "コメントを追加",
  "REMOVE_COMMENT": "コメントを削除",
  "EXTERNAL_INPUTS": "外部入力",
  "INLINE_INPUTS": "インライン入力",
  "DELETE_BLOCK": "ブロックを削除",
  "DELETE_X_BLOCKS": "%1 個のブロックを削除",
  "DELETE_ALL_BLOCKS": "%1件のすべてのブロックを削除しますか？",
  "CLEAN_UP": "ブロックを整理する",
  "COLLAPSE_BLOCK": "ブロックを折りたたむ",
  "COLLAPSE_ALL": "ブロックを折りたたむ",
  "EXPAND_BLOCK": "ブロックを展開する",
  "EXPAND_ALL": "ブロックを展開する",
  "DISABLE_BLOCK": "ブロックを無効にする",
  "ENABLE_BLOCK": "ブロックを有効にする",
  "HELP": "ヘルプ",
  "UNDO": "取り消す",
  "REDO": "やり直す",
  "CHANGE_VALUE_TITLE": "値を変える：",
  "RENAME_VARIABLE": "変数の名前を変える…",
  "RENAME_VARIABLE_TITLE": "選択した%1の変数すべての名前を変える：",
  "NEW_VARIABLE": "変数の作成…",
  "NEW_STRING_VARIABLE": "文字列の変数を作る...",
  "NEW_NUMBER_VARIABLE": "数の変数を作る...",
  "NEW_COLOUR_VARIABLE": "色の変数を作る...",
  "NEW_VARIABLE_TYPE_TITLE": "新しい変数の型:",
  "NEW_VARIABLE_TITLE": "新しい変数の名前：",
  "RTC_SET_CLIENT": "年の設定 %1 月の設定 %2 日の設定 %3 時の設定 %4 分の設定 %5 秒の設定 %6",
  "RTC_SET_CLIENT_YEAR": "年 %1",
  "RTC_SET_CLIENT_MONTH": "月 %1",
  "RTC_SET_CLIENT_DAY": " 日 %1",
  "RTC_SET_CLIENT_HOUR": "時 %1",
  "RTC_SET_CLIENT_MINUTE": "分 %1",
  "RTC_SET_CLIENT_SECOUD": "秒 %1",
  "RTC_SET_CLIENT_TIME": "日時 %1",
  "LIDARCAR_DRAWMAP": "lidarcar|UNK|UNK|UNK引き分けマップと",
  "LIDARCAR_GETDISTANCE": "lidarcar|UNK|UNK|UNK obtener|UNK|UNK|UNK distancia|UNK|UNK|UNK %1",
  "LIDARCAR_SETSERVO": "lidarcar|UNK|UNK|UNKセットサーボ %1 角度 %2",
  "LIDARCAR_SETSTEPMOTOR": "リダーカー準備運動速度 X (-7~7): %1 Y (-7~7): %2 Z (-7~7): %3 A (-7~7): %4",
  "LIDARCAR_TURNRIGHT": "リダーカーを右折 %1",
  "LIDARCAR_TURNLEFT": "リダルカーは左へ %1",
  "LIDARCAR_GOBACK": "リダーカーだスピードを戻せ %1",
  "LIDARCAR_GOAHEAD": "lidarcar|UNK|UNK|UNK %2 速度 (0±7)%1",
  "LIDARCAR_SETONERGB": "lidarcar|UNK|UNK|UNK設定数 %2 neopixel|UNK|UNK|UNKと %1",
  "LIDARCAR_SETRGB": "lidarcar|UNK|UNK|UNKセット %2 neopixel|UNK|UNK|UNKと %1",
  "LIDARCAR_CONTROL": "lidarcar|UNK|UNK|UNK X 軸速度 (0±7) %1 Y 軸速度 (0±7) %2",
  "LORAWAN_INITTRX": " ローダル・イイント・rxでデータを保存",
  "LORAWAN_INITP2P": " 始点はフラッグと %1",
  "LORAWAN_DATA": "データを取得する",
  "LORAWAN_TXT": " 送信弦 %1",
  "VARIABLE_ALREADY_EXISTS": "変数名 '%1' は既に存在しています。",
  "VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE": "'%2' 型の '%1' という名前の変数が既に存在します。",
  "DELETE_VARIABLE_CONFIRMATION": "%1か所で使われている変数 '%2' を削除しますか？",
  "CANNOT_DELETE_VARIABLE_PROCEDURE": "変数 '%1' は関数 '%2' の定義の一部であるため、削除できません",
  "DELETE_VARIABLE": "変数 '%1' を削除",
  "COLOUR_PICKER_HELPURL": "https://ja.wikipedia.org/wiki/色",
  "COLOUR_PICKER_TOOLTIP": "パレットから色を選んでください。",
  "COLOUR_RANDOM_TITLE": "ランダムな色",
  "COLOUR_RANDOM_TOOLTIP": "ランダムな色を選ぶ。",
  "COLOUR_RGB_HELPURL": "http://www.december.com/html/spec/colorper.html",
  "COLOUR_RGB_TITLE": "色：",
  "COLOUR_RGB_RED": "赤",
  "COLOUR_RGB_GREEN": "緑",
  "COLOUR_RGB_BLUE": "青",
  "COLOUR_RGB_TOOLTIP": "赤、緑、および青の指定された量で色を作成します。すべての値は 0 ～ 100 の間でなければなりません。",
  "COLOUR_BLEND_HELPURL": "http://meyerweb.com/eric/tools/color-blend/",
  "COLOUR_BLEND_TITLE": "ブレンド",
  "COLOUR_BLEND_COLOUR1": "色 1",
  "COLOUR_BLEND_COLOUR2": "色 2",
  "COLOUR_BLEND_RATIO": "比率",
  "COLOUR_BLEND_TOOLTIP": "2色を与えられた比率（0.0～1.0）で混ぜます。",
  "CONTROLS_REPEAT_HELPURL": "https://ja.wikipedia.org/wiki/for文",
  "CONTROLS_REPEAT_TITLE": "%1 回繰り返す",
  "CONTROLS_REPEAT_INPUT_DO": "実行",
  "CONTROLS_REPEAT_TOOLTIP": "いくつかのステートメントを数回実行します。",
  "CONTROLS_WHILEUNTIL_OPERATOR_WHILE": "繰り返す:続ける条件",
  "CONTROLS_WHILEUNTIL_OPERATOR_UNTIL": "繰り返す:終わる条件",
  "CONTROLS_WHILEUNTIL_TOOLTIP_WHILE": "値がtrueの間、いくつかのステートメントを実行する。",
  "CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL": "値がfalseの間、いくつかのステートメントを実行する。",
  "CONTROLS_FOR_TOOLTIP": "変数 '%1' が開始番号から終了番号まで指定した間隔での値をとって、指定したブロックを実行する。",
  "CONTROLS_FOR_TITLE": "%1 を %2 から %3 まで %4 ずつカウントする",
  "CONTROLS_FOREACH_TITLE": "リスト%2の各項目%1について",
  "CONTROLS_FOREACH_TOOLTIP": "リストの各項目について、その項目を変数'%1'として、いくつかのステートメントを実行します。",
  "CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK": "ループから抜け出す",
  "CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE": "ループの次の反復処理を続行",
  "CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK": "入っているループから抜け出します。",
  "CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE": "このループの残りの部分をスキップして、ループの繰り返しを続けます。",
  "CONTROLS_FLOW_STATEMENTS_WARNING": "注意: このブロックは、ループ内でのみ使用できます。",
  "CONTROLS_IF_TOOLTIP_1": "値が true の場合、ステートメントを実行します。",
  "CONTROLS_IF_TOOLTIP_2": "値が true 場合は、ステートメントの最初のブロックを行います。それ以外の場合は、ステートメントの 2 番目のブロックを行います。",
  "CONTROLS_IF_TOOLTIP_3": "最初の値が true 場合は、ステートメントの最初のブロックを行います。それ以外の場合は、2 番目の値が true の場合、ステートメントの 2 番目のブロックをします。",
  "CONTROLS_IF_TOOLTIP_4": "最初の値が true 場合は、ステートメントの最初のブロックを行います。2 番目の値が true の場合は、ステートメントの 2 番目のブロックを行います。それ以外の場合は最後のブロックのステートメントを行います。",
  "CONTROLS_IF_MSG_IF": "もし",
  "CONTROLS_IF_MSG_ELSEIF": "そうでなくもし",
  "CONTROLS_IF_MSG_ELSE": "そうでなければ",
  "CONTROLS_IF_IF_TOOLTIP": "追加、削除、またはセクションを順序変更して、ブロックをこれを再構成します。",
  "CONTROLS_IF_ELSEIF_TOOLTIP": "「もし」のブロックに条件を追加します。",
  "CONTROLS_IF_ELSE_TOOLTIP": "「もし」ブロックに、すべてをキャッチする条件を追加。",
  "IOS_OK": "OK",
  "IOS_CANCEL": "キャンセル",
  "IOS_ERROR": "エラー",
  "IOS_PROCEDURES_INPUTS": "入力",
  "IOS_PROCEDURES_ADD_INPUT": "+　入力を追加",
  "IOS_PROCEDURES_ALLOW_STATEMENTS": "ステートメントを許可",
  "IOS_PROCEDURES_DUPLICATE_INPUTS_ERROR": "この関数には重複する入力があります。",
  "IOS_VARIABLES_ADD_VARIABLE": "+ 変数を追加",
  "IOS_VARIABLES_ADD_BUTTON": "追加",
  "IOS_VARIABLES_RENAME_BUTTON": "名前を変更",
  "IOS_VARIABLES_DELETE_BUTTON": "削除",
  "IOS_VARIABLES_VARIABLE_NAME": "変数名",
  "IOS_VARIABLES_EMPTY_NAME_ERROR": "空の変数名は使用できません。",
  "LOGIC_COMPARE_HELPURL": "https://ja.wikipedia.org/wiki/不等式",
  "LOGIC_COMPARE_TOOLTIP_EQ": "両方の入力が互いに等しい場合に true を返します。",
  "LOGIC_COMPARE_TOOLTIP_NEQ": "両方の入力が互いに等しくない場合に true を返します。",
  "LOGIC_COMPARE_TOOLTIP_LT": "最初の入力が 2 番目の入力よりも小さい場合は true を返します。",
  "LOGIC_COMPARE_TOOLTIP_LTE": "最初の入力が 2 番目の入力以下の場合に true を返します。",
  "LOGIC_COMPARE_TOOLTIP_GT": "最初の入力が 2 番目の入力よりも大きい場合は true を返します。",
  "LOGIC_COMPARE_TOOLTIP_GTE": "最初の入力が 2 番目の入力以上の場合に true を返します。",
  "LOGIC_OPERATION_TOOLTIP_AND": "両方の入力が true のときに true を返します。",
  "LOGIC_OPERATION_AND": "かつ",
  "LOGIC_OPERATION_TOOLTIP_OR": "少なくとも 1 つの入力が true のときに true を返します。",
  "LOGIC_OPERATION_OR": "または",
  "LOGIC_NEGATE_HELPURL": "https://ja.wikipedia.org/wiki/否定",
  "LOGIC_NEGATE_TITLE": "%1ではない",
  "LOGIC_NEGATE_TOOLTIP": "入力が false の場合は、true を返します。入力が true の場合は false を返します。",
  "LOGIC_BOOLEAN_TRUE": "true",
  "LOGIC_BOOLEAN_FALSE": "false",
  "LOGIC_BOOLEAN_TOOLTIP": "true または false を返します。",
  "LOGIC_NULL_HELPURL": "https://en.wikipedia.org/wiki/Nullable_type",
  "LOGIC_NULL": "null",
  "LOGIC_NULL_TOOLTIP": "null を返します。",
  "LOGIC_TERNARY_HELPURL": "https://ja.wikipedia.org/wiki/%3F:",
  "LOGIC_TERNARY_CONDITION": "テスト",
  "LOGIC_TERNARY_IF_TRUE": "true の場合",
  "LOGIC_TERNARY_IF_FALSE": "false の場合",
  "LOGIC_TERNARY_TOOLTIP": "'テスト' の条件をチェックします。条件が true の場合、'true' の値を返します。それ以外の場合 'false' のを返します。",
  "MATH_NUMBER_HELPURL": "https://ja.wikipedia.org/wiki/数",
  "MATH_NUMBER_TOOLTIP": "数です('0b'(2進)と'0x'(16進)表現が>使えます)。",
  "MATH_ADDITION_SYMBOL": "+",
  "MATH_SUBTRACTION_SYMBOL": "-",
  "MATH_DIVISION_SYMBOL": "÷",
  "MATH_MULTIPLICATION_SYMBOL": "×",
  "MATH_POWER_SYMBOL": "^",
  "MATH_TRIG_SIN": "sin",
  "MATH_TRIG_COS": "cos",
  "MATH_TRIG_TAN": "tan",
  "MATH_TRIG_ASIN": "asin",
  "MATH_TRIG_ACOS": "acos",
  "MATH_TRIG_ATAN": "atan",
  "MATH_ARITHMETIC_HELPURL": "https://ja.wikipedia.org/wiki/算術",
  "MATH_ARITHMETIC_TOOLTIP_ADD": "2 つの数の合計を返します。",
  "MATH_ARITHMETIC_TOOLTIP_MINUS": "2 つの数の差を返します。",
  "MATH_ARITHMETIC_TOOLTIP_MULTIPLY": "2 つの数の積を返します。",
  "MATH_ARITHMETIC_TOOLTIP_DIVIDE": "2 つの数の商を返します。",
  "MATH_ARITHMETIC_TOOLTIP_POWER": "最初の数を2 番目の値で累乗した結果を返します。",
  "MATH_SINGLE_HELPURL": "https://ja.wikipedia.org/wiki/平方根",
  "MATH_SINGLE_OP_ROOT": "平方根",
  "MATH_SINGLE_TOOLTIP_ROOT": "平方根を返す。",
  "MATH_SINGLE_OP_ABSOLUTE": "絶対値",
  "MATH_SINGLE_TOOLTIP_ABS": "絶対値を返す。",
  "MATH_SINGLE_TOOLTIP_NEG": "負の数を返す。",
  "MATH_SINGLE_TOOLTIP_LN": "数値の自然対数を返す。",
  "MATH_SINGLE_TOOLTIP_LOG10": "底が10の対数を返す。",
  "MATH_SINGLE_TOOLTIP_EXP": "ネイピア数eの数値乗を返す。",
  "MATH_SINGLE_TOOLTIP_POW10": "10の数値乗を返す。",
  "MATH_TRIG_HELPURL": "https://ja.wikipedia.org/wiki/三角関数",
  "MATH_TRIG_TOOLTIP_SIN": "(ラジアンではなく)度数の正弦（sin)を返す。",
  "MATH_TRIG_TOOLTIP_COS": "(ラジアンではなく)度数の余弦（cos)を返す。",
  "MATH_TRIG_TOOLTIP_TAN": "(ラジアンではなく)度数の正接（tan)を返す。",
  "MATH_TRIG_TOOLTIP_ASIN": "アークサイン(arcsin)を返す。",
  "MATH_TRIG_TOOLTIP_ACOS": "アークコサイン(arccosin)を返す。",
  "MATH_TRIG_TOOLTIP_ATAN": "アークタンジェント(arctan)を返す。",
  "MATH_CONSTANT_HELPURL": "https://ja.wikipedia.org/wiki/数学定数",
  "MATH_CONSTANT_TOOLTIP": "いずれかの共通の定数を返す: π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…), or ∞ (無限)。",
  "MATH_IS_EVEN": "は偶数",
  "MATH_IS_ODD": "は奇数",
  "MATH_IS_PRIME": "は素数",
  "MATH_IS_WHOLE": "は整数",
  "MATH_IS_POSITIVE": "は正",
  "MATH_IS_NEGATIVE": "は負",
  "MATH_IS_DIVISIBLE_BY": "は以下で割りきれる：",
  "MATH_IS_TOOLTIP": "数字が、偶数、奇数、素数、整数、正数、負数、または特定の数で割り切れるかどうかを判定し、true か false を返します。",
  "MATH_CHANGE_HELPURL": "https://ja.wikipedia.org/wiki/加法",
  "MATH_CHANGE_TITLE": "%1 を %2 増やす",
  "MATH_CHANGE_TOOLTIP": "変数'%1'に数をたす。",
  "MATH_ROUND_HELPURL": "https://ja.wikipedia.org/wiki/端数処理",
  "MATH_ROUND_TOOLTIP": "数値を切り上げるか切り捨てる。",
  "MATH_ROUND_OPERATOR_ROUND": "四捨五入",
  "MATH_ROUND_OPERATOR_ROUNDUP": "切り上げ",
  "MATH_ROUND_OPERATOR_ROUNDDOWN": "切り捨て",
  "MATH_ONLIST_OPERATOR_SUM": "リストの合計",
  "MATH_ONLIST_TOOLTIP_SUM": "リストの数値を足して返す。",
  "MATH_ONLIST_OPERATOR_MIN": "リストの最小値",
  "MATH_ONLIST_TOOLTIP_MIN": "リストの最小値を返す。",
  "MATH_ONLIST_OPERATOR_MAX": "リストの最大値",
  "MATH_ONLIST_TOOLTIP_MAX": "リストの最大値を返す。",
  "MATH_ONLIST_OPERATOR_AVERAGE": "リストの平均",
  "MATH_ONLIST_TOOLTIP_AVERAGE": "リストの数値の平均(算術平均) を返す。",
  "MATH_ONLIST_OPERATOR_MEDIAN": "リストの中央値",
  "MATH_ONLIST_TOOLTIP_MEDIAN": "リストの中央値を返す。",
  "MATH_ONLIST_OPERATOR_MODE": "リストの最頻値",
  "MATH_ONLIST_TOOLTIP_MODE": "リスト中の最頻項目のリストを返す。",
  "MATH_ONLIST_OPERATOR_STD_DEV": "リストの標準偏差",
  "MATH_ONLIST_TOOLTIP_STD_DEV": "リストの標準偏差を返す。",
  "MATH_ONLIST_OPERATOR_RANDOM": "リストからランダムに選ばれた項目",
  "MATH_ONLIST_TOOLTIP_RANDOM": "リストからランダムに選ばれた要素を返す。",
  "MATH_MODULO_HELPURL": "https://en.wikipedia.org/wiki/Modulo_operation",
  "MATH_MODULO_TITLE": "%1÷%2の余り",
  "MATH_MODULO_TOOLTIP": "2つの数値の割り算の余りを返す。",
  "MATH_CONSTRAIN_TITLE": "%1 を %2 以上 %3 以下の範囲に制限",
  "MATH_CONSTRAIN_TOOLTIP": "指定した上限と下限の間に値を制限する(上限と下限の値を含む)。",
  "MATH_RANDOM_INT_HELPURL": "https://en.wikipedia.org/wiki/Random_number_generation",
  "MATH_RANDOM_INT_TITLE": "%1から%2までのランダムな整数",
  "MATH_RANDOM_INT_TOOLTIP": "指定された(上下限を含む)範囲のランダムな整数を返します。",
  "MATH_RANDOM_FLOAT_HELPURL": "https://en.wikipedia.org/wiki/Random_number_generation",
  "MATH_RANDOM_FLOAT_TITLE_RANDOM": "1未満の正の乱数",
  "MATH_RANDOM_FLOAT_TOOLTIP": "0.0以上で1.0未満の範囲の乱数を返します。",
  "TEXT_TEXT_HELPURL": "https://ja.wikipedia.org/wiki/文字列",
  "TEXT_TEXT_TOOLTIP": "文字、単語、または行のテキスト。",
  "TEXT_JOIN_TITLE_CREATEWITH": "テキストの作成：",
  "TEXT_JOIN_TOOLTIP": "任意の数の項目一部を一緒に接合してテキストを作成。",
  "TEXT_CREATE_JOIN_TITLE_JOIN": "結合",
  "TEXT_CREATE_JOIN_TOOLTIP": "セクションを追加、削除、または順序変更して、ブロックを再構成。",
  "TEXT_CREATE_JOIN_ITEM_TOOLTIP": "テキストへ項目を追加。",
  "TEXT_APPEND_TITLE": "項目 %1 へテキストを追加 %2",
  "TEXT_APPEND_TOOLTIP": "変数 '%1' にテキストを追加。",
  "TEXT_LENGTH_TITLE": "%1の長さ",
  "TEXT_LENGTH_TOOLTIP": "与えられたテキストの(スペースを含む)文字数を返す。",
  "TEXT_ISEMPTY_TITLE": "%1が空",
  "TEXT_ISEMPTY_TOOLTIP": "与えられたテキストが空の場合は true を返す。",
  "TEXT_INDEXOF_TOOLTIP": "二番目のテキストの中で一番目のテキストが最初／最後に出現したインデックスを返す。テキストが見つからない場合は%1を返す。",
  "TEXT_INDEXOF_TITLE": "テキスト %1 %2 %3",
  "TEXT_INDEXOF_OPERATOR_FIRST": "で以下のテキストの最初の出現箇所を検索：",
  "TEXT_INDEXOF_OPERATOR_LAST": "で以下のテキストの最後の出現箇所を検索：",
  "TEXT_CHARAT_TITLE": "テキスト %1 %2",
  "TEXT_CHARAT_FROM_START": "の、以下の数字番目の文字：",
  "TEXT_CHARAT_FROM_END": "の、後ろから以下の数字番目の文字：",
  "TEXT_CHARAT_FIRST": "最初の文字を得る",
  "TEXT_CHARAT_LAST": "最後の文字を得る",
  "TEXT_CHARAT_RANDOM": "ランダムな文字を得る",
  "TEXT_CHARAT_TAIL": "",
  "TEXT_CHARAT_TOOLTIP": "指定された位置の文字を返します。",
  "TEXT_GET_SUBSTRING_TOOLTIP": "テキストの指定部分を返します。",
  "TEXT_GET_SUBSTRING_INPUT_IN_TEXT": "テキスト",
  "TEXT_GET_SUBSTRING_START_FROM_START": "の部分文字列を取得；開始位置：",
  "TEXT_GET_SUBSTRING_START_FROM_END": "の部分文字列を取得；開始位置：後ろから",
  "TEXT_GET_SUBSTRING_START_FIRST": "の部分文字列を取得；最初から",
  "TEXT_GET_SUBSTRING_END_FROM_START": "終了位置：",
  "TEXT_GET_SUBSTRING_END_FROM_END": "終了位置：後ろから",
  "TEXT_GET_SUBSTRING_END_LAST": "最後の文字",
  "TEXT_GET_SUBSTRING_TAIL": "",
  "TEXT_CHANGECASE_TOOLTIP": "別のケースに、テキストのコピーを返します。",
  "TEXT_CHANGECASE_OPERATOR_UPPERCASE": "大文字に",
  "TEXT_CHANGECASE_OPERATOR_LOWERCASE": "小文字に",
  "TEXT_CHANGECASE_OPERATOR_TITLECASE": "タイトル ケースに",
  "TEXT_TRIM_TOOLTIP": "スペースを 1 つまたは両方の端から削除したのち、テキストのコピーを返します。",
  "TEXT_TRIM_OPERATOR_BOTH": "両端のスペースを取り除く",
  "TEXT_TRIM_OPERATOR_LEFT": "左端のスペースを取り除く",
  "TEXT_TRIM_OPERATOR_RIGHT": "右端のスペースを取り除く",
  "TEXT_PRINT_TITLE": "%1 をシリアル出力する",
  "TEXT_PRINT_TOOLTIP": "指定したテキスト、番号または他の値を印刷します。",
  "TEXT_PROMPT_TYPE_TEXT": "メッセージでテキスト入力を求める",
  "TEXT_PROMPT_TYPE_NUMBER": "メッセージで番号の入力を求める",
  "TEXT_PROMPT_TOOLTIP_NUMBER": "ユーザーに数値のインプットを求める。",
  "TEXT_PROMPT_TOOLTIP_TEXT": "ユーザーにテキスト入力を求める。",
  "TEXT_COUNT_MESSAGE0": "%2に含まれる%1の数を数える",
  "TEXT_COUNT_HELPURL": "https://github.com/google/blockly/wiki/Text#counting-substrings",
  "TEXT_COUNT_TOOLTIP": "とある文が別の文のなかに使われた回数を数える。",
  "TEXT_REPLACE_MESSAGE0": "%3に含まれる%1を%2に置換",
  "TEXT_REPLACE_HELPURL": "https://github.com/google/blockly/wiki/Text#replacing-substrings",
  "TEXT_REPLACE_TOOLTIP": "文に含まれるキーワードを置換する。",
  "TEXT_REVERSE_MESSAGE0": "%1を逆順に",
  "TEXT_REVERSE_HELPURL": "https://github.com/google/blockly/wiki/Text#reversing-text",
  "TEXT_REVERSE_TOOLTIP": "文の文字を逆順にする。",
  "LISTS_CREATE_EMPTY_HELPURL": "https://github.com/google/blockly/wiki/Lists#create-empty-list",
  "LISTS_CREATE_EMPTY_TITLE": "空のリスト",
  "LISTS_CREATE_EMPTY_TOOLTIP": "長さ０でデータ・レコードを含まない空のリストを返す",
  "LISTS_CREATE_WITH_TOOLTIP": "項目数が不定のリストを作成。",
  "LISTS_CREATE_WITH_INPUT_WITH": "以下を使ってリストを作成:",
  "LISTS_CREATE_WITH_CONTAINER_TITLE_ADD": "リスト",
  "LISTS_CREATE_WITH_CONTAINER_TOOLTIP": "追加、削除、またはセクションの順序変更をして、このリスト・ブロックを再構成する。",
  "LISTS_CREATE_WITH_ITEM_TOOLTIP": "リストに項目を追加。",
  "LISTS_REPEAT_TOOLTIP": "与えられた値を指定された回数繰り返してリストを作成。",
  "LISTS_REPEAT_TITLE": "項目%1を%2回繰り返したリストを作成",
  "LISTS_LENGTH_TITLE": "%1の長さ",
  "LISTS_LENGTH_TOOLTIP": "リストの長さを返します。",
  "LISTS_ISEMPTY_TITLE": "%1が空",
  "LISTS_ISEMPTY_TOOLTIP": "リストが空の場合は、true を返します。",
  "LISTS_INLIST": "リスト",
  "LISTS_INDEX_OF_FIRST": "で以下のアイテムの最初の出現箇所を検索:",
  "LISTS_INDEX_OF_LAST": "で以下のテキストの最後の出現箇所を検索:",
  "LISTS_INDEX_OF_TOOLTIP": "リスト項目の最初/最後に出現するインデックス位置を返します。項目が見つからない場合は %1 を返します。",
  "LISTS_GET_INDEX_GET": "取得",
  "LISTS_GET_INDEX_GET_REMOVE": "取得して削除",
  "LISTS_GET_INDEX_REMOVE": "削除",
  "LISTS_GET_INDEX_FROM_START": "#",
  "LISTS_GET_INDEX_FROM_END": "位置:後ろから",
  "LISTS_GET_INDEX_FIRST": "最初",
  "LISTS_GET_INDEX_LAST": "最後",
  "LISTS_GET_INDEX_RANDOM": "ランダム",
  "LISTS_GET_INDEX_TAIL": "",
  "LISTS_INDEX_FROM_START_TOOLTIP": "%1 は、最初の項目です。",
  "LISTS_INDEX_FROM_END_TOOLTIP": "%1 は、最後の項目です。",
  "LISTS_GET_INDEX_TOOLTIP_GET_FROM": "リスト内の指定位置にある項目を返します。",
  "LISTS_GET_INDEX_TOOLTIP_GET_FIRST": "リストの最初の項目を返します。",
  "LISTS_GET_INDEX_TOOLTIP_GET_LAST": "リストの最後の項目を返します。",
  "LISTS_GET_INDEX_TOOLTIP_GET_RANDOM": "リストからランダムに項目を返します。",
  "LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM": "リスト内の指定位置にある項目を削除し返します。",
  "LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST": "リスト内の最初の項目を削除し返します。",
  "LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST": "リスト内の最後の項目を削除し返します。",
  "LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM": "リスト内のランダムに選んだ項目を削除し返します。",
  "LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM": "リスト内の指定された項目を削除します。",
  "LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST": "リスト内の最初の項目を削除します。",
  "LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST": "リスト内の最後の項目を削除します。",
  "LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM": "リスト内にある項をランダムに削除します。",
  "LISTS_SET_INDEX_SET": "セット",
  "LISTS_SET_INDEX_INSERT": "挿入位置:",
  "LISTS_SET_INDEX_INPUT_TO": "値:",
  "LISTS_SET_INDEX_TOOLTIP_SET_FROM": "リスト内の指定された位置に項目を設定します。",
  "LISTS_SET_INDEX_TOOLTIP_SET_FIRST": "リスト内に最初の項目を設定します。",
  "LISTS_SET_INDEX_TOOLTIP_SET_LAST": "リスト内の最後の項目を設定します。",
  "LISTS_SET_INDEX_TOOLTIP_SET_RANDOM": "リスト内にランダムな項目を設定します。",
  "LISTS_SET_INDEX_TOOLTIP_INSERT_FROM": "リスト内の指定位置に項目を挿入します。",
  "LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST": "リストの先頭に項目を挿入します。",
  "LISTS_SET_INDEX_TOOLTIP_INSERT_LAST": "リストの末尾に項目を追加します。",
  "LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM": "リストに項目をランダムに挿入します。",
  "LISTS_GET_SUBLIST_START_FROM_START": "# からサブディレクトリのリストを取得します。",
  "LISTS_GET_SUBLIST_START_FROM_END": "末尾から #のサブリストを取得します。",
  "LISTS_GET_SUBLIST_START_FIRST": "最初からサブリストを取得する。",
  "LISTS_GET_SUBLIST_END_FROM_START": "終了位置:",
  "LISTS_GET_SUBLIST_END_FROM_END": "終了位置:後ろから",
  "LISTS_GET_SUBLIST_END_LAST": "最後まで",
  "LISTS_GET_SUBLIST_TAIL": "",
  "LISTS_GET_SUBLIST_TOOLTIP": "リストの指定された部分のコピーを作成する。",
  "LISTS_SORT_HELPURL": "https://github.com/google/blockly/wiki/Lists#sorting-a-list",
  "LISTS_SORT_TITLE": "%1 ( %2 ) に %3 を並び替える",
  "LISTS_SORT_TOOLTIP": "リストのコピーを並べ替え。",
  "LISTS_SORT_ORDER_ASCENDING": "昇順",
  "LISTS_SORT_ORDER_DESCENDING": "降順",
  "LISTS_SORT_TYPE_NUMERIC": "数値順",
  "LISTS_SORT_TYPE_TEXT": "アルファベット順",
  "LISTS_SORT_TYPE_IGNORECASE": "アルファベット順(大文字・小文字の区別無し)",
  "LISTS_SPLIT_LIST_FROM_TEXT": "テキストからリストを作る",
  "LISTS_SPLIT_TEXT_FROM_LIST": "リストからテキストを作る",
  "LISTS_SPLIT_WITH_DELIMITER": "区切り記号",
  "LISTS_SPLIT_TOOLTIP_SPLIT": "テキストを区切り記号で分割したリストにする。",
  "LISTS_SPLIT_TOOLTIP_JOIN": "テキストのリストを区切り記号で区切られた一つのテキストにする。",
  "LISTS_REVERSE_HELPURL": "https://github.com/google/blockly/wiki/Lists#reversing-a-list",
  "LISTS_REVERSE_MESSAGE0": "%1の逆順のリスト",
  "LISTS_REVERSE_TOOLTIP": "リストのコピーを逆順にする。",
  "VARIABLES_GET_TOOLTIP": "この変数の値を返します。",
  "VARIABLES_GET_CREATE_SET": "'セット%1を作成します。",
  "VARIABLES_SET": "%1 を %2 にする",
  "VARIABLES_SET_TOOLTIP": "この入力を変数と等しくなるように設定します。",
  "VARIABLES_SET_CREATE_GET": "'%1 を取得' を作成します。",
  "PROCEDURES_DEFNORETURN_HELPURL": "https://ja.wikipedia.org/wiki/サブルーチン",
  "PROCEDURES_DEFNORETURN_TITLE": "関数",
  "PROCEDURES_DEFNORETURN_PROCEDURE": "dosomething",
  "PROCEDURES_BEFORE_PARAMS": "with:",
  "PROCEDURES_CALL_BEFORE_PARAMS": "",
  "PROCEDURES_DEFNORETURN_DO": "",
  "PROCEDURES_DEFNORETURN_TOOLTIP": "出力なしの関数を作成します。",
  "PROCEDURES_DEFNORETURN_COMMENT": "この関数の説明…",
  "PROCEDURES_DEFRETURN_HELPURL": "https://ja.wikipedia.org/wiki/サブルーチン",
  "PROCEDURES_DEFRETURN_RETURN": "返す",
  "PROCEDURES_DEFRETURN_TOOLTIP": "一つの出力を持つ関数を作成します。",
  "PROCEDURES_ALLOW_STATEMENTS": "ステートメントを許可",
  "PROCEDURES_DEF_DUPLICATE_WARNING": "警告: この関数には重複するパラメーターがあります。",
  "PROCEDURES_CALLNORETURN_HELPURL": "https://ja.wikipedia.org/wiki/サブルーチン",
  "PROCEDURES_CALLNORETURN_TOOLTIP": "ユーザー定義関数 '%1' を実行します。",
  "PROCEDURES_CALLRETURN_HELPURL": "https://ja.wikipedia.org/wiki/サブルーチン",
  "PROCEDURES_CALLRETURN_TOOLTIP": "ユーザー定義関数 '%1' を実行し、その出力を使用します。",
  "PROCEDURES_MUTATORCONTAINER_TITLE": "入力",
  "PROCEDURES_MUTATORCONTAINER_TOOLTIP": "この関数への入力の追加、削除、順番変更。",
  "PROCEDURES_MUTATORARG_TITLE": "入力名:",
  "PROCEDURES_MUTATORARG_TOOLTIP": "関数への入力の追加。",
  "PROCEDURES_HIGHLIGHT_DEF": "関数の内容を強調表示します。",
  "PROCEDURES_CREATE_DO": "'%1' を作成",
  "PROCEDURES_IFRETURN_TOOLTIP": "1番目の値が true の場合、2番目の値を返します。",
  "PROCEDURES_IFRETURN_WARNING": "警告: このブロックは、関数定義内でのみ使用できます。",
  "PROCEDURES_DEFRETURN_TITLE": "関数",
  "CONTROLS_IF_IF_TITLE_IF": "if",
  "CONTROLS_WHILEUNTIL_INPUT_DO": "であれば",
  "CONTROLS_IF_MSG_THEN": "であれば",
  "CONTROLS_IF_ELSE_TITLE_ELSE": "else",
  "PROCEDURES_DEFRETURN_PROCEDURE": "dosomething",
  "LISTS_GET_SUBLIST_INPUT_IN_LIST": "リスト",
  "LISTS_GET_INDEX_INPUT_IN_LIST": "リスト",
  "MATH_CHANGE_TITLE_ITEM": "item",
  "PROCEDURES_DEFRETURN_DO": "",
  "CONTROLS_IF_ELSEIF_TITLE_ELSEIF": "else if",
  "LISTS_GET_INDEX_HELPURL": "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list",
  "CONTROLS_FOREACH_INPUT_DO": "であれば",
  "LISTS_SET_INDEX_INPUT_IN_LIST": "リスト",
  "CONTROLS_FOR_INPUT_DO": "であれば",
  "LISTS_CREATE_WITH_ITEM_TITLE": "item",
  "TEXT_APPEND_VARIABLE": "item",
  "TEXT_CREATE_JOIN_ITEM_TITLE_ITEM": "item",
  "LISTS_INDEX_OF_INPUT_IN_LIST": "リスト",
  "PROCEDURES_DEFRETURN_COMMENT": "Describe this function...",
  "SETTING": "設定",
  "SETTING_first": "uiflow|UNK|UNK|UNKへようこそ",
  "VIDEO": "しばしば起こること",
  "VIDEO-ERROR": "あなたのブラウザは一時的に使用不能です。おかわりしてみてください",
  "VIDEO_GET": "始めるビデオ",
  "OPEN": "開く",
  "SAVE": "保存する",
  "DOWNLOAD": "ダウンロード",
  "API_KEY": "APIキー:",
  "LANGUAGE": "言語 :",
  "FIRMWARE": "ファームウェア :",
  "DOCS": "ドキュメント:",
  "HIDEUI": "隠す",
  "SHOWUI": "表示",
  "CANCEL": "キャンセル",
  "OK": "OK",
  "PROJECT": "プロジェクト",
  "BUTTON": "ボタン",
  "DUAL_BUTTON": "デュアルボタン",
  "RELAY": "リレー",
  "MAKEY_ALL_VALUE": "%1 %2 Get all value",
  "RELAY_SET_ON": "%1 relay %2 set on",
  "RELAY_SET_OFF": "%1 relay %2 set off",
  "LEGO_READ_ENCODER": " Read %1 %2 encode",
  "IIC_READ_BYTE": "I2Cアドレス %1 から1バイト読み込む",
  "IIC_READ_ADDR_FROM_BYTE": "I2Cアドレス %1 レジスタ %2 から1バイト読み込む",
  "MOTOR_G_CODE": "%1 Put g code %2 %3",
  "MOTOR_SET_MODE": "%1 Set mode %2 %3",
  "MOTOR_LOCK": "%1 lock motor",
  "MOTOR_UNLOCK": "%1 unlock motor",
  "LABEL_SET_FONT": "%1 ラベル %2 のフォントを %3 に設定",
  "DAC_STATE": " %3 output voltage %1 %2 save: %4",
  "ADC_STATE": " read %1 %2 vol",
  "TOF_STATE": " %2 と測定物との距離[mm]を読み込む %1",
  "NCIR_READ": "%1 %2 から温度[℃]を読み込む",
  "IR_STATE": "%1 %2 state",
  "IR_ON": "set %1 %2 on",
  "IR_OFF": "set %1 %2 off",
  "EXTIO_SET_PORT": "%1 %2 set mode %3",
  "EXTIO_SET_PIN": "%1 %2 set  pin %4 mode  %3 ",
  "EXTIO_GET_DIGIREADPORT": " %2 digitReadPort %1",
  "EXTIO_SET_DIGIWRITEPORT": "%1 %3  digiWritePort %2 ",
  "EXTIO_SET_DIGIREAD": "%1 %2 digitRead %3",
  "EXTIO_SET_DIGIWRITE": "%1 %2  digitWrite %3 %4",
  "MQTT_SET_CLIENT": "MQTTブローカーとクライアントID %1 サーバーアドレス %2 ポート番号 %3 ユーザー名 %4 パスワード %5 keepalive %6 で接続",
  "MQTT_SUB": "トピック %1 にサブスクライブしてデータを受信したとき",
  "MQTT_START": "通信を開始する",
  "MQTT_GET_TOPICDATA": "受信データ",
  "MQTT_PUBLISH": "トピック %1 データ %2 QOS %3 でパブリッシュ",
  "WIFI_CONNECT": "Wi-Fiを接続する (ログをLCD %1 に出す)",
  "REMOTE_ADD_SWITCH": "リモートスイッチを追加 タイトル",
  "ADD_REMOTE_BUTTON": "リモートボタンを追加 タイトル",
  "ADD_REMOTE_SLIDER": "リモートスライダーを追加 タイトル",
  "ADD_REMOTE_LABEL": {
    "ADD": "リモートラベルを種類",
    "LABEL": "で追加 タイトル"
  },
  "DOC": "ドキュメント",
  "EXAMPLE": "例",
  "MANAGER": "マネージャ",
  "CATEGORY": "デバイス:",
  "PORT": "ポート",
  "COUNT": "count",
  "LOADING": "読み込み中....",
  "EXAMPLES": "例",
  "THEME": "テーマ:",
  "ADDIMG": "画像の追加",
  "BLOCKLYS": "blocklys",
  "IMAGES": "画像",
  "NODATA": "データ無し",
  "DELETE": "削除",
  "UPLOAD": "アップロード中",
  "RELOAD": "再読み込み",
  "RESOURCEMANAGER": "Device File Manager",
  "VERSION": "バージョン:",
  "DISCONNECTED": "切断中",
  "CONNECTED": "接続済み",
  "CONNECTING": "接続中",
  "EXECUTECODE_ERROR": "コードのアップロードが失敗しました。あなたのデバイスはおそらくオフラインなので確認して再度試して下さい。",
  "APIKRY_ERROR": "コードの実行かアップロードが失敗しました。APIキーとファイル名を確認して下さい。",
  "CONNECT_LOADING": "M5に接続しています ....",
  "FIRMWARE_WARNING": "最新のファームウエアバージョンは {{ value}} です。より良い体験のためにアップデートをお願いします。",
  "FILE_SIZE_ERROR": "ファイルの大きさは25KB以下でないといけません。",
  "FILE_NAME_EROR": "ファイル名は30文字以下でないといけません。",
  "EXECUTCODE_SUCCESS": "コードの実行が成功しました。",
  "KEY_ISNULL_ERROR": "APIキーが設定されていません。",
  "NAME_ISNULL_ERROR": "プロジェクト名が設定されていません。",
  "UPLOADING_LOADING": "読み込み中です。しばらくお待ちください。",
  "UPLOADING_SUCCESS": "コードのアップロードが成功しました。M5は再起動します。",
  "REMOTE_ERROR": "リモートのデータがありません。",
  "id": "ID",
  "name": "名前",
  "color": "色",
  "borderColor": "枠の色",
  "backgroundColor": "背景色",
  "text": "テキスト",
  "textOffset": "テキストのオフセット",
  "layer": "レイヤー",
  "createTime": "作成日",
  "rotation": "向き",
  "type": "タイプ",
  "x": "X",
  "y": "Y",
  "x1": "X1",
  "y1": "Y1",
  "x2": "X2",
  "y2": "Y2",
  "x3": "X3",
  "y3": "Y3",
  "font": "フォント",
  "width": "幅",
  "height": "高さ",
  "radius": "半径",
  "imagePath": "画像のパス",
  "imageWidth": "画像の幅",
  "imageHeight": "画像の高さ",
  "imageInvert": "色を反転",
  "imageThreshold": "閾値",
  "lineWidth": "線の幅",
  "selectedColor": "Selected Color",
  "unselectedColor": "Unselected Color",
  "trackColor": "Trackの色",
  "visibility": "可視性",
  "backgroundImage": "背景の画像",
  "UPDATARECORD": "記録を更新する :",
  "M5_LED_OFF": "LEDを消す",
  "M5_LED_ON": "LEDを点ける",
  "AXP_SETLCDVOL": "画面の電圧を %1 [V]に設定する",
  "AXP_ISCHARGE": "バッテリーが充電中である",
  "NET_P2P": "%1 P2PでAPIキー %2 %3 で メッセージ %4 を送信する",
  "NET_GETP2P": "%1 P2Pでデータを受信する",
  "EASY": "Easy I/O",
  "PULSE": "Pulse",
  "_OPTION_TO_PRESSFOR": "pressfor",
  "_OPTION_DOUBLE": "doublePress",
  "BUTTONC_MULITBTNCB": "ボタン %1 と %2 が押されたとき",
  "BUTTONC_ISPRESSED": "  %1 ボタン %2 が %3 である",
  "UNIT_BUTTON": "Button %1 %2  ",
  "UNIT_DUAL_BUTTON": " %1 の %2 ボタンが %3 のとき",
  "UNIT_DUAL_BUTTON_STATE": " %1 %2 の %3 ボタンが %4 である",
  "WEIGH_GET_RAWDATA": "%1 Get %2 raw data",
  "EMOJI_CHANGE": "%1 絵文字の背景画像を %2 に設定する",
  "PWM_PAUSE": "%1 %2 の出力を停止する",
  "PWM_RESUME": "%1 %2 の出力を再開する",
  "ADC_ATTEN": "%1 %2 の入力減衰率を %3 に設定する",
  "DAC_FREQ": "%1 %2 の周波数を %3 [Hz]に設定する",
  "DAC_BEEP": "%1 %2 から周波数 %3 [Hz] 持続時間 %4 [ミリ秒] 出力電圧スケール %5 でビープ音を鳴らす",
  "DAC_WAVEFROM": "%1 %2 から周波数 %3 Hz タイプ %4 持続時間 %5 [ミリ秒] 出力電圧スケール %6 正弦波オフセット %7 正弦波サイクル反転 %8 で出力する",
  "DAC_STOPWAVE": "%1 %2 の出力を停止する",
  "IIC_WRITE_BYTE": "%1 レジスタ %2 に %3 を書き出す",
  "IIC_WRITE_BIG": "%1 レジスタ %2 に %3 を %4 エンディアンで書き出す",
  "IIC_SET_C": "%1 SDA %2 SCL %3 freq %4 に設定",
  "IIC_READ_REQ": "%1 レジスタ %2 から1バイト読み取る",
  "IIC_READ_READ": "%1 から %2 バイト読み取る",
  "IIC_READ_RES": "%1 レジスタ %2 から %3 エンディアンで2バイト読み取る",
  "IIC_READ_REG": "%1 レジスタ %2 から %3 バイト読み取る",
  "ANGLE_READRAW": "%1 Get %2 readraw",
  "COLOR_GETD": " %1 生データを読み取る",
  "CARDKB_GETKEY": "%1 文字コード",
  "CARDKB_GETSTR": "%1 文字列",
  "CARDKB_GETPRESSED": "%1 が押された",
  "PINS_DIGITAL_GET": "%1 %2 をデジタルで読み取る",
  "PINS_DIGITAL_SET": "%1 %2 に %3 ををデジタルで出力する",
  "TITLE_SET_COLOR_RGB": "%1 タイトル %2 の文字色をRGB(赤 %3 緑 %4 青 %5 )色に設定する",
  "TITLE_SET_BGCOLOR_RGB": "%1 タイトル %2 の背景色をRGB(赤 %3 緑 %4 青 %5 )色に設定する",
  "DAC_SETDATA": "%3 output voltage with raw data %1 %2 save: %4",
  "WIFI_RECONNECT": "Wi-Fiの再接続を行う",
  "WIFI_ISCONNECT": "Wi-Fiと接続している",
  "REMOTE_ADD_GRAPH": "creat graph %1 2%",
  "COLOUR_RANDOM_HELPURL": "http://randomcolour.com",
  "CONTROLS_WHILEUNTIL_HELPURL": "https://github.com/google/blockly/wiki/Loops#repeat",
  "CONTROLS_FOR_HELPURL": "https://github.com/google/blockly/wiki/Loops#count-with",
  "CONTROLS_FOREACH_HELPURL": "https://github.com/google/blockly/wiki/Loops#for-each",
  "CONTROLS_FLOW_STATEMENTS_HELPURL": "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks",
  "CONTROLS_IF_HELPURL": "https://github.com/google/blockly/wiki/IfElse",
  "LOGIC_OPERATION_HELPURL": "https://github.com/google/blockly/wiki/Logic#logical-operations",
  "LOGIC_BOOLEAN_HELPURL": "https://github.com/google/blockly/wiki/Logic#values",
  "MATH_ONLIST_HELPURL": "",
  "MATH_CONSTRAIN_HELPURL": "https://en.wikipedia.org/wiki/Clamping_(graphics)",
  "TEXT_JOIN_HELPURL": "https://github.com/google/blockly/wiki/Text#text-creation",
  "TEXT_APPEND_HELPURL": "https://github.com/google/blockly/wiki/Text#text-modification",
  "TEXT_LENGTH_HELPURL": "https://github.com/google/blockly/wiki/Text#text-modification",
  "TEXT_ISEMPTY_HELPURL": "https://github.com/google/blockly/wiki/Text#checking-for-empty-text",
  "TEXT_INDEXOF_HELPURL": "https://github.com/google/blockly/wiki/Text#finding-text",
  "TEXT_CHARAT_HELPURL": "https://github.com/google/blockly/wiki/Text#extracting-text",
  "TEXT_GET_SUBSTRING_HELPURL": "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text",
  "TEXT_CHANGECASE_HELPURL": "https://github.com/google/blockly/wiki/Text#adjusting-text-case",
  "TEXT_TRIM_HELPURL": "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces",
  "TEXT_PRINT_HELPURL": "https://github.com/google/blockly/wiki/Text#printing-text",
  "TEXT_PROMPT_HELPURL": "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user",
  "LISTS_CREATE_WITH_HELPURL": "https://github.com/google/blockly/wiki/Lists#create-list-with",
  "LISTS_REPEAT_HELPURL": "https://github.com/google/blockly/wiki/Lists#create-list-with",
  "LISTS_LENGTH_HELPURL": "https://github.com/google/blockly/wiki/Lists#length-of",
  "LISTS_ISEMPTY_HELPURL": "https://github.com/google/blockly/wiki/Lists#is-empty",
  "LISTS_INDEX_OF_HELPURL": "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list",
  "LISTS_SET_INDEX_HELPURL": "https://github.com/google/blockly/wiki/Lists#in-list--set",
  "LISTS_GET_SUBLIST_HELPURL": "https://github.com/google/blockly/wiki/Lists#getting-a-sublist",
  "LISTS_SPLIT_HELPURL": "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists",
  "ORDINAL_NUMBER_SUFFIX": "",
  "VARIABLES_GET_HELPURL": "https://github.com/google/blockly/wiki/Variables#get",
  "VARIABLES_SET_HELPURL": "https://github.com/google/blockly/wiki/Variables#set",
  "PROCEDURES_IFRETURN_HELPURL": "http://c2.com/cgi/wiki?GuardClause",
  "key": "%1 P2Pデータ",
  "LIDARBAR": "LIDARBOT",
  "SD": "SD",
  "ADD_REMOTE_TIMER": "Add Remote System Timer",
  "ADD_REMOTE_STATISTICS": {
    "ADD": "Add Remote",
    "LABEL": "name"
  },
  "SD_READ": "SD read file %1  from pos %2 read %3 bytes",
  "SD_WRITE": "SD write file %1 data %2 with mode %3",
  "SD_LIST": "SD list attr from %1",
  "TEXT_ADD": "%1 + %2",
  "DECODE_STR": "デコードする %1 ",
  "ENCODE_STR": "エンコードする %1 ",
  "LOGIC_TRY": "try %1",
  "LOGIC_EXCEPT": "except %1",
  "TIMER_DELAY_MS": "%2 %1 [ミリ秒]停止",
  "TIMER_GET_MS": "稼働時間[ミリ秒] %1",
  "FINGER_GET_UNKNOWN": "%1 指紋情報の読み込みに失敗したとき",
  "IMU_GET_GYR_X": "%1 X軸の角速度",
  "IMU_GET_GYR_Y": "%1 Y軸の角速度",
  "IMU_GET_GYR_Z": "%1 Z軸の角速度",
  "WIFI_doConnect": "%1 SSID %2 %3 PASSWORD %4 のWi-Fiと接続する",
  "PB_HUB": "PbHUB",
  "FACES": "FACES",
  "FACES_CALCULATOR": "電卓キー",
  "FACES_ENCODE": "エンコーダ",
  "FACES_FINGER": "指紋",
  "FACES_GAMEBOY": "ゲームボーイ",
  "FACES_JOYSTICK": "ジョイスティック",
  "FACES_KEYBOARD": "キーボード",
  "FACES_RFID": "RFID",
  "FACES_CALC_READSTR": "%1 押された文字列を取得",
  "FACES_CALC_READKEY": "%1 押されたボタンの文字コード",
  "FACES_CALC_CLEARSTR": "押された文字列を消去",
  "FACES_CALC_DELETESTRLAST": "押された文字列の最後の文字を消去",
  "FACES_CALC_ISNEWKEYPRESS": "%1 Is new button pressed",
  "FACES_ENCODE_SETLED": "位置 %1 の色を %2 に設定",
  "FACES_ENCODE_CLEARVALUE": "%1 エンコーダの値をゼロに設定",
  "FACES_ENCODE_GETVALUE": "%1 エンコーダの値",
  "FACES_ENCODE_GETDIR": "%1 エンコーダの方向",
  "FACES_ENCODE_GETPRESS": "%1 エンコーダが押されているか",
  "FACES_FINGER_GET_STATE": "%1 の状態",
  "FACES_FINGER_REMOVEALL": "%1 の指紋情報を全削除",
  "FACES_FINGER_REMOVE_USER": "ID %1 の指紋情報を削除",
  "FACES_FINGER_GET_ID": "IDを読み込む",
  "FACES_FINGER_GET_ACCESS": "アクセスNoを読み込む",
  "FACES_FINGER_ADD_USER": "指紋情報をID %1 として アクセスNo %2 への追加を開始",
  "FACES_FINGER_READ": "%1 指紋情報が読み込まれたとき",
  "FACES_FINGER_GET_UNKNOWN": "%1 指紋情報の読み込みに失敗したとき",
  "FACES_GAMEBOY_GETSTATUS": "%1 が押された時",
  "FACES_GAMEBOY_GETPRESSED": "%1 が %2 である時",
  "FACES_JOYSTICK_X": "%1 %2 のX軸の入力値",
  "FACES_JOYSTICK_Y": "%1 %2 のY軸の入力値",
  "FACES_JOYSTICK_INVERT_X": "%1 %2 のX軸の入力反転値",
  "FACES_JOYSTICK_INVERT_Y": "%1 %2 のY軸の入力反転値",
  "FACES_JOYSTICK_PRESS": "%1 %2 が押されている",
  "FACES_JOYSTICK_SETLED": "%1 番目のLEDを %2 色に設定する",
  "FACES_KEYBOARD_READSTR": "押された文字列を取得 %1 ",
  "FACES_KEYBOARD_CLEARSTR": "%1 押された文字列を消去",
  "FACES_KEYBOARD_DELETESTRLAST": "%1 押された文字列の最後の文字を消去",
  "FACES_KEYBOARD_GETDIR": "%1 押されたボタンの文字コード",
  "FACES_KEYBOARD_GETPRESS": "%1 ボタンが押された時",
  "FACES_RFID_READSTR": "%1 read string from addr %2",
  "FACES_RFID_WRITE": "%1 write %2 to addr %3",
  "FACES_RFID_CARDON": "%1 card near",
  "FACES_RFID_UID": "%1 card uid",
  "PM_2_5": "PM2.5",
  "PW2_5_get_pm_factory": "%1 PM2.5 (SHT20) get %2 value in %3 (μg/m³, return int)",
  "PW2_5_get_num_above": "%1 PM2.5 (SHT20) get number of particles above %2 μm (in 0.1L of air) (return int)",
  "PA_HUB": "Pa_HUB",
  "PAHUB_SELECT": "%1 %2 のチャンネル %3 のポートを %4 に設定",
  "PAHUB_ONLY_ON": "%1 %2 のチャンネル %3 のポートをopenに設定",
  "PAHUB_PORT": "%1 %2 のポートの値を %3 に設定",
  "HAT": "HAT",
  "HAT_PIR": "PIR",
  "HAT_PIR_READ": "%1 %2 ステータス",
  "HAT_ENV": "環境",
  "HAT_ENV_PRESSURE": "%1 %2 の気圧[Pa]",
  "HAT_ENV_GET_TEMPERATURE": "%1 %2 の温度[℃]",
  "HAT_ENV_GET_HUMIDITY": "%1 Get %2 Humidity (%, return float)",
  "HAT_SPK": "スピーカー",
  "HAT_SPEAKER_TONE": "%1 で、周波数 %2 の音を %3 %4 [ミリ秒]間鳴らす",
  "HAT_SPEAKER_VOL": "%1 の音量を %2 に設定",
  "HAT_SPEAKER_SING": "%1 でトーン %2 で %3 ビート出す",
  "HAT_NCIR_READ": "%1 %2 から温度[℃]を読み込む",
  "HAT_ADC_STATE": " read %1 %2 voltage",
  "HAT_DAC_STATE": " %3 output voltage %1 %2 save: %4",
  "HAT_DAC_SETDATA": "%3 output voltage with raw data %1 %2 save: %4",
  "THERMAL": "THERMAL",
  "THERMAL_GETTMP": "%1 getTmp %2 x %3 y %4",
  "THERMAL_GETCENTERTMP": "%1 %2 getCenterTmp",
  "THERMAL_GETMAXTMP": "%1 %2 getMaxTmp",
  "THERMAL_GETMINTMP": "%1 %2 getMinTmp",
  "THERMAL_SETCOLORMAXTMP": "%1 %2 setColorMaxTmp tmp %3",
  "THERMAL_SETCOLORMINTMP": "%1 %2 setColorMinTmp tmp %3",
  "THERMAL_UPDATE": "%1 %2 update x %3 y %4 show %5 showCenter %6",
  "SCREEN": "画面",
  "SCREEN_SET_BGCOLOR": "%1 画面の背景色を %2 色に設定する",
  "MAP_CREATE_WITH_INPUT_WITH": "create map",
  "DUMPS_JSON": "%1 をJSON形式に変換したデータ",
  "LOADS_JSON": "JSON %1 を読み込んだデータ",
  "MAP": "Map",
  "JSON": "JSON",
  "MAP_ON_LOOP": "マップを作成",
  "MAP_ON_func": "%1",
  "MAP_CLEAR": "マップ %1 をクリアする",
  "GET_MAP_IN": "マップ %1 にkey %2 のデータが存在する",
  "CREATE_MAP_KEY": "key %1 value %2",
  "GET_MAP_KEY": "マップ %2 のKey %1 のvalue",
  "ADD_MAP_KEY": "マップ %1 に key %2 value %3 のデータを追加",
  "SET_MAP_KEY": "マップ %1 の key %2 のvalueを %3 に変更",
  "DELETE_MAP_KEY": "マップ %1 の key %2 のデータを削除",
  "CELLULAR": "Cellular",
  "Cellular_writeAT": "Cellular write AT %1",
  "Cellular_waitResponse": "Cellular wait %1 Response",
  "Cellular_getResponse": "Cellular get Response",
  "Cellular_testAT": "Cellular test AT ",
  "Cellular_restart": "Cellular restart",
  "Cellular_getSimState": "Cellular get SimState",
  "Cellular_init": "Cellular init",
  "Cellular_gprsConnect": "Cellular gprsConnect apn %1 user %2 password %3",
  "Cellular_connect": "Cellular connect host %1 port %2 ssl %3",
  "Cellular_send": "Cellular send data %1",
  "Cellular_send_line": "Cellular sendline data %1",
  "Cellular_getAvailable": "Cellular get Available ",
  "Cellular_read": "Cellular read",
  "Cellular_connected": "Cellular connected",
  "Cellular_getLocalIP": "Cellular get Local IP",
  "Cellular_gprsDisconect": "Cellular gprs Disconect",
  "Cellular_getNetworkState": "Cellular get Network State",
  "POWER": "バッテリー",
  "power_isCharging": "バッテリーが充電中である",
  "power_isChargeFull": "バッテリーが満充電である",
  "power_setCharge": "バッテリーの充電モードを %1 に設定する",
  "power_getBatteryLevel": "バッテリー残量[％]",
  "axp_getBatVolt": "バッテリー電圧[V]",
  "axp_getChargeI": "バッテリー充電電流[mA]",
  "axp_getDischargeI": "バッテリー放電電流[mA]",
  "timer_callback": "タイマー %1 が呼び出されたとき",
  "timer_setTimerAttr": "タイマー %1 を %2 [ミリ秒]間隔 %3 モードで生成",
  "timer_setStart": "タイマー %1 を %2 [ミリ秒]間隔 %3 モードで開始",
  "timer_setStop": "タイマー %1 を停止",
  "text_math_split": "%1 の小数点以下 %2 桁までのテキスト",
  "ESPNOW_GET_MAC_ADDR": "MACアドレス",
  "ESPNOW_ADD_PEER": "MACアドレス %1 をID %2 として共有先として追加",
  "ESPNOW_SET_PMK": "ペアリングキーを %1 に設定する",
  "ESPNOW_RECV_CB": "MACアドレス %1 からデータ %2 を受信",
  "ESPNOW_SEND_CB": "データ送信を完了 (送信成功フラグ %1)",
  "ESPNOW_BROADCAST": "データ %1 をブロードキャスト送信",
  "ESPOW_SEND": "ID %1 へ データ %2 を送信",
  "RGB_MULTI_SET_SHOW_LOCK": "Set %1 show lock %2",
  "RGB_MULTI_SHOW": "Show %1 RGB LED",
  "SCREEN_SET_ROTATION": "画面の向きのモードを %1 に設定する",
  "SCREEN_SET_BRIGHTNESS": "画面の明るさを %1 に設定する",
  "AXP": "電源",
  "AXP_GET_CHARGE_STATE": "充電状況",
  "AXP_GET_BAT_VOLTAGE": "バッテリー電圧",
  "AXP_GET_BAT_CURRENT": "バッテリー電流",
  "AXP_GET_VIN_VOLTAGE": "Vin 電圧",
  "AXP_GET_VIN_CURRENT": "Vin 電流",
  "AXP_GET_VBUS_VOLTAGE": "VBus 電圧",
  "AXP_GET_VBUS_CURRENT": "VBus 電流",
  "AXP_GET_TEMP_IN_AXP192": "AXP192 温度",
  "AXP_POWER_OFF": "電源オフ",
  "AXP_SET_CHARGE_CURRENT": "バッテリー充電電流を %1 にする",
  "AXP_SET_LD02_VOLTAGE": "LCD 電圧を %1 にする",
  "HAT_NCIR": "NCIR",
  "HAT_ADC": "ADC",
  "HAT_DAC": "DAC",
  "HAT_YUN": "YUN",
  "HAT_YUN_GET_PRESURE": "YUNの気圧 %1",
  "HAT_YUN_GET_BRIGHTNESS": "YUNの明るさ %1",
  "HAT_YUN_SET_COLOR": "%1 YUNの %2 %3 番目のLEDのRGBの色を %4 にする",
  "HAT_YUN_SET_ALL_COLOR": "%1 YUNの %2 全てのLEDのRGBの色を %3 にする",
  "HAT_SERVO": "サーボ",
  "HAT_SERVO_SET_ANGLE": "サーボ %1 %2 %3 を %4 度回転",
  "HAT_SERVO_WRITE": "サーボ %1 %2 %3 の書き込み間隔を %4 %5 [マイクロ秒]に設定する",
  "HAT_SERVOS": "SERVOS",
  "HAT_SERVOS_SET_ANGLE": "%1 Set %2 servos %3 rotate %4 %5",
  "HAT_SERVOS_WRITE": "%1 Set %2 servos %3 write %4 %5 μs",
  "HAT_SERVOS_SET_COLOR": "%1 Set RGB Bar color %2",
  "HAT_SERVOS_SET_RGB_COLOR": "%1 Set RGB Bar color R %2 G %3 B %4",
  "HAT_PUPPY": "PUPPY",
  "HAT_PUPPY_SET_ANGLE": "%1 Set %2 servo %3 rotate %4 %5",
  "HAT_PUPPY_SET_ALL_ANGLE": "set servo angle 0: %1 1:%2 2:%3 3:%4",
  "HAT_JOYSTICK": "ジョイスティック",
  "HAT_JOYSTICK_GET_X": "%1 %2 のX軸の入力値",
  "HAT_JOYSTICK_GET_Y": "%1 %2 のY軸の入力値",
  "HAT_JOYSTICK_GET_PRESSED": "%1 %2 が押されている",
  "HAT_JOYSTICK_GET_REVERSE_X": "%1 %2 のX軸の入力反転値",
  "HAT_JOYSTICK_GET_REVERSE_Y": "%1 %2 のY軸の入力反転値",
  "HAT_BUGC": "BugC",
  "HAT_BUGC_SET_PULSE": "足 %1 のパルスを %2 に設定する",
  "HAT_BUGC_SET_ALL_PULSE": "全ての足のパルスを 左前脚 %1 右前足 %2 左後脚 %3 右後脚 %4 に設定する",
  "HAT_BUGC_SET_COLOR": "%1 LEDバーの %2 番目のLEDを %3 色に設定する",
  "HAT_BUGC_SET_RGB_COLOR": "%1 LEDバーの %2 番目をRGB(赤 %3 緑 %4 青 %5 )色に設定する",
  "HAT_BUGC_SET_ALL_RGB_COLOR": "%1 LEDバーの色をRGB(赤 %2 緑 %3 青 %4 )色に設定する",
  "HAT_FINGER": "FINGER",
  "HAT_FINGER_GET_STATE": "%1 get state",
  "HAT_FINGER_GET_ACCESS": "get access",
  "HAT_FINGER_GET_ID": "get id",
  "HAT_FINGER_REMOVE_ALL": "%1 removeAll",
  "HAT_FINGER_REMOVE_USER": "remove %1 id %2",
  "HAT_FINGER_ADD_USER": "%1 add user id %2 access %3",
  "HAT_FINGER_READ": "%1 read user with id access",
  "HAT_FINGER_GET_UNKNOWN": "%1 getUnknown",
  "HAT_BEETLEC": "BeetleC",
  "HAT_BEETLEC_SET_WHEEL_SPEED": "Set BeetleC %1 wheel speed %2",
  "HAT_BEETLEC_SET_COLOR": "%1 Set BeetleC index %2 %3 RGB color %4",
  "HAT_BEETLEC_SET_ALL_COLOR": "%1 Set BeetleC %2 all RGB color %3",
  "HAT_JOYC": "JoyC",
  "HAT_JOYC_SET_LED_COLOR": "LEDの色をR %1 G %2 B %3 に設定",
  "HAT_JOYC_GET_X": "%1 のX軸の入力値",
  "HAT_JOYC_GET_Y": "%1 のY軸の入力値",
  "HAT_JOYC_GET_ANGLE": "%1 のスティックの角度",
  "HAT_JOYC_GET_DISTANCE": "%1 のスティックの距離",
  "HAT_JOYC_GET_PRESS": "%1 スティックが押されている",
  "HAT_ROVERC": "RoverC",
  "HAT_ROVERC_SET_PULSE": "Set the %1 wheel pulse to %2",
  "HAT_ROVERC_SET_ALL_PULSE": "Set wheels pulse front-left %1 front-right %2 rear-left %3 rear-right %4",
  "HAT_ROVERC_SET_SPEED": "Set RoverC speed X %1 Y %2 Z %3",
  "HAT_TOF": "TOF",
  "HAT_TOF_GET_DISTANCE": "距離[mm]を読み込む",
  "HAT_THERMAL": "Thermal",
  "HAT_THERMAL_GET_TEMP": "Get temperature X %1 Y %2",
  "HAT_THERMAL_GET_CENTER_TEMP": "Get center temperature",
  "HAT_THERMAL_GET_MAX_TEMP": "Get max temperature",
  "HAT_THERMAL_GET_MIN_TEMP": "Get min temperature",
  "HAT_THERMAL_SET_COLOR_MAX_TEMP": "Set the max visible temperature %1",
  "HAT_THERMAL_SET_COLOR_MIN_TEMP": "Set the min visible temperature %1",
  "HAT_THERMAL_UPDATE": "Update X %1 Y %2 show %3 show in center %4",
  "HAT_YUN_GET_TEMPERATURE": "YUNの温度",
  "HAT_YUN_GET_HUMIDITY": "YUNの湿度",
  "BASEX": "BaseX",
  "BASEX_SET_MODE": "Set %1 to %2",
  "BASEX_GET_ENCODER": "Get %1 encoder value",
  "BASEX_SET_ENCODER": "Set %1 encoder %2",
  "BASEX_SET_MOTOR_SPEED": "Set %1 speed %2",
  "BASEX_GET_MOTOR_SPEED": "Get %1 speed",
  "BASEX_GET_SPEED_20MS": "Get %1 speed in 20ms",
  "BASEX_SET_POSITION_POINT": "Set %1 position point to %2",
  "BASEX_SET_POSITION_PID_MAX_SPEED": "Set %1 position PID max speed to %2",
  "BASEX_SET_SPEED_POINT": "Set %1 speed point to %2",
  "BASEX_SET_SERVO_ANGLE": "Set %1 angle to %2",
  "BASEX_SET_SERVO_PULSE": "Set %1 pulse to %2",
  "BASEX_RUN_AHEAD": "%1 Run ahead %2",
  "UNIT_ACCEL": "加速度",
  "UNIT_ACCEL_GET_X_ACC": "%1 X軸の加速度",
  "UNIT_ACCEL_GET_Y_ACC": "%1 Y軸の加速度",
  "UNIT_ACCEL_GET_Z_ACC": "%1 Z軸の加速度",
  "PLUS": "Plus",
  "PLUS_GET_ENCODE": "エンコード値を取得",
  "PLUS_CLEAN_ENCODE": "エンコード値をクリア",
  "PLUS_GET_PRESS": "押した状態を取得",
  "GO_PLUS": "GoPlus",
  "GO_PLUS_SET_SERVO": "サーボ %1 の角度を %2 に設定",
  "GO_PLUS_SET_MOTOR_SPEED": "モーター %1 の速度を %2 に設定",
  "GO_PLUS_DIGITAL_READ": "ポート %1 の %2 からデジタル入力",
  "GO_PLUS_ANALOG_READ": "%1 からアナログ入力",
  "HAT_CARDKB": "CardKb",
  "HAT_CARDKB_GET_KEY": "文字コード",
  "HAT_CARDKB_GET_STRING": "文字列",
  "HAT_CARDKB_GET_PRESSED": "キーが押された",
  "RGB_SET_SHOW_LOCK": "Set show lock %1",
  "RGB_SET_COLOR_FROM_RGB": "Set %1 from %2 to %3 R %4 G %5 B %6",
  "RGB_SET_LED_MATRIX": "Set atom matrix %1",
  "IIC_GET_DATA_IN_LIST": "データ %1 の %2 番目のデータ",
  "MATH_HEX_NUMBER": "Hex ",
  "MQTT_SET_LAST_WILL": "Last Will(LWT)をトピック %1 メッセージ %2 に設定",
  "UNIT_GPS_SET_TIME_ZONE": "set %1 time zone %2",
  "UNIT_GPS_GET_SPEED": "get %1 speed %2",
  "UNIT_GPS_GET_COURSE": "get %1 course",
  "GPS": "GPS",
  "GPS_GET_STATE": "Get time (return string)",
  "GPS_GET_LATITUDE": "Get latitude (return string: ddmm.mmmmm<W/E>)",
  "GPS_GET_LONGITUDE": "Get longitude (return string: dddmm.mmmmm<S/N>)",
  "GPS_GET_SATELLITE_NUM": "Get satellite num (return string)",
  "GPS_GET_POSTITIONING_QUALITY": "Get positioning quality (return string)",
  "GPS_SET_TIME_ZONE": "Set time zone %1 (-12 ~ 12)",
  "GPS_GET_SPEED": "Get speed %1 (return string)",
  "GPS_GET_COURSE": "Get course (return string)",
  "MODBUS_MASTER": "Modbus Master",
  "MODBUS_MASTER_INIT": "Init baud %1 tx %2 rx %3 in uart %4 crc %5",
  "MODBUS_MASTER_SEND": "Send addr %1 function %2 reg addr %3 value %4",
  "MODBUS_MASTER_ANY": "Rx buffer cache number",
  "MODBUS_MASTER_READ": "Read rx data",
  "MODBUS_MASTER_RECV_CB": "Get rx addr %1 function %2 data %3 %4",
  "MODBUS_SLAVE": "Modbus Slave",
  "MODBUS_SLAVE_INIT": "Init addr %1 baud %2 tx %3 rx %4 in uart %5",
  "MODBUS_SLAVE_INIT_FUNC": "Init function %1 reg addr %2 value %3 method %4",
  "MODBUS_SLAVE_UPDATE_FUNC": "Update function %1 reg addr %2 value %3",
  "MODBUS_SLAVE_READ": "Get rx buffer data",
  "MODBUS_SLAVE_WRITE_CB": "Get reg write function %1 reg addr %2 value %3 %4",
  "MODBUS_SLAVE_GET_FUNC": "Get function %1 reg addr %2 value",
  "MODBUS_SLAVE_SEND": "Send addr %1 function %2 reg addr %3 value %4",
  "EEPROM": "EEPROM",
  "EEPROM_WRITE_STR": "EEPROM に key %1 値 %2 を書き込む",
  "EEPROM_READ_STR": "EEPROM から key %1 を読み込む",
  "EEPROM_READ_INT": "EEPROM から key %1 を整数で読み込む",
  "UART_WRITE_RAW_DATA": "%2 に生データ %1 を書き込む",
  "BLYNK": "Blynk",
  "BLYNK_INIT": "Init blynk name %1 token %2 type %3",
  "BLYNK_VIRTUAL_WRITE": "Virtual write number %1 data %2",
  "BLYNK_NOTIFY": "Notify message %1",
  "BLYNK_TWEET": "Tweet message %1",
  "BLYNK_EVENT_WRITE": "On event write %1 get number %2 message %3 %4",
  "BLYNK_EVENT_READ": "On event read %1 get number %2 %3",
  "BLYNK_ON_EVENT": "On event %1 %2 %3",
  "BLE_UART": "BLE UART",
  "BLE_UART_INIT": "Init ble uart name %1",
  "BLE_UART_WRITE": "BLE UART write %1",
  "BLE_UART_ANY": "BLE UART remain cache",
  "BLE_UART_READ": "BLE UART read all",
  "BLE_UART_READ_NUMBER": "BLE UART read %1 characters",
  "BLE_UART_ON_RECV": "BLE UART on recv %1 %2",
  "PWN_HOLD_US": "%1 High voltage hold %2 us per cycle",
  "ECHO_STT": "Echo STT",
  "ECHO_STT_INIT": "Init echo speech recognition token %1",
  "ECHO_STT_RECV_DATA": "Recv echo data %1 %2",
  "ECHO_STT_GET_TEXT": "Get recv text",
  "SERVO_INIT_ADVANCE": "%1 %2 ピン %3 周波数 %4 最小時間 %5 [マイクロ秒] 最大時間 %6 [マイクロ秒] 回転角度範囲 %7 で初期化",
  "SERVO_WRITE_ANGLE": "サーボ %1 %2 を %3 度回転",
  "SERVO_WRITE_US": "サーボ %1 %2 の書き込み間隔を %3 [マイクロ秒]に設定する",
  "UNIT_ACSOCKET": "AC Socket",
  "PIN_SERVO": "ピンサーボ",
  "UNIT_ACSOCKET_SET_VALUE": "%1 Set %2 value %3",
  "HEART": "Heart",
  "HEART_GET_HEARTRATE": "%1 %2 の心拍数",
  "HEART_SET_MODE": "%1 のモードを %2 に設定",
  "HEART_GET_SPO2": "%1 %2 の SpO2",
  "HEART_SET_LED_CURRENT": "%1 のLED電流を %2 %3 に設定",
  "HEART_SET_PLUS_WIDTH": "Set %1 plus width %2",
  "HEART_SET_SAMPLING_RATE": "Set %1 plus width %2",
  "HEART_DEINIT": "%1 deinit %2",
  "TRIANGLE": "三角形",
  "LINE": "線",
  "TRIANGLE_SET_MODE": "%1 %2 の表示を %3 に設定",
  "TRIANGLE_SET_SIZE": "%1 三角形 %2 をx1 %3 y1 %4 x2 %5 y2 %6 x3 %7 y3 %8 で描画",
  "TRIANGLE_SET_BGCOLOR": "%1 三角形 %2 の色を %3 に設定",
  "TRIANGLE_SET_BGCOLOR_RGB": "%1 三角形 %2 の色を 赤 %3 緑 %4 青 %5 に設定",
  "TRIANGLE_SET_BORDERCOLOR": "%1 三角形 %2 のボーダー色を %3 に設定",
  "TRIANGLE_SET_BORDERCOLOR_RGB": "%1 三角形 %2 のボーダー色を 赤 %3 緑 %4 青 %5 に設定",
  "LINE_SET_MODE": "%1 線 %2 の表示を %3 に設定",
  "LINE_SET_POSITION": "%1 線 %2 をx1 %3 y1 %4 x2 %5 y2 %6 で引く",
  "LINE_SET_COLOR": "%1 線 %2 の色を %3 に設定",
  "LINE_SET_COLOR_RGB": "%1 線 %2 の色を赤 %3 緑 %4 青 %5 に設定",
  "UNIT_V": "V Function",
  "UNIT_V_MOTION_DETECT": "Motion Detect",
  "UNIT_V_TARGET_TRACE": "Target Trace",
  "V_SET_DETECT_THRESHOLD": "Set detect threshold %1",
  "V_SET_DETECT_MODE": "Set detect %1 mode",
  "V_SET_DETECT_BOX_SIZE": "Set %1 detect box size width %2 height %3",
  "V_SET_DETECT_STEP": "Set %1 detect step x %2 y %3",
  "V_GET_RATE_DIFFERENCE": "Get rate of difference",
  "V_GET_MAX_DIFFERENCE": "Get max difference",
  "V_SET_TRACE_AREA": "Set %1 area size by width %2 height %3",
  "V_GET_TRACE_AREA_COORDINATE": "%1 Get %2 trace area coordinate",
  "V_GET_TRACE_AREA_CENTER_COORDINATE": "%1 Get %2 trace area center coordinate",
  "NTP": "NTP",
  "UNIT_V_COLOR_TRACE": "Color Trace",
  "V_SET_TRACE_COORDINATE": "Set %1 coordinate with x %2 y %3 width %4 height %5",
  "V_GET_TARGET_X_COORDINATE": "%1 Get %2 x coordinate",
  "V_GET_TARGET_Y_COORDINATE": "%1 Get %2 y coordinate",
  "V_GET_TARGET_WIDTH": "%1 Get %2 width",
  "V_GET_TARGET_HEIGHT": "%1 Get %2 height",
  "V_COLOR_TRACE_INIT": "%1 init",
  "V_SET_TRACE_COLOR": "Set %1 color by L min %2 L max %3 A min %4 A max %5 B min %6 B max %7",
  "V_GET_TRACE_AREA_PIXEL": "%1 Get %2 area pixel number",
  "V_GET_TRACE_AREA_X": "%1 Get %2 area x coordinate",
  "V_GET_TRACE_AREA_Y": "%1 Get %2 area Y coordinate",
  "V_GET_TRACE_AREA_WIDTH": "%1 Get %2 area width",
  "V_GET_TRACE_AREA_HEIGHT": "%1 Get %2 area height",
  "NTP_INIT": "NTPの時間をホスト %1 タイムゾーン %2 で初期化",
  "NTP_GET_TIMESTAMP": "タイムスタンプ",
  "NTP_GET_DATE_FORMAT": "書式 %1 での日付",
  "NTP_GET_TIME_FORMAT": "書式 %1 での時刻",
  "NTP_GET_DATE_TIME_FORMAT": "日付の書式 %1 、時間の書式 %2 でのデータ",
  "NTP_GET_YEAR": "年",
  "NTP_GET_MONTH": "月",
  "NTP_GET_DAY": "日",
  "NTP_GET_WEEKDAY": "曜日",
  "NTP_GET_HOUR": "時",
  "NTP_GET_MINUTE": "分",
  "NTP_GET_SECOND": "秒",
  "NTP_INIT_DROPDOWN": "NTPの時間をホスト %1 タイムゾーン %2 で初期化",
  "MATH_GET_BIT": "%1 の %2 ビット目",
  "MATH_SET_BIT": "%1 の %2 ビット目を1にした値",
  "MATH_CLEAR_BIT": "%1 の %2 ビット目を0にした値",
  "MATH_REVERSE_BIT": "%1 の %2 ビット目を反転した値",
  "MATH_BIT_OPERATION": "%1 %2 %3",
  "LOGIC_SWITCH": "switch %1",
  "LOGIC_CASE": "case",
  "LOGIC_DEFAULT": "default",
  "IIC_AVAILABLE": "%1 利用可能なI2Cアドレスのリスト",
  "MATH_INT_FROM_BYTES": "int from bytes %1 %2",
  "SDCARD_ISFILE": "%1 はファイルである",
  "SDCARD_ISDIRECTORY": "%1 はディレクトリである",
  "SDCARD_ISEXIST": "%2 に ファイル %1 が存在する",
  "UNIT_V_FACE_DETECT": "Face Detect",
  "V_INIT": "%1 init",
  "V_GET_TARGET_TRACK_BOX_DETAIL": "Get track box detail ",
  "V_SET_SCAN_INTERVAL": "Set scan interval x %1 y %2",
  "V_SET_MERGE_THRESHOLD": "Set box merge threshold %1",
  "V_SET_THRESHOLD": "Set box threshold width %1 height %2",
  "V_GET_TRACE_BOX_NUMBER": "Get %1 box numbers",
  "V_GET_TRACE_BOX_DETAIL": "Get %1 number %2 box detail ",
  "V_GET_FACE_NUMBER": "Get face numbers",
  "V_GET_FACE_DETAIL": "Get number %1 face detail ",
  "UNIT_V_TARGET_TRACK": "Target Track",
  "UNIT_V_COLOR_TRACK": "Color Track",
  "UNIT_V_QR_CODE": "QR Code",
  "UNIT_V_APRILTAG": "Apriltag Code",
  "UNIT_V_BAR_CODE": "Bar Code",
  "UNIT_V_DATAMATRIX_CODE": "Datamatrix Code",
  "V_SET_TRACK_COORDINATE": "Set coordinate with x %1 y %2 width %3 height %4",
  "V_SET_TRACK_COLOR": "Set color by L min %1 L max %2 A min %3 A max %4 B min %5 B max %6",
  "V_GET_TRACK_BOX_NUMBER": "Get box numbers",
  "V_GET_TRACK_BOX_DETAIL": "Get number %1 box detail ",
  "V_GET_QR_TEXT": "Get QR code text",
  "V_GET_QR_VERSION": "Get QR code version",
  "V_GET_APRILTAG_ROTATION": "Get AprilTag rotation",
  "V_GET_APRILTAG_LOCATION": "Get AprilTag location",
  "V_GET_APRILTAG_TRANSLATION": "Get AprilTag Translation",
  "V_GET_BAR_TEXT": "Get bar code text",
  "V_GET_BAR_ROTATION": "Get bar code rotation",
  "V_GET_BAR_TYPE": "Get bar code type",
  "V_GET_BAR_LOCATION": "Get bar code location",
  "V_GET_DATAMATRIX_TEXT": "Get Datamatrix code text",
  "V_GET_DATAMATRIX_ROTATION": "Get Datamatrix code rotation",
  "V_GET_DATAMATRIX_LOCATION": "Get Datamatrix code location",
  "HATS": "Hat",
  "TOUCH_BUTTON": "タッチボタン",
  "SET_POS": "Set %1 x %2 y %3",
  "SET_ALIGN": "Set %1 align %2 x %3 y %4 %5",
  "SET_SIZE": "Set %1 width %2 height %3",
  "SET_HIDDEN": "Set %1 %2",
  "SET_BGCOLOR": "Set %1 backgroundColor %2",
  "SET_BGCOLOR_RGB": "Set %1 backgroundColor by R %2 G %3 B %4",
  "SET_TEXT": "Set %1 text %2",
  "SET_TEXTCOLOR": "Set %1 text color %2",
  "SET_TEXTCOLOR_RGB": "Set %1 text color by R %2 G %3 B %4",
  "SET_TEXT_FONT": "Set %1 text font %2",
  "SET_DELETE": "%1 delete",
  "GET_WIDTH": "Get %1 width",
  "BUTTON_SET_CB": "%1 %2",
  "SET_OPACITY": "Set %1 opacity %2",
  "LINE_SET_WIDTH": "Set %1 line width %2",
  "SWITCH": "Switch",
  "SWITCH_SET_BGCOLOR": "Set %1 unselectedColor %2",
  "SWITCH_SET_BGCOLOR_RGB": "Set %1 unselectedColor by R %2 G %3 B %4",
  "SWITCH_SET_COLOR": "Set %1 selectedColor %2",
  "SWITCH_SET_COLOR_RGB": "Set %1 selectedColor by R %2 G %3 B %4",
  "SWITCH_SET_ON": "Set %1 on",
  "SWITCH_SET_OFF": "Set %1 off",
  "SWITCH_SET_TOGGLE": "Set %1 toggle",
  "TOUCH": "Touchセンサー",
  "TOUCH_READ": "%1 タッチの座標を取得",
  "TOUCH_READ_X": "%1 タッチしたx座標を取得",
  "TOUCH_READ_Y": "%1 タッチしたy座標を取得",
  "TOUCH_STATUS": "%1 タッチの押している状態を取得",
  "GPS_SET_CUSTOM": "Init with custom pin TX %1 RX %2",
  "SLIDER": "Slider",
  "BAR": "Bar",
  "CHECKBOX": "Checkbox",
  "SPEAKER_PLAY_WAV": "play local WAV file %1",
  "SET_CB": "%1 %2",
  "GET_STATE": "%1 の状態",
  "GET_VALUE": "%1 の値",
  "SWITCH_SET_TRACK_COLOR": "Set %1 track Color %2",
  "SWITCH_SET_TRACK_COLOR_RGB": "Set %1 track Color by R %2 G %3 B %4",
  "SET_INITIAL_VALUE": "Set %1 initial value %2",
  "SET_VALUE": "Set %1 value %2",
  "SET_RANGE": "Set %1 range min %2 max %3",
  "SLIDER_SET_CB": "%1 changed with: %2",
  "RTC_DATETIME": "設定:年 %1 月 %2 日 %3 曜日 %4 時間 %5 分 %6 秒 %7",
  "RTC_SETTIME": "NTPホスト %1 タイムゾーン %2 で時間を設定",
  "RTC_GET_TIME": "RTCの時間を取得",
  "RTC_GET_WEEK": "曜日 %1",
  "RTC_GET_PRINTTIME": "RTCの時間をシリアルに出力",
  "POWER_SET_VIBRATION_ENABLE": "振動を %1",
  "POWER_SET_LED": "Set LED %1",
  "POWER_SET_VIBRATION_INTENSITY": "振動の強さを %1 に設定",
  "SCREEN_CLEAN": "Clean screen",
  "UNIT_V_LINE_TRACKER": "Line Tracker",
  "UNIT_V_TAG_READER": "Tag Reader",
  "V_GET_ANGLE": "Get angle",
  "V_SET_LINE_AREA_WEIGHT": "Set line area weight0 %1 weight1 %2 weight2 %3",
  "V_GET_TOTAL_NUMBER": "Get total number",
  "V_GET_BINSTR": "Get binstr %1",
  "V_GET_CODE": "Get code %1",
  "V_GET_TAG_LOCATION": "Get tag location %1",
  "UNIT_IMU": "IMU",
  "UNIT_BPS": "BPS",
  "UNIT_IMU_GET_ACC_X": "%1 X軸の加速度",
  "UNIT_IMU_GET_ACC_Y": "%1 Y軸の加速度",
  "UNIT_IMU_GET_ACC_Z": "%1 Z軸の加速度",
  "UNIT_IMU_GET_GYR_X": "%1 X軸の角速度",
  "UNIT_IMU_GET_GYR_Y": "%1 Y軸の角速度",
  "UNIT_IMU_GET_GYR_Z": "%1 Z軸の角速度",
  "BPS_GET_TEMPERATURE": "%1 温度",
  "BPS_GET_PRESSURE": "%1 気圧",
  "VIBRATION": "振動",
  "HAT_ENV2": "ENV II",
  "UNIT_TVOC": "TVOC/eCO2",
  "UNIT_VMETER": "VMETER",
  "UNIT_AMETER": "AMETER",
  "MEDIATRANS": "MediaTrans",
  "MIC_RECORD": "Microphone Record",
  "TIMER_CAM": "Timer Camera",
  "AUDIO_PLAY": "Audio Play",
  "MIC_RECORD_SECOND": "Mic record init",
  "MIC_RECORD_SERVER": "Mic record to server second %1 token %2 ",
  "MIC_RECORD_FILE": "Mic record to file second %1 file %2",
  "TIMERCAM_INIT": "Init token %1 x %2 y %3 width %4 height %5",
  "TIMERCAM_SHOW": "Timer Camera show",
  "TIMERCAM_HIDE": "Timer Camera hide",
  "TIMERCAM_DELETE": "Timer Camera delete",
  "AUDIO_INIT": "Init token %1 autoplay %2",
  "AUDIO_SET_PLAY": "Audio play",
  "AUDIO_GET_STATE": "Get audio state",
  "AUDIO_DEINIT": "Audio deinit",
  "TIMERCAM_DEINIT": "Timer Camera deinit",
  "CERTIFICATE": "Certificate",
  "ADDKEY": "Add Certificate",
  "ESPNOW_SET_CHANNEL": "通信チャンネルを %1 (1 ~ 13)に設定",
  "UNIT_OP": "OP",
  "UNIT_HALL": "Hall",
  "TVOC_SET_IAQ_BASELINE": "%1 室内空気質(IAQ)ベースラインをeCO2 %2 TVOC %3 に設定",
  "TVOC_GET_IAQ_BASELINE": "%1 室内空気質(IAQ)ベースライン",
  "TVOC_GET_TVOC": "%1 TVOC",
  "TVOC_BASELINE_TVOC": "%1 ベースラインTVOC",
  "TVOC_GET_ECO2": "%1 eCO2",
  "TVOC_GET_BASELINE_ECO2": "%1 ベースラインeCO2",
  "TVOC_GET_H2": "%1 H2",
  "TVOC_GET_ETHANOL": "%1 エタノール",
  "VMETER_SET_MODE": "Set %1 mode %2",
  "VMETER_SET_RATE": "%1 Set %2 samples per second",
  "VMETER_SET_GAIN": "Set %1 gain %2",
  "VMETER_VOLTAGE": "Get %1 voltage",
  "VMETER_RAW": "Get %1 raw",
  "UNIT_FAN": "FAN",
  "UNIT_VIBRATOR": "Vibrator Motor",
  "UNIT_LASERTX": "LASER.TX",
  "UNIT_LASERRX": "LASER.RX",
  "SET_OFF": "Set %1 off",
  "SET_ON": "Set %1 on",
  "GO_PLUS2": "GoPlus2",
  "GO_PLUS2_SET_SERVO_PLUS": "サーボ %1 のパルスを %2 に設定",
  "GO_PLUS2_DIGITAL_READ": "%1 からデジタル入力",
  "GO_PLUS2_DIGITAL_WRITE": "%1 に %2 をデジタル出力",
  "AMETER_CURRENT": "Get %1 current",
  "UNIT_ULTRASONIC": "Ultrasonic",
  "ULTRASONIC_DISTANCE": "%1 の距離",
  "M5_LED_VALUE": "LED VALUE %1",
  "POWER_ON": "Power on",
  "BATTERY": "Battery",
  "BATTERY_VOLTAGE": "Get battery voltage",
  "SCREEN_SET_SHOW": "Set screen show",
  "SCREEN_SET_PARITALSHOW": "Set screen partial show x %1 y %2 w %3 h %4",
  "SCREEN_SET_SETHV": "Set screen HV %1",
  "POWER_SET_RESTART": "Restart after seconds %1",
  "POWER_RESTART_ON": "Restart on %1 set minute %2 set hour %3 set date %4 set weekday %5",
  "THIRDPARTY": "Third Party",
  "MYCOBOT": "MyCobot",
  "MYCOBOT_SET_SERVO_ANGLE": "Set servo pos %1 angle %2 speed %3",
  "MYCOBOT_SET_SERVOS_ANGLE": "Set servos angle1 %1 angle2 %2 angle3 %3 angle4 %4 angle5 %5 angle6 %6 speed %7",
  "MYCOBOT_SET_ALL_SERVO_ANGLE": "Set all servo angle %1 speed %2",
  "MYCOBOT_SET_ATOM_COLOR": "Set atom color R %1 G %2 B %3",
  "MYCOBOT_RELEASE_SERVOS": "Release servos",
  "MYCOBOT_GET_SERVO_ANGLE": "Get servo %1 angle",
  "MYCOBOT_GET_ALL_SERVO_ANGLE": "Get all servos angle",
  "ADD_REMOTE_INPUT": "Add Remote Input",
  "SET_ON_DUTY": "%1 のデュティー比を %2 に設定",
  "FILE_NAME_EMPTY": "ファイル名は空ではいけません。",
  "REQUEST_ERROR": "Request failed, maybe your device is offline check it and retry.",
  "BASE": "Base",
  "HDRIVER": "H·Driver",
  "SERVO2": "SERVO2",
  "SERVO2_POSITION": "Set %1 servo position %2",
  "SERVO2_RELEASE": "Set %1 servo release",
  "HDRIVER_SET_SPEED": "Set speed %1",
  "HDRIVER_GET_VOLTAGE": "Get voltage",
  "HDRIVER_GET_STATUS": "Get status",
  "POWER_SET_BUS_MODE": "Set bus power mode %1",
  "LOGIN_EXPIRED": "Login time limit has expired, please login again.",
  "NO_PERMISSION": "No permission. The device has been bound!",
  "MOTION": "Motion",
  "UNIT_WATERING": "Watering",
  "UNIT_RELAY4": "Relay4",
  "MYCOBOT_POWER_ON": "Power on",
  "MYCOBOT_POWER_OFF": "Power off",
  "MYCOBOT_GET_STATUS": "Is power on",
  "MYCOBOT_SET_FREE_MODE": "Set free mode",
  "MYCOBOT_GET_ANGLES": "Get all angles",
  "MYCOBOT_SEND_ANGLE": "Set id %1 angle %2 speed %3",
  "MYCOBOT_SEND_ALL_ANGLES": "Set all angles %1 speed %2",
  "MYCOBOT_SEND_ALL_ANGLES_DEGREE": "Set all angles 1 %1 2 %2 3 %3 4 %4 5 %5 6 %6 speed %7",
  "MYCOBOT_GET_COORDS": "Get coords",
  "MYCOBOT_SEND_COORD": "Set id %1 coord %2 speed %3",
  "MYCOBOT_SEND_COORDS": "Set all coords %1 speed %2 mode %3",
  "MYCOBOT_SEND_COORDS_LIST": "Set all coords x %1 y %2 z %3 rx %4 ry %5 rz %6 speed %7 mode %8",
  "MYCOBOT_JOG_ANGLE": "Set joint angle id %1 direction %2 speed %3",
  "MYCOBOT_JOG_STOP": "Set joint stop",
  "MYCOBOT_ISMOVING": "Get is moving",
  "MYCOBOT_PAUSE": "Set pause",
  "MYCOBOT_RESUME": "Set resume",
  "MYCOBOT_STOP": "Set stop",
  "MYCOBOT_IS_IN_POSITION": "Get is in position data 1 %1 2 %2 3 %3 4 %4 5 %5 6 %6 id %7",
  "MYCOBOT_GET_SPEED": "Get speed",
  "MYCOBOT_SET_SPEED": "Set speed %1",
  "MOTION_GET_SERVO_ANGLE": "Get servo %1 angle",
  "MOTION_SET_SERVO_ANGLE": "Set servo %1 angle %2",
  "MOTION_GET_SERVO_PULSE": "Get servo %1 pulse",
  "MOTION_SET_SERVO_PULSE": "Set servo %1 pulse %2",
  "MOTION_GET_MOTOR_SPEED": "Get motor %1 speed",
  "MOTION_SET_MOTOR_SPEED": "Set motor %1 speed %2",
  "LORAWAN_NETWORK_RESET": "Reset",
  "LORAWAN_NETWORK_RESET_DEFAULT": "Reset module to default",
  "LORAWAN_NETWORK_GET_DEVADDR": "Get device address",
  "LORAWAN_NETWORK_SET_DEVADDR": "Set device address %1",
  "LORAWAN_NETWORK_GET_DEVEUI": "Get device eui",
  "LORAWAN_NETWORK_SET_DEVEUI": "Set device eui %1",
  "LORAWAN_NETWORK_GET_APPEUI": "Get app eui",
  "LORAWAN_NETWORK_SET_APPEUI": "Set app eui %1",
  "LORAWAN_NETWORK_SET_APPKEY": "Set app key %1",
  "LORAWAN_NETWORK_SET_APPSESSIONKEY": "Set app session key %1",
  "LORAWAN_NETWORK_SET_NWKSKEY": "Set network session key %1",
  "LORAWAN_NETWORK_SET_MODE": "Set mode %1",
  "LORAWAN_NETWORK_GET_BAND_PLAN": "Get band plan",
  "LORAWAN_NETWORK_SET_BAND_PLAN": "Set band plan %1",
  "LORAWAN_NETWORK_GET_DATARATE": "Get datarate",
  "LORAWAN_NETWORK_SET_DATARATE": "Set datarate %1",
  "LORAWAN_NETWORK_SET_DEFAULT_DATARATE": "Set defalut datarate %1",
  "LORAWAN_NETWORK_GET_CHANNEL_FREQUENCY": "Get channel %1 frequency",
  "LORAWAN_NETWORK_SET_CHANNEL_FREQUENCY": "Set channel %1 frequency %2 dr min %3 dr max %4",
  "LORAWAN_NETWORK_DEL_CHANNEL_FREQUENCY": "Delete channel %1 frequency",
  "LORAWAN_NETWORK_GET_ENABLE_CHANNELS": "Get enable channels",
  "LORAWAN_NETWORK_ENABLE_CHANNELS": "Enable channels %1",
  "LORAWAN_NETWORK_GET_ADAPTIVE_STATUS": "Get adaptive datarate status",
  "LORAWAN_NETWORK_SET_ADAPTIVE_STATUS": "Set adaptive datarate status %1",
  "LORAWAN_NETWORK_GET_CLASS_MODE": "Get class mode",
  "LORAWAN_NETWORK_SET_CLASS_MODE": "Set class mode %1",
  "LORAWAN_NETWORK_SET_TX_POWER": "Set tx power %1",
  "LORAWAN_NETWORK_JOIN": "Join LoRaWAN network",
  "LORAWAN_NETWORK_GET_PORT": "Get port",
  "LORAWAN_NETWORK_SET_PORT": "Set port %1",
  "LORAWAN_NETWORK_SEND_CONFIRM_MSG": "Send confirm msg %1",
  "LORAWAN_NETWORK_SEND_UNCONFIRM_MSG": "Send unconfirm msg %1",
  "LORAWAN_NETWORK_SEND_CONFIRM_HEX_MSG": "Send confirm hex msg %1",
  "LORAWAN_NETWORK_SEND_UNCONFIRM_HEX_MSG": "Send unconfirm hex msg %1",
  "LORAWAN_NETWORK_GET_DOWNLINK_MSG": "Get downlink msg",
  "LORAWAN_NETWORK_GET_DOWNLINK_STATUS": "Get downlink status",
  "LORAWAN_NETWORK_SET_UNCONFIRMED_REPEAT_TIME": "Set unconfirmed repeat time %1",
  "LORAWAN_NETWORK_SET_CONFIRMED_REPEAT_TIME": "Set confirmed repeat time %1",
  "LORAWAN_NETWORK_GET_RXWIN2_CONFIG": "Get RXWIN2 config",
  "LORAWAN_NETWORK_SET_RXWIN2_DATERATE": "Set RXWIN2 freq %1 daterate %2",
  "LORAWAN_NETWORK_SET_RXWIN2_SPREADFACTOR": "Set RXWIN2 freq %1 spreadfactor %2 bandwidth %3",
  "LORAWAN_NETWORK_GET_RXWIN1_CONFIG": "Get RXWIN1 config",
  "LORAWAN_NETWORK_SET_RXWIN1_CHANNEL_FREQUENCY": "Set RXWIN1 channel %1 frequency %2",
  "LORAWAN_NETWORK_GO_TO_SLEEP": "Go to sleep",
  "LORAWAN_NETWORK_WAKEUP": "Wakeup",
  "WATERING_GET_ADC_VALUE": "Get %1 adc value",
  "WATERING_SET_PUMP_STATUS": "Set %1 pump status %2",
  "RELAY4_GET_MODE": "Get %1 mode",
  "RELAY4_SET_MODE": "Set %1 mode %2",
  "RELAY4_GET_LED_STATUS": "Get %1 led %2 status",
  "RELAY4_SET_LED_STATUS": "Set %1 led %2 status %3",
  "RELAY4_GET_STATUS": "Get %1 relay %2 status",
  "RELAY4_SET_STATUS": "Set %1 relay %2 status %3",
  "POWER_MAIN_ON": "Set main power on",
  "POWER_MAIN_OFF": "Set main power off",
  "POWER_EPD_ON": "Set epd power on",
  "POWER_EPD_OFF": "Set epd power off",
  "POWER_EXT_ON": "Set extern port power on",
  "POWER_EXT_OFF": "Set extern port power off",
  "SHT30": "SHT30",
  "SHT30_GET_HUMIDITY": "Get humidity",
  "SHT30_GET_TEMPERATURE": "Get temperature",
  "IOTCLOUD": "IoTCloud",
  "TENCENT": "Tencent",
  "TENCENT_INIT": "Init product id %1 device name %2 device sceret %3 keepalive %4",
  "TENCENT_SUB": "Tencent subscribe %1 with topic_data",
  "TENCENT_PUBLISH": "Publish topic %1 msg %2",
  "TENCENT_SUBSCRIBE_PROPERTY_MSG": "Tencent subscribe with property_data",
  "TENCENT_PUBLISH_PROPERTY_MSG": "Publish property msg",
  "TENCENT_PUBLISH_RAW_MSG": "Publish raw msg %1",
  "TENCENT_PUBLISH_DATA_MSG": "Publish data msg %1",
  "TENCENT_PUBLISH_EVENT_MSG": "Publish event msg %1",
  "TENCENT_GET_PROPERTY_TOPICDATA": "Get property_data",
  "AWS": "AWS",
  "AWS_INIT": "Init things name %1 host %2 port %3 keepalive %4",
  "AWS_SUB": "Aws subscribe %1 with topic_data",
  "AWS_PUBLISH": "Publish topic %1 msg %2",
  "AZURE": "Azure",
  "AZURE_SUB": "Subscribe C2D message %1",
  "AZURE_PUBLISH": "Publish D2C message %1 to IoT Hub",
  "AZURE_GET_TOPIC_DATA": "Get C2D message",
  "GET_TOPICDATA": "Get topic_data",
  "QRCODE": "QRCode",
  "BASE_GPS_INIT": "Init timezone %1 formatting %2",
  "BASE_GPS_TIMESTAMP": "Get timestamp",
  "BASE_GPS_DATE": "Get date",
  "BASE_GPS_LATITUDE": "Get latitude",
  "BASE_GPS_LONGITUDE": "Get longitude",
  "BASE_GPS_SPEED": "Get speed",
  "BASE_GPS_COURSE": "Get course",
  "BASE_GPS_ALTITUDE": "Get altitude",
  "BASE_GPS_GEOID_HEIGHT": "Get geoid height",
  "BASE_GPS_SATELLITES_IN_VIEW": "Get satellites in view",
  "BASE_GPS_SATELLITES_IN_USE": "Get satellites in use",
  "BASE_GPS_SATELLITES_USED": "Get satellites used",
  "BASE_GPS_LAST_SV_SENTENCE": "Get last sv sentence",
  "BASE_GPS_TOTAL_SV_SENTENCE": "Get total sv sentences",
  "BASE_GPS_SATELLITE_DATA": "Get satellite data",
  "BASE_GPS_HDOP": "Get hdop",
  "BASE_GPS_PDOP": "Get pdop",
  "BASE_GPS_VDOP": "Get vdop",
  "BASE_GPS_DEINIT": "Deinit",
  "BASE_QRCODE_READ": "Get read",
  "BASE_QRCODE_STATUS": "Get status",
  "BASE_STEPMOTOR_INIT": "Init step type %1",
  "BASE_STEPMOTOR_MOVE_STEPS": "Set move steps %1 clockwise %2",
  "BASE_STEPMOTOR_MOVE_CIRCLES": "Set move circle %1 clockwise %2",
  "BASE_STEPMOTOR_ENABLE": "Enable",
  "BASE_STEPMOTOR_DISBALE": "Disbale",
  "BASE_STEPMOTOR_RESET": "Reset",
  "BASE_STEPMOTOR_GET_VOLTAGE": "Get voltage",
  "BASE_STEPMOTOR_GET_STATUS": "Get status",
  "BASE_QRCODE_INIT": "Init QRCode",
  "INIT": "Init",
  "TENCENT_START": "Tencent start",
  "AWS_START": "AWS start",
  "AZURE_START": "Start azure",
  "MYCOBOT_PRO": "MyCobot Pro",
  "MYCOBOT_GET_RADIANS": "Get radians",
  "MYCOBOT_SEND_RADIANS": "Set radians %1 speed %2",
  "MYCOBOT_SEND_RADIANS_COPY": "Set radians 1 %1 2 %2 3 %3 4 %4 5 %5 6 %6 speed %7",
  "MYCOBOT_ISPAUSE": "Get ispause",
  "MYCOBOT_JOG_COORD": "Set joint coord id %1 direction %2 speed %3",
  "MYCOBOT_GET_JOINT_MIN_ANGLE": "Get joint id %1 min angle",
  "MYCOBOT_GET_JOINT_MAX_ANGLE": "Get joint id %1 max angle",
  "MYCOBOT_IS_SERVO_ENABLE": "Get is servo id %1 enable",
  "MYCOBOT_IS_ALLSERVO_ENABLE": "Get is all servo enable",
  "MYCOBOT_RELEASE_SERVO": "Release servo id %1",
  "MYCOBOT_FOCUS_SERVO": "Focus servo id %1",
  "MYCOBOT_SET_PIN_MODE": "Set pin number %1 mode %2",
  "MYCOBOT_SET_DIGITAL_OUTPUT": "Set digital output pin number %1 pin signal %2",
  "MYCOBOT_GET_DIGITAL_INPUT": "Get digital input pin number %1",
  "MYCOBOT_SET_PWM_MODE": "Set pwm mode pin number %1 channel %2",
  "MYCOBOT_SET_PWM_OUTPUT": "Set pwm output channel %1 freq %2 value %3",
  "MYCOBOT_GET_GRIPPER_VALUE": "Get gripper value",
  "MYCOBOT_SET_GRIPPER_VALUE": "Set gripper value %1 speed %2",
  "MYCOBOT_SET_GRIPPER_STATE": "Set gripper state flag %1 speed %2",
  "MYCOBOT_SET_GRIPPER_INI": "Set gripper ini",
  "MYCOBOT_IS_GRIPPER_MOVING": "Get is gripper moving",
  "MYCOBOTPRO_GET_JOINT_CURRENT": "Get joint current id %1",
  "MYCOBOTPRO_SET_JOINT_CURRENT": "Set joint current id %1 value %2",
  "MYCOBOTPRO_SET_CURRENT_STATE": "Set current state %1",
  "MYCOBOT_INIT": "Init myCobot",
  "MYCOBOTPRO_INIT": "Init myCobot Pro",
  "AXP_GET_BAT_VOLTAGE_PERCENT": "Get battery percentage",
  "HAT_ROVERC_SET_SERVO_ANGLE": "Set servo pos %1 angle %2",
  "HAT_ROVERC_SET_SERVO_PULSE": "Set servo pos %1 pulse %2",
  "UNIT_DDS": "DDS",
  "UNIT_UHF_RFID": "UHF-RFID",
  "DDS_SET_FREQ": "Set %1 reg %2 freq %3",
  "DDS_SET_PHASE": "Set %1 reg %2 phase %3",
  "DDS_SET_FREQ_PHASE": "Set %1 %2 freq CH %3  HZ %4 phase CH %5  ∅ %6",
  "DDS_SET_MODE": "Set %1 mode %2",
  "DDS_SET_CTRL": "Set %1 ctrl %2",
  "DDS_SELECT_FREQ_REG": "Select %1 freq reg num %2",
  "DDS_SELECT_PHASE_REG": "Select %1 phase reg num %2",
  "DDS_QUICK_OUTPUT": "%1 quick output mode %2 freq %3 phase %4",
  "DDS_OUTPUT": "%1 output freq %2 phase %3",
  "DDS_SET_SLEEP": "Set %1 sleep level %2",
  "DDS_RESET": "%1 reset",
  "UHF_RFID_HARDWARE_VERSION": "Get %1 hardware version",
  "UHF_RFID_SOFTWARE_VERSION": "Get %1 software version",
  "UHF_RFID_MANUFACTURER": "Get %1 manufacturer",
  "UHF_RFID_SINGLE_POLLING": "Get %1 single reading",
  "UHF_RFID_MULTIPLE_POLLING_START": "Set %1 multiple polling start counts %2",
  "UHF_RFID_MULTIPLE_POLLING_READ": "Get %1 multiple polling read",
  "UHF_RFID_MULTIPLE_POLLING_STOP": "Get %1 multiple polling stop",
  "UHF_RFID_SELECT_TAG_PARAM": "Set %1 select tag param %2 target bit %3 %4 action bit %5 %6 membank bit %7 %8 pointer (int type, unit in bit) %9 epc (HEX format string) %10 truncate %11",
  "UHF_RFID_GET_SELECT_TAG_PARAM": "Get %1 select tag param",
  "UHF_RFID_SET_SELECT_MODE": "Set %1 select mode %2",
  "UHF_RFID_READ_MEMORY_BANK": "%1 read memory bank sa %2 data len %3 mem bank %4 access password %5",
  "UHF_RFID_WRITE_MEMORY_BANK": "%1 write memory bank data %2 sa %3 mem bank %4 access password %5",
  "UHF_RFID_INACTIVATED_TAG": "Set %1 inactivated tag kill by password %2",
  "UHF_RFID_SET_REGION": "Set %1 region code %2",
  "UHF_RFID_GET_REGION": "Get %1 region code",
  "UHF_RFID_SET_CHANNEL_FREQ": "Set %1 channel freq %2 MHZ",
  "UHF_RFID_GET_CHANNEL_FREQ": "Get %1 channel freq",
  "UHF_RFID_ENABLE_AUTOMATIC_FREQ_HOPPING": "%1 enable automatic freq hopping",
  "UHF_RFID_DISABEL_AUTOMATIC_FREQ_HOPPING": "%1 disabel automatic freq hopping",
  "UHF_RFID_GET_TX_POWER": "Get %1 tx power",
  "UHF_RFID_SET_TX_POWER": "Set %1 tx power %2",
  "UHF_RFID_ENABLE_CONTINUOUS_CARRIER": "%1 enable continuous carrier",
  "UHF_RFID_DISABLE_CONTINUOUS_CARRIER": "%1 disable continuous carrier",
  "UHF_RFID_SLEEP": "%1 sleep",
  "UHF_RFID_WAKEUP": "%1 wakeup",
  "UHF_RFID_WRITE_CUSTOM_COMMAND": "%1 write customer command list %2 reply %3",
  "IOT_BLYNK": "Legacy Blynk (V1)",
  "IOT_BLYNK_INIT": "Init with token %1",
  "IOT_BLYNK_DISCONNECT": "Disconnect",
  "IOT_BLYNK_VIRTUAL_WRITE": "Virtual pin number %1 data %2",
  "IOT_BLYNK_VIRTUAL_SYNC": "Virtual sync pin number %1",
  "IOT_BLYNK_EMAIL": "Email to %1 subject %2 body %3",
  "IOT_BLYNK_TWEET": "Tweet message %1",
  "IOT_BLYNK_NOTIFY": "Notify message %1",
  "IOT_BLYNK_SET_PROPERTY": "Set property pin number %1 property name %2 data %3",
  "IOT_BLYNK_EVENT_WRITE": "On event write %1 get pin number %2 value message %3 %4",
  "IOT_BLYNK_EVENT_READ": "On event read %1 get pin number %2 %3",
  "IOT_BLYNK_RUN": "Run in loop",
  "IOT_BLYNK_INIT_CUSTOMER": "Init with customer server %1 port %2 token %3 heartbeat %4 seconds",
  "GRBL": "GRBL",
  "GRBL_TURN": "Run motor x %1 y %2 z %3 speed %4",
  "GRBL_G_CODE": "Write G-code %1",
  "GRBL_SET_MODE": "Set GRBL mode %1",
  "GRBL_READ_CLEAN": "Clean GRBL return message",
  "GRBL_READ_LINE": "Read GRBL return message",
  "GRBL_READ_IDLE": "Is not in running",
  "GRBL_IN_LOCK": "Limit is in lock",
  "GRBL_WAIT_IDLE": "Wait motor stop run",
  "GRBL_UNLOCK": "Unlock limit",
  "GRBL_LOCK_MOTOR": "Lock motor after stop",
  "GRBL_UNLOCK_MOTOR": "Unlock motor after stop",
  "SOCKET": "Socket",
  "SOCKET_UDP_SERVER_START": "UDPサーバを開始する %1 IPアドレス %2 ポート %3",
  "SOCKET_UDP_CLIENT_START": "UDPクライアントを開始する %1 IPアドレス %2 ポート %3",
  "SOCKET_UDP_SENDTO": "データ %1 をIPアドレス %2 ポート %3 に送る",
  "SOCKET_WRITE": "データ %1 を書き込む",
  "SOCKET_SEND_MSG": "データ %1 を送る",
  "SOCKET_CLOSE": "切断する",
  "SOCKET_RECV": "%1 バイトデータを受け取る",
  "SOCKET_READ": "%1 バイト読み込む",
  "AZURE_INIT_IOTHUB": "IoT Hub Auth",
  "AZURE_INIT_CENTRAL": "Init IoT Central scope id %1 device id %2 device key %3",
  "AZURE_SUB_DIRECT": "Subscribe direct method %1 %2",
  "AZURE_SUB_DIRECT_RESPONSE": "%1 response status %2",
  "AZURE_UPDATE_PROPERTY": "Update twin reported properties",
  "AZURE_RETRIEVE_TWIN_PROPERTY": "Retrieve twin properties",
  "COMX": "COM.X",
  "LORAWAN470": "LoRaWAN 470",
  "LORAWAN915": "LoRaWAN 915",
  "LORAWAN470_INIT": "Init LoRaWAN 470 TX %1 RX %2",
  "LORAWAN470_CONFIG_ABP": "Config ABP mode %1 device address %2 app session key %3 network session key %4",
  "LORAWAN470_GET_ABP_CONFIG": "Get ABP config",
  "LORAWAN470_CONFIG_OTAA": "Config OTAA mode %1 device eui * %2 app key * %3 app eui %4",
  "LORAWAN470_GET_OTAA_CONFIG": "Get OTAA config",
  "LORAWAN470_CHECK_JOIN_STATUS": "Check join status",
  "LORAWAN470_CHECK_SENT_STATUS": "Check uplink data status",
  "LORAWAN470_CHECK_DOWNLINK_DATA": "Check and receive downlink data",
  "LORAWAN470_FREQUENCY_BAND_MASK": "Set frequency band mask %1 channels",
  "LORAWAN470_SET_RX_WINDOW_PARAM": "Config RX window param %1 RX1 offset %2 RX2 datarate %3 %4 RX2 freq (Hz) %5",
  "LORAWAN470_SET_CLASS_MODE": "Set class mode %1",
  "LORAWAN470_SEND_DATA": "Send data payload %1",
  "LORAWAN470_SET_UPLINK_APP_PORT": "Set uplink app port %1 (1 ~ 233)",
  "LORAWAN470_JOIN": "Join LoRaWAN network %1 %2 %3 %4 %5 period (seconds) %6 maximum number of attempts %7",
  "LORAWAN470_SET_UPLINK_MODE": "Set uplink downlink %1",
  "LORAWAN915_INIT": "Init LoRaWAN 915 TX %1 RX %2",
  "WDT": "Watch Dog Timer",
  "WDT_INIT": "WDT をタイムアウト %1 [ミリ秒]で初期化",
  "WDT_FEED": "WDT をフィード",
  "CAN": "CAN",
  "CAN_INIT": "Init bus %1 extframe %2 mode %3 baudrate %4 TX %5 RX %6",
  "CAN_SET_FILTER": "Set filter bank %1 mode %2 message %3",
  "CAN_SEND": "Send message %1 with id %2",
  "CAN_RECV": "Receive message",
  "CAN_RESTART": "Restart",
  "CAN_CLEARFILTER": "Clear filter",
  "CAN_CLEAR_TX_QUEUE": "Clear TX queue",
  "CAN_CLEAR_RX_QUEUE": "Clear RX queue",
  "CAN_STATE": " Get state of the controller",
  "CAN_ANY": "If any message waiting on the FIFO",
  "CAN_DEINIT": "Deinit",
  "AZURE_SUB_TWIN_DESIRED": "Subscribe twin desired payload %1",
  "RGB_MULTI_SET_HEXAGON_MATRIX": "neopixel hexagon matrix in",
  "SET": "Set",
  "RED": "red",
  "GREEN": "green",
  "BLUE": "blue",
  "UNIT_GPS_GET_STATE": "get %1 time",
  "UNIT_GPS_GET_SATELLITE_NUM": "get %1 satellite num",
  "UNIT_GPS_GET_POSITIONING_QUALITY": "get %1 positioning quality",
  "SPEAKER_PLAY_CLOUD_WAV": "Play cloud WAV file (URL) %1 volume %2",
  "IMAGE_SET_IMAGE_NETWORK": "%1 Set %2 network image %3",
  "ADDWAV": "Add WAV",
  "WAV": "WAV",
  "WAVFILE_SIZE_ERROR": "File must be less than 500KB.",
  "LABEL_SET_WIDTH": "Set %1 width %2",
  "LABEL_SET_TEXT_MODE": "Set %1 long text mode %2",
  "UNIT_CAM": "UNITCAM",
  "UNIT_CAM_SET_SHOW": "Set %1 image %2 in screen",
  "UNIT_CAM_SET_POSITION": "Set %1 image position x %2 y %3",
  "UNIT_CAM_SET_SIZE": "Set %1 image size %2",
  "UNIT_CAM_SET_BRIGHTNESS": "Set %1 led brightness %2",
  "UNIT_CAM_SET_MODE": "Switch %1 mode to %2",
  "UNIT_CAM_SET_WIFI": "Set %1 connect wifi ssid %2 pwd %3",
  "UNIT_CAM_SET_UPLOAD_TIME": "Set %1 upload time %2 seconds in cloud mode",
  "UNIT_CAM_GET_TOKEN": "Get %1 cloud token",
  "UNIT_CAM_GET_QRCODEURL": "Get qrcode url token %1",
  "LCD_QRCODE": "テキスト %1 位置(x %2 , y %3 ) 幅 %4 バージョン %5 のQRコードをLCDに表示",
  "COMLTE": "LTE",
  "COMLTE_INIT": "Init LTE TX %1 RX %2",
  "COMLTE_CHECK_STATUS": "Check module status",
  "COMLTE_POWER_DOWN_MODULE": "Power down module",
  "COMLTE_RESET_MODULE": "Reset module",
  "COMLTE_CHECK_SINGLE_QUALITY": "Check signal quality",
  "COMLTE_CHECK_NETWORK_REGISTRATION": "Check network registration",
  "COMLTE_CHECK_GPRS_NETWORK_REGISTRATION": "Check GPRS network registration",
  "COMLTE_ENABLE_PDP_CONTEXT": "Enable PDP context",
  "COMLTE_HTTP_TERMINATE": "HTTP(S) terminate",
  "COMLTE_HTTP_GET": "HTTP(S) GET url %1",
  "COMLTE_HTTP_POST": "HTTP(S) POST url %1 type %2 data %3",
  "AZURE_INIT_IOTHUB_CONNECTION": "Primary connection string",
  "OPEN_SDCARD_FILE": "SDCardをファイル %1 、モード %2 で開く",
  "FILE_READ_ALL": "ファイルを全て読み込み %1",
  "FILE_READ_BYTES": "ファイル %2 から %1 バイト読み込み",
  "FILE_READ_LINE": "ファイルから1行読み込み %1",
  "FILE_WRITE": "ファイルに %1 を書き込み",
  "FILE_SET_SEEK": "ファイルのシーク位置を %1 にする",
  "FILE_GET_SEEK": "ファイルのシーク位置を取得する %1",
  "SDCARD_LISTDIR": "SDCardのディレクトリ %1 を一覧表示する",
  "SDCARD_MKDIR": "SDCardにディレクトリ %1 を作成する",
  "SDCARD_REMOVE": "SDCardのファイル %1 を削除する",
  "SDCARD_RMDIR": "SDCardのディレクトリ %1 を削除する",
  "SDCARD_RENAME": "SDCardの %1 を %2 に名前変更する",
  "GET_KEYBOARD_CHARACTER": "キーボードの文字を取得",
  "GET_KEYBOARD_ASIIC": "キーボードのASIIC値を取得",
  "CLEAR_CHARACTERS": "入力された文字列をクリアー",
  "DELETE_BYTE": "最後に入力されたバイトを削除する",
  "GET_BTN_STATUS": "ボタンが押された状態を取得",
  "SET_LED_COLOR": "特定のLEDの色を設定する",
  "RESET_ENCODER": "エンコーダの値をゼロにリセットする",
  "GET_ENCODER": "エンコーダの値を取得する",
  "GET_DIRECTION_ROTATION": "回転の方向を取得する",
  "RETURN_ENCODER": "エンコーダのボタンが押された時にTrueを返す",
  "KEYFILE": "キーファイル",
  "CERTFILE": "証明書(CERT)ファイル",
  "HTTP_REQUEST": "HTTPリクエスト %1 メソッド %2 %3 URL %4 ヘッダー %5 データ %6",
  "TELLO_INITTELLO": "InitTello",
  "TELLO_CONNECTDRONE": "ConnectDrone",
  "TELLO_TAKEOFFDRONE": "takeoffDrone",
  "TELLO_LANDDRONE": "landDrone",
  "TELLO_ROTATECW": "rotateCW",
  "TELLO_ROTATECCW": "rotateCCW",
  "TELLO_DEGREE": "degree",
  "TELLO_FLIPRIGHT": "flipRight",
  "TELLO_FLIPLEFT": "flipLeft",
  "TELLO_MOVE_UP": "move_UP",
  "TELLO_CM": "cm",
  "TELLO_MOVE_DOWN": "move_Down",
  "TELLO_MOVE_FORWARD": "move_Forward",
  "TELLO_MOVE_BACKWARD": "move_Backward",
  "TELLO_MOVE_LEFT": "move_Left",
  "TELLO_MOVE_RIGHT": "move_Right",
  "REMOTE_SET_TITLE": "タイトルを %1 に設定",
  "CUSTOM": "Custom",
  "CUSTOM_CREATE": "*.m5bファイルを作成",
  "CUSTOM_OPEN": "*.m5bファイルを読み込み",
  "CUSTOM_USER": "ユーザーマニュアル",
  "DEMO": "デモ",
  "SINE_SIGNAL": "sin信号",
  "GET_CARD_EPC": "Get card EPC",
  "BTN_CONTROL_CLOUD_MODE": "ButtonA control cloud mode",
  "BTN_CONTROL_SHOW_QRCODE": "ButtonB control show qrcode (cloud mode)",
  "BTN_CONTROL_UART_MODE": "ButtonC control UART mode",
  "GPS_TIME": "Time",
  "GPS_POSITION": "Position/Motion",
  "GPS_INFO": "GPS Info",
  "READ_FILE": "Read file",
  "WRITE_FILE": "Write file",
  "PWM_SETUP": "Setup",
  "INCREMENTAL_PWM": "Incremental PWM",
  "PWM_CONTROL": "Control the rotating of servo to 0°",
  "PWM_CONTROL180": "Control the rotating of servo to 180°",
  "ADC_SET_PIN": "サンプリングするチャンネルのピン番号を設定",
  "ADC_SET_WIDTH": "サンプリングするデータのビット幅を設定",
  "ADC_SET_GAIN": "減衰率を設定",
  "ADC_DEMO_READ": "アナログ値の読み込み",
  "DAC_SET_CHANNEL": "変換するチャンネルのピン番号を設定",
  "DAC_WRITE_VALUE": "DAの値を書き込み",
  "DAC_SET_FREQ": "ブザーの周波数、時間、レンジを設定",
  "DAC_SET_OUTPUT": "出力の波形、周波数、出力電圧、オフセットを設定",
  "UART_READ_DATA": "シリアルポートからデータを読み込む",
  "IIC_DEMO_SCAN": "I2Cをスキャン",
  "IIC_CHECK": "初期化するアドレスが存在するか確認する",
  "IIC_DEMO_READ_DATA": "メモリのデータを読み込む",
  "IIC_DEMO_WRITE_DATA": "メモリのデータを書き込む",
  "ESP_NOW_INIT": "EspNow 初期化",
  "ESP_NOW_RECEIVE": "データを受信",
  "ESP_NOW_CHECK": "メッセージ送信が成功したかチェック",
  "ESP_NOW_BROADCAST": "ブロードキャスト",
  "ESP_NOW_SEND": "IDで送信",
  "HTTP_CONVERT_DATA": "JSONデータに変換",
  "HTTP_CHECK_CODE": "ステータスコードを確認",
  "UDP_RECEIVE_DATA": "Receive data",
  "MODBUS_MASTER_DEMO_INIT": "Init master",
  "MODBUS_MASTER_DEMO_SEND": "Send",
  "MODBUS_MASTER_DEMO_CHECK": "Check if data is received",
  "ESPNOW": "EspNow",
  "HTTP": "HTTP",
  "UDP_SERVER": "UDP Server",
  "UDP_CLIENT": "UDP Client",
  "MODBUS_MASTER_DEMO_RECEIVE": "Receive callback (Recommend)",
  "MODBUS_SLAVE_DEMO_INIT": "Init",
  "MODBUS_SLAVE_DEMO_WRITE": "Init function (Write)",
  "MODBUS_SLAVE_DEMO_READ": "Init function (Read)",
  "MODBUS_SLAVE_DEMO_RECEIVE": "Receive callback",
  "EEPROM_DEMO_CREATE": "EEPROMにkeyと値のベアデータを書き込む",
  "EEPROM_DEMO_READ_STRING": "keyから文字列で読み込む",
  "EEPROM_DEMO_READ_INT": "keyから整数で読み込む",
  "": "",
  "PIN_SERVO_INIT": "ピンサーボの初期化",
  "PIN_SERVO_SET_DEGREE": "角度の設定",
  "PIN_SERVO_SET_DURATION": "書き込み間隔の設定",
  "MQTT_DEMO_PUBLISH": "パブリッシュ",
  "MQTT_DEMO_SUBSCRIBE": "サブスクライブ",
  "LORAWAN_SET_FREQUENCY": "Set frequency",
  "LORAWAN_SEND_DATA": "Send data",
  "LORAWAN_RECEIVE_DATA": "Receive data callback",
  "STEP_MOTOR_SET_ADDRESS": "Set I2C address",
  "STEP_MOTOR_SET_MOTOR": "Set the stepping motor X-axis Y-axis Z-axis rotation steps and speed",
  "LORAWAN": "LoRaWAN",
  "STEP_MOTOR_RUN_CODE": "Run G code",
  "STEP_MOTOR_SET_MODE": "Set the motor into operating mode, distance mode or relative value mode",
  "STEP_MOTOR_LOCK_MOTOR": "Lock motor",
  "STEP_MOTOR_UNLOCK_MOTOR": "Unlock motor",
  "DAC_STOP_OUTPUT": "出力を停止",
  "DAC_SET_FREQUENCY": "周波数を設定",
  "BALA_SET_MOTOR": "Set the motor rotation direction and speed",
  "BALA_SET_NUMBER": "Set the number of turning pulses",
  "BALA_SET_DEGREE": "Set the turning degree",
  "BALA_RETURN_ANGLE": "Return current angle",
  "BALA_SET_OFFSET": "Set the angular offset",
  "BALA_AUTO_BALANCE": "Auto balance",
  "GRBL_CONTROL_MOTOR": "Control motor",
  "COMLTE_SET_HTTP_GET": "Set HTTP GET",
  "COMLTE_SET_HTTP_POST": "Set HTTP POST",
  "HTTP_GET_DATA": "データを取得 %1",
  "HTTP_GET_STATUS_CODE": "ステータスコードを取得 %1",
  "HTTP_SUCCESS": "成功時 %1",
  "HTTP_Fail": "失敗時 %1",
  "HAT_ENV_READ_VALUE": "Read value",
  "HAT_PIR_RETURN_STATUS": "PIRのステータスを返す",
  "HAT_SPK_OUTPUT": "音の出力",
  "HAT_NCIR_READ_VALUE": "Read value",
  "HAT_DAC_OUTPUT": "Output voltage",
  "HAT_ADC_READ": "Read voltage",
  "HAT_SERVO_RUN": "サーボを動かす",
  "HAT_PUPPYC_MOVE": "Move PuppyC",
  "HAT_JOYSTICK_READ": "ジョイスティックの値を読み込む",
  "HAT_BUGC_SETUP": "BugCの設定",
  "HAT_BEETLEC_SETUP": "Setup",
  "HAT_YUN_READ_VALUE": "YUNの値を読む",
  "HAT_JOYC_READ": "Read left value",
  "HAT_ROVERC_RUN": "Run RoverC",
  "HAT_TOF_READ": "距離[mm]を読み込む",
  "HAT_THERMAL_READ": "Read center, max and min temperature",
  "HAT_CARDKB_READ_VALUE": "Read key value and string",
  "HAT_EVN2_READ_VALUE": "Read value",
  "UNIT_ANGLE_READ": "Read angle",
  "UNIT_ENV_READ": "Read temp humid and pressure",
  "UNIT_NEOPIXEL_FLASH_LED": "Flash the LED in a random color",
  "UNIT_PIR_DEMO_READ": "PIRステータス検知",
  "UNIT_JOYSTICK_DEMO_READ": "ジョイスティックのX,Yと状態を読み込む",
  "UNIT_MAKEY_DEMO_READ": "Read makey value",
  "UNIT_SERVO_DEMO_CONTROL": "90度に回転するように制御する",
  "UNIT_WEIGHT_DEMO_READ": "Read weight",
  "UNIT_TRACE_DEMO_READ": "Read digital value of 4 sensors",
  "UNIT_BUTTON_DEMO_READ": "Read button state",
  "UNIT_RGB_DEMO_SET": "LEDの色を設定する",
  "UNIT_RELAY_DEMO_SET": "Set RELAY status",
  "UNIT_ADC_DEMO_READ": "Read ADC value",
  "UNIT_DAC_DEMO_SET": "Set output voltage",
  "UNIT_NCIR_DEMO_GET": "Get NCIR read temperature",
  "UNIT_IR_DEMO_READ": "Read IR state",
  "UNIT_EXTIO_DEMO_SET": "Set ext_IO pin mode",
  "UNIT_LIGHT_DEMO_READ": "Read light value",
  "UNIT_EARTH_DEMO_READ": "アースの値を読み込む",
  "UNIT_TOF_DEMO_READ": "測定物との距離[mm]をToFで読み込む",
  "UNIT_COLOR_DEMO_READ": "検出されたRGB値を読み込む",
  "UNIT_RFID_DEMO_READ": "カードを検出し、カードIDを読み込む",
  "UNIT_FINGER_DEMO_ENTER": "Enter the fingerprint",
  "UNIT_CARKB_DEMO_READ_VALUE": "Read key value and key name",
  "UNIT_PBHUB_DEMO_SET": "RGB LEDの明るさと色を設定",
  "UNIT_PAHUB_DEMO_OPEN": "ポートをオープン",
  "UNIT_GPS_DEMO_GET_VALUE": "Get gps value",
  "UNIT_HEART_DEMO_READ": "心拍数とSpO2を読み込む",
  "UNIT_ACCEL_DEMO_READ_VALUE": "加速度を読み込む",
  "UNIT_ACSOCKET_DEMO_SET_VALUE": "Set AC Socket value",
  "SPEAKER_PLAY_WAV_RATE": "Play local WAV file %1 samplerate %2 data format %3 channel %4 volume %5",
  "UNIT_V_MOTION_DEMO": "Judge whether the target is moving",
  "UNIT_V_TRACK_DEMO": "Set and track targets",
  "UNIT_V_COLOR_DEMO": "Get number of pixels and coordinate of the tracked color",
  "UNIT_V_FACE_DEMO": "Get values of face",
  "UNIT_V_QR_DEMO": "Read QR code information and version numbers",
  "UNIT_V_APRILTAG_DEMO": "Read the AprilTag code rotation, the number of moving units, and detailed location information",
  "UNIT_V_BAR_DEMO": "Read the barcode information",
  "UNIT_V_DM_DEMO": "Read DM code information, rotation angle, and location information",
  "UNIT_V_LINE_DEMO": "Read the line offset angle",
  "UNIT_V_TAG_DEMO": "Read the tag information",
  "UNIT_BPS_DEMO_READ": "気圧と温度を読み込む",
  "UNIT_TVOC_DEMO_READ": "値を読み込む",
  "UNIT_VMETER_DEMO_READ": "Read voltage value",
  "UNIT_AMETER_DEMO_READ": "Read current value",
  "UNIT_OP_DEMO_READ": "Read OP value",
  "UNIT_HALL_DEMO_READ": "HALLの値を読み込む",
  "UNIT_FAN_DEMO_SET": "デュティー比を設定する",
  "UNIT_VIBRATOR_DEMO_SET": "デュティー比を設定する",
  "UNIT_LASERRX_DEMO_RETURN": "Return received data",
  "UNIT_ULTRA_DEMO_READ": "Read distance",
  "UNIT_WATERING_DEMO_READ": "Read water value and run pump",
  "UNIT_DDS_DEMO_OUTPUT": "Output sine wave",
  "GAMEBOY_DEMO_GET": "Get the button status",
  "JOYSTICK_DEMO_READ": "ジョイスティックのデータを読み込む",
  "KEYBOARD_DEMO_RETURN": "Return the input string",
  "RFID_DEMO_RETURN": "RFIDカードのデータを返す",
  "SERVO_DEMO_SET": "Set servo",
  "SERVO2_DEMO_SET": "Set servo",
  "BALAMOTOR_DEMO_SET": "Move forward 500 pulses at 255 speed",
  "PM25_DEMO_READ": "Read amount of PM2.5",
  "BASEX_DEMO_SET": "Set motor to 1000 at 50 speed",
  "PLUS_DEMO_READ": "Read encoder status",
  "GOPLUS_DEMO_READ": "Read digital, analog",
  "GPS_DEMO_READ": "Read GPS related information",
  "MICROPHONE": "マイク",
  "MICROPHONE_RECORDFILE": "ファイル名 %2 (例:'/flash/test.wav'や'/sd/test.wav')で %1 秒間ファイルに録音",
  "HAT_FINGER_DEMO_READ": "Read fingerprint id and permissions",
  "UNIT_FINGER_DEMO_READ": "Read fingerprint id and permissions",
  "UNIT_LASERTX_DEMO_CONTROL": "Control Tx on and off",
  "UNIT_DUAL_BUTTON_DEMO_READ": "Read button state",
  "FACES_FINGER_DEMO_GET": "Get the fingerprint read status",
  "MODE": "Mode",
  "UNIT_V2": "UnitV2の機能",
  "UNIT_V2_FACE_DETECTOR": "顔検出装置",
  "UNIT_V2_OBJECT_RECOGNITION": "物体認識",
  "UNIT_V2_CODE_DETECTOR": "QRコード検出装置",
  "V2_FACE_INIT": "%1 顔検出装置を初期化",
  "V2_FACE_GET_NUMBER": "検出した顔の数",
  "V2_FACE_GET_DETAIL": "%1 番目に検出した顔の詳細",
  "V2_OBJECT_INIT": "%1 物体認識装置を初期化",
  "V2_OBJECT_GET_NUMBER": "認識した物体の数",
  "V2_OBJECT_GET_DETAIL": "%1 番目に検出した物体の詳細",
  "V2_CODE_INIT": "%1 QRコード検出装置を初期化",
  "V2_CODE_GET_NUMBER": "検出したQRコードの数",
  "V2_CODE_GET_DETAIL": "%1 番目に検出したQRコードの詳細",
  "IR_GPIO_MODE": "GPIO Mode",
  "IR_NEC_MODE": "NEC Mode",
  "IR_NEC_MODE_TIPS": "Recommended download to the device for use NEC mode",
  "UNIT_IR_NEC_TX": "%1 send addr %2 data %3",
  "UNIT_IR_NEC_CB": "%1 receive data %2 addr %3",
  "NBIOT": "NB-IoT",
  "NBIOT_DEMO_SET": "CoAP test",
  "NBIOT_COAP_TITLE": "CoAP",
  "NBIOT_INIT": "Init NB-IoT TX %1 RX %2",
  "NBIOT_COAP_CONNECT": "CoAP connect ip %1 port %2",
  "NBIOT_COAP_GET": "CoAP GET url %1 security",
  "NBIOT_COAP_POST": "CoAP POST url %1 payload %2 content format %3 security",
  "NBIOT_COAP_PUT": "CoAP PUT url %1 payload %2 content format %3 security",
  "NBIOT_COAP_DESTROY": "CoAP destroy",
  "NBIOT_MQTT_TITLE": "MQTT",
  "NBIOT_MQTT_CONNECT": "MQTT connect server %1 port %2 client id %3 username %4 password %5 keepalive %6",
  "NBIOT_MQTT_CONNECT_TO_ALIBABA": "MQTT connect to alibaba",
  "NBIOT_MQTT_CONNECT_TO_AZURE": "MQTT connect to azure",
  "NBIOT_MQTT_DISCONNECT": "MQTT disconnect",
  "NBIOT_MQTT_SUB": "MQTT subscribe topic %1 QoS %2",
  "NBIOT_MQTT_SUB_CB": "MQTT subscribe callback topic %1 payload %2",
  "NBIOT_MQTT_UNSUBSCRIBE": "MQTT unsubscribe topic %1",
  "NBIOT_MQTT_PUBLISH": "MQTT publish topic %1 payload %2 QoS %3",
  "NBIOT_MQTT_CHECK_CONNECTION": "MQTT check connection",
  "NBIOT_MQTT_POLL": "MQTT poll downlink message",
  "POWER_SET_LDO2_VOLTAGE": "Set LCD voltage to %1",
  "IR_SEND_ADDR": "IR(NEC) send addr %1 data %2",
  "UNIT_NBIOT_ENABLE_PDP_CONTEXT": "%1 Enable PDP context",
  "UNIT_OLED": "OLED",
  "OLED_FILL": "%1 %2 で塗りつぶし",
  "OLED_FILL_RECT": "%1 x: %2 y: %3 w: %4 h: %5 color: %6 で塗りつぶした四角を描画",
  "OLED_LINE": "%1 x1: %2 y1: %3 x2: %4 y2: %5 色: %6 で線を描画",
  "OLED_HLINE": "%1 x: %2 y: %3 w: %4 色: %5 で水平線を描画",
  "OLED_VLINE": "%1 x: %2 y: %3 h: %4 色: %5 で垂直線を描画",
  "OLED_RECT": "%1 x: %2 y: %3 w: %4 h: %5 色: %6 で四角を描画",
  "OLED_TEXT": "%1 テキスト %2 を x: %3 y: %4 色: %5 で描画",
  "OLED_PIXEL": "%1 x: %2 y: %3 色: %4 で点を描画",
  "OLED_SCROLL": "%1 画面をX方向に %2 、Y方向に %3 スクロール",
  "OLED_POWERON": "%1 電源オン",
  "OLED_POWEROFF": "%1 電源オフ",
  "OLED_SHOW": "%1 画面を表示",
  "OLED_INVERT": "%1 反転表示 %2",
  "OLED_IMAGE": "%1 画像 %2 をx: %3 y: %4 に描画",
  "ALI_IOT": "AliIoT",
  "ALIIOT_INIT": "Init product key %1 device name %2 device secret %3 device id (customize) %4 region id %5",
  "ALIIOT_START": "Start AliIoT",
  "ALIIOT_SUB_USER": "Subscribe user down msg %1",
  "ALIIOT_PUBLISH_USER": "Publish user update msg %1",
  "ALIIOT_SUB_RAW": "Subscribe raw down msg %1",
  "ALIIOT_PUBLISH_RAW": "Publish raw up msg %1",
  "ALIIOT_SUB_SHADOW": "Subscribe shadow down msg %1",
  "ALIIOT_PUBLISH_SHADOW": "Publish shadow update msg",
  "UNIT_NBIOT": "NBIoT",
  "UNIT_NBIOT_CHECK_STATUS": "%1 check module status",
  "UNIT_NBIOT_POWER_DOWN_MODULE": "%1 power down module",
  "UNIT_NBIOT_RESET_MODULE": "%1 reset module",
  "UNIT_NBIOT_CHECK_SINGLE_QUALITY": "%1 check single quality",
  "UNIT_NBIOT_CHECK_NETWORK_REGISTRATION": "%1 check network registration",
  "UNIT_NBIOT_CHECK_GPRS_NETWORK_REGISTRATION": "%1 check GPRS network registration",
  "UNIT_NBIOT_COAP_CONNECT": "%1 CoAP connect ip %2 port %3",
  "UNIT_NBIOT_COAP_GET": "%1 CoAP GET url %2 security",
  "UNIT_NBIOT_COAP_POST": "%1 CoAP POST url %2 payload %3 content format %4 security",
  "UNIT_NBIOT_COAP_PUT": "%1 CoAP PUT url %2 payload %3 content format %4 security",
  "UNIT_NBIOT_COAP_DESTROY": "%1 CoAP destroy",
  "UNIT_NBIOT_MQTT_CONNECT": "%1 MQTT connect server %2 port %3 client id %4 username %5 password %6 keepalive %7",
  "UNIT_NBIOT_MQTT_DISCONNECT": "%1 MQTT disconnect",
  "UNIT_NBIOT_MQTT_SUB": "%1 MQTT subscribe topic %2 QoS %3",
  "UNIT_NBIOT_MQTT_SUB_CB": "MQTT subscribe callback topic %1 msg %2",
  "UNIT_NBIOT_MQTT_UNSUBSCRIBE": "%1 MQTT unsubscribe topic %2",
  "UNIT_NBIOT_MQTT_PUBLISH": "%1 MQTT publish topic %2 payload %3 QoS %4",
  "UNIT_NBIOT_MQTT_CHECK_CONNECTION": "%1 MQTT check connection",
  "UNIT_NBIOT_MQTT_POLL": "%1 MQTT poll downlink message",
  "UNIT_NBIOT_MQTT_DEMO_PUBLISH": "MQTT publish",
  "UNIT_NBIOT_MQTT_DEMO_SUBSCRIBE": "MQTT subscribe",
  "HAT_RS485": "RS485",
  "UNIT_RS485": "RS485",
  "UNIT_ISO485": "ISO RS485",
  "UNIT_RS485_WRITE": "%1 write %2",
  "UNIT_RS485_WRITE_LINE": "%1 write a line %2",
  "UNIT_RS485_WRITE_RAW_DATA": "%1 write raw data %2",
  "UNIT_RS485_READ_COILS": "%1 read coils slave address %2 starting address %3 coil qty %4",
  "UNIT_RS485_READ_DISCRETE_INPUTS": "%1 read discrete inputs slave address %2 starting address %3 input qty %4",
  "UNIT_RS485_READ_HOLDING_REGISTERS": "%1 read holding registers slave address %2 starting address %3 register qty %4 signed %5",
  "UNIT_RS485_READ_INPUT_REGISTERS": "%1 read input registers slave address %2 starting address %3 register qty %4 signed %5",
  "UNIT_RS485_WRITE_SINGLE_COIL": "%1 write single coil slave address %2 output address %3 output value %4",
  "UNIT_RS485_WRITE_SINGLE_REGISTER": "%1 write single register slave address %2 register address %3 register value %4 signed %5",
  "UNIT_RS485_WRITE_MULTIPLE_COILS": "%1 write multiple coils slave address %2 starting address %3 output value %4",
  "UNIT_RS485_WRITE_MULTIPLE_REGISTERS": "%1 write multiple register slave address %2 starting address %3 register value %4 signed %5",
  "LORAWAN868": "LoRaWAN 868",
  "UNIT_LORAWAN470_CONFIG_ABP": "%1 Config ABP mode %2 device address %3 app session key %4 network session key %5",
  "UNIT_LORAWAN470_GET_ABP_CONFIG": "%1 Get ABP config",
  "UNIT_LORAWAN470_CONFIG_OTAA": "%1 Config OTAA mode %2 device eui * %3 app key * %4 app eui %5",
  "UNIT_LORAWAN470_GET_OTAA_CONFIG": "%1 Get OTAA config",
  "UNIT_LORAWAN470_CHECK_JOIN_STATUS": "%1 Check join status",
  "UNIT_LORAWAN470_CHECK_SENT_STATUS": "%1 Check uplink data status",
  "UNIT_LORAWAN470_CHECK_DOWNLINK_DATA": "%1 Check and receive downlink data",
  "UNIT_LORAWAN470_FREQUENCY_BAND_MASK": "%1 Set frequency band mask %2 channels",
  "UNIT_LORAWAN470_SET_RX_WINDOW_PARAM": "%1 Config RX window param %2 RX1 offset %3 RX2 datarate %4 %5 RX2 freq (Hz) %6",
  "UNIT_LORAWAN470_SET_CLASS_MODE": "%1 Set class mode %2",
  "UNIT_LORAWAN470_SEND_DATA": "%1 Send data payload %2",
  "UNIT_LORAWAN470_SET_UPLINK_APP_PORT": "%1 Set uplink app port %2 (1 ~ 233)",
  "UNIT_LORAWAN470_JOIN": "%1 Join LoRaWAN network %2 %3 %4 %5 %6 period (seconds) %7 maximum number of attempts %8",
  "UNIT_LORAWAN470_SET_UPLINK_MODE": "%1 Set uplink downlink %2",
  "DTU_NB": "NB-IoT",
  "BASE_DTUNB_INIT": "Init NB-IoT DTU",
  "BASE_DTUNB_READ": "RS485 read all",
  "BASE_DTUNB_READ_CHARACTERS": "RS485 read %1 characters",
  "BASE_DTUNB_READLINE": "RS485から1行読み込む",
  "BASE_DTUNB_ANY": "Remain cache ",
  "BASE_DTUNB_WRITE_LINE": "RS485 write a line %1",
  "BASE_DTUNB_WRITE": "RS485 write %1",
  "BASE_DTUNB_WRITE_RAW_DATA": "RS485 write raw data %1",
  "BASE_DTUNB_READ_COILS": "Read coils slave address %1 starting address %2 coil qty %3",
  "BASE_DTUNB_READ_DISCRETE_INPUTS": "Read discrete inputs slave address %1 starting address %2 input qty %3",
  "BASE_DTUNB_READ_HOLDING_REGISTERS": "Read holding registers slave address %1 starting address %2 register qty %3 signed %4",
  "BASE_DTUNB_READ_INPUT_REGISTERS": "Read input registers slave address %1 starting address %2 register qty %3 signed %4",
  "BASE_DTUNB_WRITE_SINGLE_COIL": "Write single coil slave address %1 output address %2 output value %3",
  "BASE_DTUNB_WRITE_SINGLE_REGISTER": "Write single register slave address %1 register address %2 register value %3 signed %4",
  "BASE_DTUNB_WRITE_MULTIPLE_COILS": "Write multiple coils slave address %1 starting address %2 output value %3",
  "BASE_DTUNB_WRITE_MULTIPLE_REGISTERS": "Write multiple register slave address %1 starting address %2 register value %3 signed %4",
  "DTU": "DTU",
  "BASE_LORAWAN470_INIT": "Init LoRaWAN 470 DTU",
  "BASE_LORAWAN868_INIT": "Init LoRaWAN 868 DTU",
  "BASE_LORAWAN915_INIT": "Init LoRaWAN 915 DTU",
  "BASE_DTUNB_SET_ECHO_MODE": "Set command echo mode %1",
  "UNIT_NBIOT_SET_ECHO_MODE": "%1 Set command echo mode %2",
  "SCREEN_SET_BGCOLOR_RGB": "画面の背景色を赤 %1 緑 %2 青 %3 に設定する",
  "FACES_ENCODE_SETLED_RGB": "位置 %1 のLEDの色を赤 %2 緑 %3 青 %4 に設定",
  "remoteName": "名前",
  "remoteColor": "色",
  "showTitle": "タイトルを表示",
  "showValue": "値を表示",
  "offLabel": "ラベルをオフ",
  "onLabel": "ラベルをオン",
  "offColor": "色をオフ",
  "onColor": "色をオン",
  "offBG": "背景をオフ",
  "onBG": "背景をオン",
  "label": "ラベル",
  "bgColor": "背景",
  "minValue": "最小値",
  "maxValue": "最大値",
  "edges": "Edges",
  "style": "スタイル",
  "fontsize": "フォントの大きさ",
  "interval": "時間間隔(ms)",
  "hint": "ヒント",
  "characterLimit": "Character Limit",
  "LORAWAN470_SET_JOIN_MODE": "Set join mode %1",
  "UNIT_LORAWAN470_SET_JOIN_MODE": "%1 Set join mode %2",
  "align": "Align",
  "fallbackUrl": "Backup Url",
  "SYSTEM": "システム",
  "SYSTEM_RESET": "システムをリセット",
  "BASE_QRCODE_TRIGGER": "Trigger %1",
  "HDRIVER_INIT": "Init H·Driver",
  "MOTION_INIT": "Init Motion",
  "MODBUS_MASTER_READ_COILS": "Read coils slave address %1 starting address %2 coil qty %3",
  "MODBUS_MASTER_READ_DISCRETE_INPUTS": "Read discrete inputs slave address %1 starting address %2 input qty %3",
  "MODBUS_MASTER_READ_HOLDING_REGISTERS": "Read holding registers slave address %1 starting address %2 register qty %3 signed %4",
  "MODBUS_MASTER_READ_INPUT_REGISTERS": "Read input registers slave address %1 starting address %2 register qty %3 signed %4",
  "MODBUS_MASTER_WRITE_SINGLE_COIL": "Write single coil slave address %1 output address %2 output value %3",
  "MODBUS_MASTER_WRITE_SINGLE_REGISTER": "Write single register slave address %1 register address %2 register value %3 signed %4",
  "MODBUS_MASTER_WRITE_MULTIPLE_COILS": "Write multiple coils slave address %1 starting address %2 output value %3",
  "MODBUS_MASTER_WRITE_MULTIPLE_REGISTERS": "Write multiple register slave address %1 starting address %2 register value %3 signed %4",
  "MODBUS_MASTER_U_INIT": "Init UART id %1 TX %2 RX %3 baudrate %4 data bits %5 stop bits %6 parity %7",
  "HAT_ENV3": "ENV III",
  "UNIT_THERMAL_GET_MAX_TEMPERATURE": "Get %1 max temperature",
  "UNIT_THERMAL_GET_MIN_TEMPERATURE": "Get %1 min temperature",
  "UNIT_THERMAL_GET_CENTER_TEMPERATURE": "Get %1 center temperature",
  "UNIT_THERMAL_GET_PIXEL_TEMPERATURE": "Get %1 pixel x %2 y %3 temperature",
  "UNIT_THERMAL_GET_TEMPERATURE": "Get %1 temperature",
  "UNIT_THERMAL_GET_REFRESH_RATE": "Get %1 refresh rate",
  "UNIT_THERMAL_UPDATE_TEMPERATURE": "%1 update temperature",
  "UNIT_THERMAL_SET_REFRESH_RATE": "Set %1 refresh rate %2",
  "UNIT_RS485_INIT": "%1 init UART id %2 baudrate %3 data bits %4 stop bits %5 parity %6",
  "MAC_ADDR": "MAC :",
  "UNIT_V2_COLOR_TRACKER": "色追跡装置",
  "UNIT_V2_FACE_RECOGNITION": "Face Recognition",
  "UNIT_V2_LANE_LINE_TRACKER": "Lane Line Tracker",
  "UNIT_V2_MOTION_TRACKER": "動き追跡装置",
  "UNIT_V2_ONLINE_CLASSIFIER": "Online Classifier",
  "UNIT_V2_SHAPE_DETECTOR": "形検出装置",
  "UNIT_V2_TARGET_TRACKER": "目標物追跡装置",
  "V2_COLOR_INIT": "%1 色追跡装置を初期化",
  "V2_COLOR_CONFIG_LAB_THRESHOLD": "LAB色空間(L:最小値 %1 最大値 %2 , A:最小値 %3 最大値 %4 , B:最小値 %5 最大値 %6 )で閾値を設定",
  "V2_COLOR_CONFIG_ROI": "興味のある領域(ROI)を左上座標(x: %1 , y:%2 )、領域の大きさ(w(幅): %3, h(高さ):%4 )に設定",
  "V2_COLOR_GET_DETAIL": "色追跡結果の詳細",
  "V2_FACE_RE_INIT": "Init %1 Face Recognition",
  "V2_FACE_RE_TRAIN": "Train face id %1 name %2",
  "V2_FACE_RE_STOP_TRAIN": "Stop train",
  "V2_FACE_RE_SAVE_RUN": "Save and run",
  "V2_FACE_RE_RESET": "Reset",
  "V2_FACE_RE_GET_NUMBER": "Get the number of faces",
  "V2_FACE_RE_GET_DETAIL": "Get number %1 face detail",
  "V2_FACE_RE_GET_TRAINING_DETAIL": "Get training detail",
  "V2_LANE_LINE_INIT": "Init %1 Lane Line Tracker",
  "V2_LANE_LINE_GET_DETAIL": "Get lane line tracker detail",
  "V2_MOTION_INIT": "%1 動き追跡装置を初期化",
  "V2_MOTION_SET_BG": "現在の画像を背景として設定",
  "V2_MOTION_GET_DETAIL": "%1 番目に検出した動いたものの詳細",
  "V2_ONLINE_INIT": "Init %1 Online Classifier",
  "V2_ONLINE_TRAIN": "Train online class id %1 class %2",
  "V2_ONLINE_SAVE_RUN": "Save and run",
  "V2_ONLINE_RESET": "Reset",
  "V2_ONLINE_GET_MATCH": "Get best match",
  "V2_ONLINE_GET_SCORE": "Get best score",
  "V2_ONLINE_GET_NUMBER": "Get class number",
  "V2_ONLINE_GET_DETAIL": "Get number %1 class detail",
  "V2_SHAPE_INIT": "%1 形検出装置を初期化",
  "V2_SHAPE_SET_BG": "現在の画像を背景として設定",
  "V2_SHAPE_GET_DETAIL": "%1 番目に検出した形の詳細",
  "V2_TARGET_INIT": "%1 目標物追跡装置を初期化",
  "V2_TARGET_GET_DETAIL": "目標物の詳細",
  "FADER": "FADER",
  "FADER_SET_COLOR": "%1 の %2 番目のLEDの色を %3 に設定",
  "FADER_SET_COLOR_RGB": "%1 の %2 番目のLEDの色を赤 %3 緑 %4 青 %5 に設定",
  "FADER_SET_BRIGHTNESS": "%1 のLEDの輝度を %2 に設定",
  "FADER_READRAW12": "%1 の12bit生データ",
  "FADER_READRAW16": "%1 の16bit生データ",
  "FADER_SET_COLOR_POT": "%1 のLED %2 番目の色をスライダーの値に設定",
  "FADER_SET_BRIGHT_POT": "%1 のLEDの輝度をスライダーの値に設定",
  "ESPNOW_ADD_PEER2": "ピア(接続相手) %1 ID %2 チャンネル %3 ifidx %4 で追加",
  "STEPMOTOR_DRIVER": "StepMotor Driver",
  "STEPMOTOR_DRIVER_SET_STEP_PULSE": "Set step pulse freq %1",
  "STEPMOTOR_DRIVER_SET_MICRO_STEPSELECT": "Set micro step select %1",
  "STEPMOTOR_DRIVER_SET_STEP_DIR": "Set motor %1 dir %2",
  "STEPMOTOR_DRIVER_READ_IO_STATUS": "Read all limit IO status",
  "STEPMOTOR_DRIVER_READ_PIN_STATUS": "Read limit IO %1 status",
  "STEPMOTOR_DRIVER_ENABLE_MOTOR": "Set all motor state %1",
  "STEPMOTOR_DRIVER_SET_SINGLE_MOTOR": "Set single motor %1 state %2",
  "step": "Step",
  "TEXT_TRIM_STRING": "trim %1 from %2 of %3",
  "MODBUS_SLAVE_RTU_INIT": "Init UART id %1 TX %2 RX %3 baudrate %4 data bits %5 stop bits %6 parity %7 addr %8",
  "MODBUS_SLAVE_RTU_INIT_FUNC": "Init function %1 start addr %2 quantity %3",
  "MODBUS_SLAVE_RTU_UPDATE_FUNC": "Update function %1 start addr %2 quantity %3 value %4",
  "MODBUS_SLAVE_RTU_RECEIVE_ADU": "Receive ADU request",
  "MODBUS_SLAVE_RTU_SEND": "Send ADU response buffer %1",
  "MODBUS_SLAVE_RTU_GET_FUNCTION": "Get function code",
  "MODBUS_SLAVE_RTU_GET_ADDRESS": "Get address",
  "MODBUS_SLAVE_RTU_GET_QUANTITY": "Get quantity",
  "MODBUS_SLAVE_RTU_FUN_STATUS": "Function code %1",
  "GESTURE": "Gesture",
  "GESTURE_BEGIN": "%1 を開始",
  "GESTURE_GET": "%1 のジェスチャーを取得",
  "GESTURE_GET_DESC": "%1 のジェスチャの %2 番目の表現を取得",
  "GESTURE_SET_HIGHRATE": "%1 の高レートを %2 に設定",
  "GESTURE_STATUS": "%1 が %2",
  "MQTT": "MQTT",
  "UNIT_MQTT_START": "%1 start",
  "UNIT_MQTT_STOP": "%1 stop",
  "UNIT_MQTT_IS_LAN_CONNECT": "%1 check LAN connection",
  "UNIT_MQTT_IS_MQTT_CONNECT": "%1 check MQTT connection",
  "UNIT_MQTT_SAVE_PARAM": "%1 save configure parameter",
  "UNIT_MQTT_CONFIG": "%1 config MQTT %2 server %3 port %4 client id %5 user %6 password %7 keepalive %8",
  "UNIT_MQTT_SUBSCRIBE": "%1 subscribe number %2 topic %3 quality %4",
  "UNIT_MQTT_PUBLISH": "%1 publish topic %2 message %3 quality %4",
  "UNIT_MQTT_RECEIVE": "%1 receive message timeout %2",
  "EZDATA": "EzData",
  "EZDATA_GET_KEY_WITH_TOKEN": "Get value from topic %1 with token %2",
  "EZDATA_SET_KEY_WITH_TOKEN": "Save value %2 to topic %1 with token %3",
  "EZDATA_ADD_VALUE_WITH_TOKEN": "Save value %2 to list %1 with token %3",
  "EZDATA_GET_LIST_WITH_TOKEN": "Get value from list %1 offset %2 count %3 with token %4",
  "EZDATA_REMOVE_KEY_WITH_TOKEN": "Remove topic %1 with token %2",
  "RTC": "RTC",
  "UNIT_RTC_SET_DATE_TIME": "%1 の設定 %2 年 %3 月 %4 日 %5 週 %6 時間 %7 分 %8 秒 %9",
  "UNIT_RTC_GET_DATE_TIME": "%1 RTCの値の %2 を取得",
  "UNIT_RTC_SET_ALARM": "%1 アラームを 日 %2 時 %3 分 %4 に設定",
  "UNIT_RTC_CHECK_ALARM_FLAG": "%1 アラームのフラグを確認",
  "UNIT_RTC_CLEAR_ALARM": "%1 アラームをOFF",
  "UNIT_RTC_DISABLE_ALARM": "%1 アラームを無効化",
  "UNIT_RTC_SET_TIMER_MODE": "%1 タイマーの値を %2 モード %3 で設定",
  "UNIT_RTC_GET_TIMER_VALUE": "%1 タイマーの値を取得",
  "UNIT_RTC_CHECK_TIMER_FLAG": "%1 タイマーのフラグを確認",
  "UNIT_RTC_DISABLE_TIMER": "%1 タイマーを無効化",
  "UNIT_RTC_PAUSE_TIMER": "%1 タイマーを一時停止",
  "UNIT_RTC_RESUME_TIMER": "%1 タイマーを復帰",
  "UNIT_RTC_CLEAR_TIMER_FLAG": "%1 タイマーをOFF",
  "chartTheme": "Theme",
  "showLegend": "Show Legend",
  "dataStreamName": "Dataset Name",
  "chartType": "Chart type",
  "yAxisMax": "Y Axis Max",
  "yAxisMin": "Y Axis Min",
  "yAxisSuffix": "Y Axis Label Suffix",
  "yAxisAuto": "Y Axis Auto",
  "ezdataToken": "EzData Token",
  "xAxisData": "X Data Source",
  "yAxisData": "Y Data Source",
  "topic": "Topic",
  "maxCount": "Max Count",
  "xMin": "X Min",
  "xMax": "X Max",
  "yMin": "Y Min",
  "yMax": "Y Max",
  "autoReturn": "Auto Return",
  "UNIT_LCD": "LCD",
  "UNIT_LCD_INIT_DISPLAY": "%1 display init width: %2 height: %3 stride: %4",
  "UNIT_LCD_IMAGE": "%1 draw image %2 x: %3 y: %4",
  "UNIT_LCD_TEXT": "%1 draw text %2 x: %3 y: %4 color: %5",
  "UNIT_LCD_FILL": "%1 fill %2",
  "UNIT_LCD_PIXEL": "%1 draw pixel x: %2 y: %3 color: %4",
  "UNIT_LCD_FILL_RECT": "%1 fill rect x: %2 y: %3 w: %4 h: %5 color: %6",
  "UNIT_LCD_LINE": "%1 draw line x1: %2 y1: %3 x2: %4 y2: %5 color: %6",
  "UNIT_LCD_HLINE": "%1 draw horizontal line x: %2 y: %3 w: %4 color: %5",
  "UNIT_LCD_VLINE": "%1 draw vertical line x: %2 y: %3 h: %4 color: %5",
  "UNIT_LCD_RECT": "%1 draw rect x: %2 y: %3 w: %4 h: %5 color: %6",
  "UNIT_LCD_ROTATE": "%1 set rotate %2",
  "UNIT_LCD_FLIP": "%1 set flip %2",
  "UNIT_LCD_BRIGHTNESS": "%1 set brightness %2",
  "UNIT_LCD_SLEEP": "%1 set sleep %2",
  "UNIT_LCD_SHOW_ON": "%1 show on",
  "EZDATA_GET_ISO_DATE": "Get current ISODateTime",
  "UNIT_ROTARY": "Rotary Encoder",
  "UNIT_ROTARY_SET_MODE": "%1 set mode %2",
  "UNIT_ROTARY_GET_AB_COUNT": "%1 get AB count",
  "UNIT_ROTARY_GET_PULSE_COUNT": "%1 get pulse count",
  "UNIT_ROTARY_GET_BTN_STATUS": "%1 get button status",
  "UNIT_ROTARY_SET_RGB_COLOR": "%1 set RGB color %2",
  "UNIT_ID": "ID",
  "UNIT_ID_WAKEUP": "%1 wake up",
  "UNIT_ID_GET_INFO": "%1 get info",
  "UNIT_ID_READ_CONFIG": "%1 read config zone",
  "UNIT_ID_SERIAL_NUMBER": "%1 serial number",
  "UNIT_ID_REVISION_NUMBER": "%1 revision number",
  "UNIT_ID_CONFIG_LOCK_STATUS": "%1 config lock status",
  "UNIT_ID_DATA_OTP_STATUS": "%1 data OTP lock status",
  "UNIT_ID_SLOT_STATUS": "%1 slot0 lock status",
  "UNIT_ID_GENERATE_PUBLIC_KEY": "%1 generate public key %2",
  "UNIT_ID_WRITE_CONFIG_ZONE": "%1 write config zone",
  "UNIT_ID_LOCK_CONFIG": "%1 lock config",
  "UNIT_ID_CREATE_KEYPAIR": "%1 create new key pair %2",
  "UNIT_ID_LOCK_DATA_OTP": "%1 lock data and OTP",
  "UNIT_ID_LOCK_DATA_SLOT": "%1 lock data slot0",
  "UNIT_ID_CREATE_SIGNATURE": "%1 create signature data %2 slot %3",
  "UNIT_ID_VERIFY_SIGNATURE": "%1 verify signature message %2 signature %3 publicKey %4",
  "UNIT_ID_PUBLIC_KEY_64BYTES": "%1 public key 64 bytes",
  "UNIT_ID_UPDATE_RANDOM_32BYTES": "%1 update random 32 bytes",
  "UNIT_ID_CONFIG_ZONE": "%1 config zone",
  "UNIT_ID_KEY_CONFIG": "%1 key config",
  "UNIT_ID_SLOT_CONFIG": "%1 slot config",
  "UNIT_ID_SIGNATURE": "%1 signature",
  "UNIT_ID_SHA256": "%1 SHA256 message %2 length %3",
  "UNIT_ID_RANDOM_MIN_MAX": "%1 random min %2 max %3",
  "SPEAKER_PLAY_WAV_SDCARD": "play SD card WAV file %1",
  "UNIT_TIMERCAM": "TimerCAM",
  "UNIT_JOYSTICKLED": "Joystick LED",
  "JOYSTICKLED_X_RAW": "%1 get X RAW",
  "JOYSTICKLED_Y_RAW": "%1 get Y RAW",
  "JOYSTICKLED_X": "%1 get X",
  "JOYSTICKLED_Y": "%1 get Y",
  "JOYSTICKLED_BTN_STATUS": "%1 button status",
  "JOYSTICKLED_LED_COLOR": "%1 LED RGB %2",
  "JOYSTICKLED_CALIBRATION": "%1 calibration %2",
  "suffix": "Suffix",
  "UNIT_ENCODER": "エンコーダ",
  "UNIT_ENCODER_COUNT": "エンコーダ %1 のカウント",
  "UNIT_ENCODER_BTN_STATUS": "エンコーダ %1 のボタンの状態",
  "UNIT_ENCODER_SET_COLOR": "エンコーダ %1 の LED %2 の色を %3 に設定",
  "LORA433": "LoRa 433",
  "LORA433_CONFIG": "Set lora configuration %1 freq %2 band %3 TX power %4 sync %5 spread factor %6 code rate %7 preamble %8 CRC %9",
  "LORA433_BEGIN_PACKET": "Set begin data packet",
  "LORA433_END_PACKET": "Set end data packet",
  "LORA433_PRINT_MSG": "Send message %1 in String",
  "LORA433_RECEIVED_PACKET": "Get size of data packet length (return int)",
  "LORA433_WRITE_BUFFER": "Send packet data in list %1",
  "LORA433_PACKET_RSSI": "Get rssi value (return int)",
  "LORA433_PACKET_SNR": "Get snr value (return int)",
  "LORA433_READ": "Receive packet in bytes",
  "LORA433_MESSAGE": "Receive message in string",
  "LORA433_SYNC_WORD": "Sync word %1",
  "LORA433_SET_FREQUENCY": "Set frequency %1",
  "LORA433_STAND_BY_MODE": "Set standby mode",
  "LORA433_SLEEP_MODE": "Set sleep mode",
  "LORA433_RECEIVE_CALLBACK": "Set receive callback IRQ handler",
  "LORA433_CALLBACK": "LoRa433 callback %1",
  "isHorizontal": "Orientation",
  "LORA868": "LoRa 868",
  "LORA868_CONFIG": "Set lora configuration %1 freq %2 band %3 TX power %4 sync %5 spread factor %6 code rate %7 preamble %8 CRC %9",
  "LORA868_CALLBACK": "LoRa868 callback %1",
  "LORA433_INIT": "Init lora module %1 CS pin %2 RST pin %3 IRQ pin %4",
  "dataSource": "データの場所",
  "FADER8_ADC_16RAW": "%1 get adc 16 raw %2",
  "FADER8_ADC_8RAW": "%1 get adc 8 raw %2",
  "FADER8_SWITCH_STATUS": "%1 get button status",
  "FADER8_LED_COLOR": "%1 set %2 LED color %3",
  "FADER8_SINGLE_COLOR": "%1 set single color %2 %3 %4",
  "LORABUS": "LoRaBus",
  "LORABUS_MASTER_INIT": "Init master %1 cs pin %2 reset pin %3 IRQ pin %4 freq %5",
  "LORABUS_MASTER_WRITE_REGISTER": "Master write register %1 slave address %2 start address %3 list %4",
  "LORABUS_MASTER_WRITE_MESSAGE": "Master write message %1 slave address %2 start address %3 message %4",
  "LORABUS_MASTER_READ_REGISTER": "Master read register %1 slave address %2 start address %3 quantity %4",
  "LORABUS_SLAVE_INIT": "Init slave %1 cs pin %2 reset pin %3 IRQ pin %4 freq %5 %6 slave address %7 write fifo size %8 read fifo size %9",
  "LORABUS_SLAVE_SET_READFIFO": "Set readfifo %1 addr %2 list %3",
  "LORABUS_SLAVE_RECEIVE": "Listen request",
  "LORABUS_SLAVE_GET_WRITEFIFO": "Get write fifo %1 addr %2 quantity %3",
  "HAT_CBACK": "C Back Driver",
  "HAT_CBACK_RAW_ADC": "%1 ADCの生データ",
  "HAT_CBACK_GET_INPUT": "%1 portBの入力",
  "HAT_SET_SERVO_ANGLE": "%1 サーボ %2 の角度を %3 に設定",
  "HAT_SET_SERVO_PULSE": "%1 サーボ %2 のパルスを %3 に設定",
  "HAT_SET_OUTPUT": "%1 portBの出力を %2 に設定",
  "LOAD_EXAMPLES": "例を読み込む",
  "timercamToken": "TimerCAM Token",
  "IIC_WRITE_MEM_DATA": "%1 レジスタ %2 データ %3 を %4 で書き込み",
  "IIC_WRITE_DATA": "%1 データ %2 を %3 で書き込み",
  "IIC_READ_MEM_DATA": "%1 レジスタ %2 値 %3 を %4 で読み込み",
  "IIC_READ_DATA": "%1 値 %2 を %3 で読み込み",
  "IIC_WRITE_MEM_LIST": "%1 リストの書き込み:レジスタ %2 バイト %3",
  "MQTT_PRINTER": "AtomPrinter (MQTT)",
  "MQTT_PRINTER_PUBLISH": "Mqtt publish format %1 message %2",
  "IIC_SET_SLAVE_ADDR": "%1 スレーブアドレスを %2 に設定",
  "MQTT_PRINTER_SET_TOPIC": "Set printer subscribe topic %1",
  "EZDATA_ASYNC_GET_VALUE": "ID:%1 Get value from topic %2 with token %3",
  "EZDATA_ASYNC_SET_VALUE": "ID:%1 Save value %2 to topic %3 with token %4",
  "EZDATA_ASYNC_GET_LIST_VALUE": "ID:%1 Get value from list %2 offset %3 count %4 with token %5",
  "EZDATA_ASYNC_SET_LIST_VALUE": "ID:%1 Save value %2 to list %3 with token %4",
  "EZDATA_ASYNC_REMOVE": "ID:%1 Remove topic %2 with token %3",
  "EZDATA_ASYNC_GET_ISO_DATE": "ID:%1 Get current ISODateTime (Async)",
  "FORUM": "コミュニティー",
  "SMARTCONFIG_SET_TYPE": "SmartConfigのタイプを %1 にする",
  "SMARTCONFIG_START": "SmartConfigを開始する",
  "SMARTCONFIG_STOP": "SmartConfigを停止する",
  "SMARTCONFIG_GET_STATUS": "SmartConfigの状態",
  "SMARTCONFIG_GET_SSID": "SmartConfigのSSID",
  "SMARTCONFIG_GET_PASSWORD": "SmartConfigのPASSWORD",
  "SMARTCONFIG_GET_PHONEIP": "SmartConfigのスマホ側IP",
  "WLAN_CREATE_STATION": "%1 用インタフェースを作成する",
  "WLAN_ACTIVE": "インタフェースを有効にするか %1",
  "WLAN_SCAN": "アクセスポイントを検索する",
  "WLAN_ISCONNECTED": "Wi-Fiが接続されているか確かめる",
  "WLAN_CONNECT": "SSID %1 PASSWORD %2 のWi-Fiと接続する",
  "WLAN_CONFIG": "インターフェース %1 の設定を取得する",
  "WLAN_IFCONFIG": "インターフェースの IP/Netmask/GW/DNSアドレスを取得する",
  "WLAN_STATUS": "接続状態を取得する",
  "WLAN_DISCONNECT": "Wi-Fiを切断する",
  "WLAN_STATE_DEFINE": "接続状態が %1 か",
  "SMARTCONFIG_STATE_DEFINE": "SmartConfigの状態が %1",
  "SMARTCONFIG_DEMO": "SmartConfigのデモ",
  "UNIT_MQTT_SUB_CB": "MQTT subscribe callback topic %1 msg %2",
  "UNIT_MQTT_CB_LOOP": "%1 callback polling",
  "needShadow": "Show Border",
  "IOTBASE": "IoT Base NB",
  "IOTBASE_MQTT_CONNECT": "Init connect server %1 port %2 client id %3 username %4 password %5 keepalive %6",
  "IOTBASE_COAP_INIT": "Init connect IP %1 port %2",
  "IOTBASE_MODBUS_INIT": "Init Tx %1 Rx %2 bandrate %3 mode %4 slave addr %5",
  "IOTBASE_CHECK_STATUS": "Check module status",
  "IOTBASE_POWER_DOWN_MODULE": "Power down module",
  "IOTBASE_RESET_MODULE": "Reset module",
  "IOTBASE_CHECK_SINGLE_QUALITY": "Check signal quality",
  "IOTBASE_CHECK_NETWORK_REGISTRATION": "Check network registration",
  "IOTBASE_CHECK_GPRS_NETWORK_REGISTRATION": "Check GPRS network registration",
  "IOTBASE_COAP_GET": "CoAP GET url %1 security",
  "IOTBASE_COAP_POST": "CoAP POST url %1 payload %2 content format %3 security",
  "IOTBASE_COAP_PUT": "CoAP PUT url %1 payload %2 content format %3 security",
  "IOTBASE_COAP_DESTROY": "CoAP destroy",
  "IOTBASE_MQTT_DISCONNECT": "MQTT disconnect",
  "IOTBASE_MQTT_SUB": "MQTT subscribe topic %1 QoS %2",
  "IOTBASE_MQTT_SUB_CB": "MQTT subscribe callback topic %1 msg %2",
  "IOTBASE_MQTT_UNSUBSCRIBE": "MQTT unsubscribe topic %1",
  "IOTBASE_MQTT_PUBLISH": "MQTT publish topic %1 payload %2 QoS %3",
  "IOTBASE_MQTT_CHECK_CONNECTION": "MQTT check connection",
  "IOTBASE_MQTT_POLL": "MQTT poll downlink message",
  "IOTBASE_ENABLE_PDP_CONTEXT": "Enable PDP context",
  "IOTBASE_SET_ECHO_MODE": "Set command echo mode %1",
  "POWER_SET_VIBRATION_MOTOR_OFF": "振動モーターをオフ",
  "POWER_SET_VIBRATION_MOTOR_ON": "振動モーターをオン",
  "POWER_SET_VIBRATION_MOTOR_TIME": "モータの振動を %1 秒間隔に設定",
  "IOTBASE_MODEM_POWER": "COM module power %1",
  "IOTBASE_GET_IMEI": "Get IMEI",
  "IOTBASE_GET_CCID": "Get CCID",
  "IOTBASE_UART_READ": "Read all",
  "IOTBASE_UART_READ_CHARACTERS": "Read %1 characters",
  "IOTBASE_UART_READLINE": "1行読み込む ",
  "IOTBASE_UART_WRITE": "write %1 in uart",
  "IOTBASE_UART_ANY": "Remain cache ",
  "IOTBASE_UART_WRITE_LINE": "Write a line %1 in uart",
  "IOTBASE_UART_WRITE_RAW_DATA": "Write raw data %1 in uart",
  "IOTBASE_EZDATA_GET": "Get value from topic %1 with token %2",
  "IOTBASE_EZDATA_SAVE": "Save value %1 to topic %2 with token %3 mode %4",
  "IOTBASE_EZDATA_REMOVE": "Remove topic %1 with token %2",
  "UNIT_ENCODER_SET_RGB": "エンコーダ %1 のLED %2 の色を R %3 G %4 B %5 に設定",
  "BASE_LORAWAN470_CONFIG": "Config LoRaWAN %1 frequency band mask %2 %3 RX window param %4 RX1 offset %5 RX2 datarate %6 %7 RX2 freq (Hz) %8 class mode %9 %10 uplink downlink %11",
  "BASE_LORAWAN868_CONFIG": "Config LoRaWAN %1 frequency band mask %2 RX window param %3 RX1 offset %4 RX2 datarate %5 %6 RX2 freq (Hz) %7 class mode %8 %9 uplink downlink %10",
  "BASE_LORAWAN470_JOIN_STOP": "Stop join LoRaWAN network",
  "BASE_LORAWAN470_JOIN_START": "Start join LoRaWAN network %1 %2 %3 period (seconds) %4 maximum number of attempts %5",
  "UNIT_ENCODER_SET_MODE": "エンコーダ %1 のモードを %2 に設定",
  "UNIT_ENCODER_SET_COUNT": "エンコーダ %1 のカウントを %2 に設定",
  "UNIT_ENCODER_RESET_COUNT": "エンコーダ %1 のカウントを初期化",
  "DEMO_CONFIG_LORAWAN": "Config LoRaWAN",
  "UNIT_LORAWAN470_CONFIG": "Config %1 %2 frequency band mask %3 %4 RX window param %5 RX1 offset %6 RX2 datarate %7 %8 RX2 freq (Hz) %9 class mode %10 %11 uplink downlink %12",
  "UNIT_LORAWAN868_CONFIG": "Config %1 %2 frequency band mask %3 RX window param %4 RX1 offset %5 RX2 datarate %6 %7 RX2 freq (Hz) %8 class mode %9 %10 uplink downlink %11",
  "UNIT_LORAWAN470_JOIN_STOP": "%1 Stop join LoRaWAN network",
  "UNIT_LORAWAN470_JOIN_START": "%1 Start join LoRaWAN network %2 %3 %4 period (seconds) %5 maximum number of attempts %6",
  "IOTBASE_CATM": "IoT Base CatM",
  "IOTBASECATM_COAP_POST": "CoAP POST url %1 payload %2",
  "IOTBASECATM_COAP_PUT": "CoAP PUT url %1 payload %2",
  "IOTBASECATM_COAP_DELETE": "CoAP delete",
  "IOTBASECATM_COAP_GET": "CoAP GET url %1",
  "UNIT_MIC": "マイク",
  "UNIT_MIC_GET_ANALOG": "%1 のアナログ値を取得",
  "UNIT_MIC_GET_DIGITAL": "%1 のデジタル値を取得",
  "UHF_RFID_GET_DEVICE_INFO": "Get %1 device info %2",
  "UHF_RFID_MULTI_READING_COUNT": "ID:%1 %2 multi reading count out %3",
  "UHF_RFID_CALLBACK": "ID:%1 callback read  EPC NO %2 dBm %3",
  "UHF_RFID_SET_SELECT_TAG": "Set %1 select tag param %2 EPC %3",
  "UHF_RFID_READ_MEMORY": "%1 read memory bank %2 start address %3 data length %4 password %5 mem bank %6",
  "UHF_RFID_WRITE_MEMORY": "%1 write memory bank %2 data %3 start address %4 password %5 mem bank %6",
  "UHF_RFID_AUTOMATIC_FREQ_HOPPING": "%1 automatic freq hopping %2",
  "UHF_RFID_LOCK_DATA_STORE": "%1 lock Data Store %2 %3 kill %4 %5 %6 access %7 %8 %9 epc %10 %11 %12 tid %13 %14 %15 user %16 %17 password %18",
  "UNIT_DLIGHT": "Dlight",
  "UNIT_DLIGHT_GET_LUX": "%1 read lux value",
  "UNIT_DLIGHT_SET_STATE_MODE": "%1 control state %2",
  "UNIT_DLIGHT_SET_CONTINOUS_MODE": "%1 continous mode %2",
  "UNIT_DLIGHT_SET_ONE_SHOT_MODE": "%1 one shot mode %2",
  "UNIT_PDM": "PDM",
  "UNIT_PDM_INIT": "Init %1 %2 sample %3 %4 channel %5 %6 sample rate %7 dma count %8 dma length %9",
  "UNIT_PDM_RECORD_TO_FILE": "%1 record wave file %2 seconds %3 file %4 format %5",
  "UNIT_PDM_DEINIT": "%1 deinit",
  "UNIT_SSR": "SSR",
  "UNIT_RELAY2": "Relay2",
  "UNIT_RELAY2_CONTROL": "%1 control %2 relay %3 %4 control %5",
  "UNIT_SSR_CONTROL": "%1 control %2",
  "CAT1": "CAT1",
  "COM_CAT1_INIT": "Init cat1 TX %1 RX %2",
  "HTTP_METHODS": "HTTP(S) request methods",
  "DTU_CAT1": "CAT1",
  "DTU_CAT1_INIT": "Init CAT1 DTU",
  "DTU_CAT1_MODBUS_INIT": "Init bandrate %1 mode %2 slave addr %3",
  "UNIT_POESP32": "PoEsp32",
  "COM_CAT1_MQTT_CHECK_CONNECT": "Check mqtt connect",
  "MYCOBOTPRO_IS_IN_POSITION": "Get is in position data %1 id %2",
  "MYCOBOT_GET_ENCODER_VALUE": "Get encoder value %1 id %2",
  "MYCOBOT_SET_ENCODER_VALUE": "Set encoder value %1 id %2 value %3",
  "MYCOBOT_SYNC_SEND_ANGLES": "Sync send angles 1 %1 2 %2 3 %3 4 %4 5 %5 6 %6 speed %7",
  "MYCOBOT_SYNC_SEND_COORDS": "Sync send coords 1 %1 2 %2 3 %3 4 %4 5 %5 6 %6 speed %7 mode %8",
  "MYCOBOT_RELEASE_ALL_SERVOS": "Release all servos",
  "MYCOBOT_CHECK_ATOM_CONNECT": "Check atom connect",
  "MYCOBOT_SET_ENCODERS": "Set encoders 1 %1 2 %2 3 %3 4 %4 5 %5 6 %6 speed %7",
  "MYCOBOT_GET_ENCODERS": "Get encoders",
  "MYCOBOT_SET_SERVO_DATA": "Set servo data servo %1 data %2 value %3",
  "MYCOBOT_GET_SERVO_DATA": "Get servo data %1 servo %2 data id %3",
  "MYCOBOT_SET_SERVO_CALIBRATION": "Set servo calibration %1 servo %2",
  "MYCOBOT_GET_TOF_DISTANCE": "距離[mm]をToFで読み込む",
  "MYCOBOT_SET_BASIC_OUTPUT": "Set basic output %1 pin %2 value %3",
  "MYCOBOT_GET_BASIC_INPUT": "Get basic input %1 pin %2",
  "MYCOBOTPRO_SET_PWM_OUTPUT": "Set pwm output channel %1 pin val %2",
  "UNIT_KMETER": "KMeter",
  "KMETER_GET_TEMPERATURE": "%1 Get %2 temperature %3",
  "UNIT_SONIC_IO": "SONIC IO",
  "SONIC_IO_GET_DISTANCE": "%1 から距離を単位 %2 で読み込む",
  "LORA433_RECEIVE_ENABLE": "Receive IRQ enable %1",
  "UNIT_ANGLE8": "8ANGLE",
  "LAN_BASE": "LAN Base",
  "LAN_BASE_INIT": "Init LAN %1 remote IP %2 port %3 socket type %4 %5 machine type %6",
  "LAN_BASE_TCP_SEND_PACKET": "TCP send packet %1",
  "LAN_BASE_TCP_RECEIVE_PACKET": "TCP receive packet size %1",
  "LAN_BASE_UDP_SEND_PACKET": "UDP send packet IP %1 port %2 payload %3",
  "LAN_BASE_UDP_RECEIVE_PACKET": "UDP receive packet size %1",
  "LAN_BASE_AVAILABLE_PACKET": "Available packet %1",
  "LAN_BASE_LOCAL_IP": "Local IP address",
  "LAN_BASE_REMOTE_IP": "Remote IP address",
  "LAN_BASE_GET_IF_CONFIG": "Get if config",
  "LAN_BASE_SOCKET_CLOSE": "Socket closed",
  "LAN_BASE_HTTP_GET": "HTTP(S) GET url %1 %2",
  "UNIT_POESP32_CHECK_UART": "%1 check device",
  "UNIT_POESP32_CHECK_ETH": "%1 check Ethernet connection",
  "UNIT_POESP32_CREATE_TCP": "%1 create TCP client IP %2 port %3",
  "UNIT_POESP32_SEND_TCP_PACKET": "%1 sent TCP packet %2",
  "UNIT_POESP32_RECEIVE_TCP_PACKET": "ID:%1 %2 receive TCP packet",
  "UNIT_POESP32_RECEIVE_TCP_PACKET_CB": "ID:%1 receive TCP callback %2",
  "UNIT_POESP32_MQTT_INIT": "Init %1 MQTT %2 server %3 port %4 client id %5 username %6 password %7",
  "UNIT_POESP32_MQTT_PUBLISH": "%1 MQTT publish topic %2 payload %3 Qos %4",
  "UNIT_POESP32_MQTT_SUBSCRIBE": "%1 MQTT subscribe topic %2 Qos %3",
  "UNIT_POESP32_MQTT_UNSUBSCRIBE": "%1 unsubscribe MQTT topic %2",
  "UNIT_POESP32_MQTT_RECEIVE": "ID:%1 %2 receive MQTT payload",
  "UNIT_POESP32_MQTT_RECEIVE_CB": "ID:%1 receive MQTT callback %2",
  "UNIT_POESP32_HTTP_CLIENT": "%1 HTTP(s) url %2 method %3 type %4 payload %5",
  "UNIT_CATM": "CatM",
  "UNIT_CATM_MODEM_POWER": "%1 COM module power %2",
  "UNIT_CATM_GET_IMEI": "%1 get IMEI",
  "UNIT_CATM_GET_CCID": "%1 get CCID",
  "UNIT_CATM_POWER_DOWN_MODULE": "%1 power down module",
  "UNIT_CATM_RESET_MODULE": "%1 reset module",
  "UNIT_CATM_SET_ECHO_MODE": "%1 set command echo mode %2",
  "UNIT_CATM_CHECK_STATUS": "%1 check module status",
  "UNIT_CATM_CHECK_SINGLE_QUALITY": "%1 check signal quality",
  "UNIT_CATM_CHECK_NETWORK_REGISTRATION": "%1 check network registration",
  "UNIT_CATM_CHECK_GPRS_NETWORK_REGISTRATION": "%1 check GPRS network registration",
  "UNIT_CATM_ENABLE_PDP_CONTEXT": "%1 enable PDP context",
  "UNIT_CATM_COAP_INIT": "%1 Init connect IP %2 port %3",
  "UNIT_CATM_COAP_GET": "%1 CoAP GET url %2",
  "UNIT_CATM_COAP_POST": "%1 CoAP POST url %2 payload %3",
  "UNIT_CATM_COAP_PUT": "%1 CoAP PUT url %2 payload %3",
  "UNIT_CATM_COAP_DELETE": "%1 CoAP delete",
  "UNIT_CATM_MQTT_CONNECT": "%1 Init connect server %2 port %3 client id %4 username %5 password %6 keepalive %7",
  "UNIT_CATM_MQTT_DISCONNECT": "%1 MQTT disconnect",
  "UNIT_CATM_MQTT_SUB": "%1 MQTT subscribe topic %2 QoS %3",
  "UNIT_CATM_MQTT_SUB_CB": "%1 MQTT subscribe callback topic %2 msg %3",
  "UNIT_CATM_MQTT_UNSUBSCRIBE": "%1 MQTT unsubscribe topic %2",
  "UNIT_CATM_MQTT_PUBLISH": "%1 MQTT publish topic %2 payload %3 QoS %4",
  "UNIT_CATM_MQTT_CHECK_CONNECTION": "%1 MQTT check connection",
  "UNIT_CATM_MQTT_POLL": "%1 MQTT poll downlink message",
  "UNIT_CATM_EZDATA_ASYNC_GET_VALUE": "ID:%1 %2 Get value from topic %3 with token %4",
  "UNIT_CATM_EZDATA_SAVE": "%1 save value %2 to topic %3 with token %4 mode %5",
  "UNIT_CATM_EZDATA_REMOVE": "%1 remove topic %2 with token %3",
  "UNIT_CATM_NETWORK_ACTIVE": "%1 network active id %2 action %3",
  "UNIT_CATM_NETWORK_IP_ID": "%1 network IP id %2",
  "UNIT_CATM_HTTP_SERVICES": "%1 HTTP services %2 method %3 %4 url %5 path %6 headers %7 payload %8",
  "UNIT_TUBE": "Tube Pressure",
  "UNIT_TUBE_GET_PRESSURE": "%1 get pressure",
  "UNIT_TUBE_GET_ADC_RAW": "%1 get ADC raw value",
  "UNIT_CATM_DISCONNECT_SERVER": "%1 disconnect HTTP services",
  "IOTBASECATM_NETWORK_ACTIVE": "Network active id %1 action %2",
  "IOTBASECATM_NETWORK_IP_ID": "Network IP id %1",
  "IOTBASECATM_HTTP_SERVICES": "HTTP services %1 method %2 %3 url %4 path %5 headers %6 payload %7",
  "IOTBASECATM_DISCONNECT_SERVER": "Disconnect HTTP services",
  "DTU_CAT1_MQTT_CHECK_CONNECT": "Check mqtt connect",
  "SERVO2_DEGREE": "Set channel %1 servo degree %2°",
  "SERVO2_PULSE": "Set channel %1 servo pulse %2uS",
  "SERVO2_DUTY": "Set channel %1 servo duty cycle %2%",
  "BASE_DTUNB_MODBUS_INIT": "Init Tx %1 Rx %2 bandrate %3 mode %4 slave addr %5",
  "DDS_SET_OUTPUT_FREQ_PHASE": "Set %1 output freq CH %2 phase CH %3",
  "DDS_SET_CONTROL_SLEEP": "Set %1 control %2",
  "GSM": "GSM",
  "COM_GSM_PING_REQUEST": "Ping request url %1",
  "COM_GSM_TCP_CLIENT": "TCP client %1 method %2 %3 IP %4 port %5 payload %6",
  "COM_GSM_CHECK_GPRS_SERVICE": "Check GPRS service",
  "COM_GSM_HTTP_SERVICE": "HTTP service %1 method %2 %3 url %4 content type %5 %6 payload %7",
  "COM_GSM_HTTP_DESTROY": "HTTP destroy",
  "UNIT_BUZZER": "BUZZER",
  "UNIT_BUZZER_SET_STATE": "%1 state %2",
  "UNIT_BUZZER_SET_FREQ": "%1 set frequency %2",
  "COM_GSM_SET_PDP_CONTEXT": "PDP context %1",
  "COM_GSM_SET_PDP_ADDRESS": "PDP address cid %1",
  "RGB_UNIT_SET_COLOR_RGB": "%1 %2 番目のLEDの色を赤 %3 緑 %4 青 %5 に設定",
  "PNP": "IoT Plug and Play",
  "AZURE_PNP_INIT_CENTRAL": "Connect IoT Central %1 scope id %2 device id %3 device key %4 model id %5",
  "TOIO_READ_SENSOR": "toioのセンサーを読み込む",
  "TOIO_READ_BATTERY": "toioのバッテリーレベル(%)を読み込む",
  "TOIO_READ_BUTTON": "toioのボタンの状態を読み込む",
  "TOIO_WRITE_MOTOR_SPEED": "toioのモータのスピードを左タイヤを速さ %1 右タイヤを速さ %2 にする",
  "TOIO_WRITE_MOTOR_TIMER": "toioのモータのスピードを左タイヤを速さ %1 右タイヤを速さ %2 で時間 %3 [x10ミリ秒]で動かす",
  "TOIO_WRITE_MOTOR_STOP": "toioのモーターを止める",
  "TOIO_WRITE_LIGHT_RGB": "toioのライトの色を、時間 %4 [x10ミリ秒] RGB(赤 %1 緑 %2 青 %3 )色に設定する",
  "TOIO_WRITE_LIGHT_HSV": "toioのライトの色を、時間 %4 [x10ミリ秒] HSV(hue %1 saturation %2 value %3)色にする",
  "TOIO_WRITE_LIGHT_SEQUENCE": "toioのライトの色を変える %1 回数 %2 初期値 %3 赤 %4 緑 %5 青 %6 時間[x10ミリ秒] %7 終了値 %8 赤 %9 緑 %10 青 %11 時間[x10ミリ秒] %12",
  "TOIO_WRITE_LIGHT_OFF": "toioのライトを消す",
  "TOIO_WRITE_SOUND_ID": "toioを音ID %1 を音量 %2 で鳴らす",
  "TOIO_WRITE_SOUND_STOP": "toioの音を止める",
  "TOIO_IS_CONNECTED": "toioが接続されている",
  "TOIO_SCAN": "一番近いtoioを探して接続する",
  "TOIO_DISCONNECT": "toioとの接続を切る",
  "TOIO_ON_NOTIFY_CB": "toioがBLE notify %1 を受け取ったとき %2",
  "TOIO_ON_READ_RECV_CB": "toioがBLE経由で %1 を受け取ったとき %2",
  "TOIO_INIT": "toioの初期化",
  "USB_MODULE": "USB",
  "USB_INIT": "HID init mouse",
  "USB_HID_POLL": "Mouse update task",
  "USB_BUTTON_STATE": "Get mouse button status",
  "USB_MOUSE_CUTSOR": "Get mouse cursor position %1",
  "USB_BUTTON_CLICK": "%1 button click",
  "USB_READ_INPUT_PIN": "Read input pin %1",
  "USB_READ_OUTPUT_PIN": "Read output pin %1",
  "USB_READ_OUTPUT_PIN_VALUE": "Write output pin %1 value %2",
  "UNIT_EXT_IO2": "EXT.IO2",
  "EXTIO2_GET_CONFIG_MODE": "%1 Get config mode pin %2",
  "EXTIO2_SET_CONFIG_MODE": "%1 Set config mode pin %2 mode %3",
  "EXTIO2_READ_DIGITAL_INPUT_PIN": "%1 Get digital input pin %2",
  "EXTIO2_WRITE_DIGITAL_OUTPUT_PIN": "%1 Set digital output pin %2 level %3",
  "EXTIO2_WRITE_DIGITAL_OUTPUT_PIN2": "%1 Set digital output pin %2 level %3",
  "EXTIO2_WRITE_SERVO_ANGLE": "%1 Set servo pin %2 angle %3",
  "WLAN_SET_CONFIG": "アクセスポイントをSSID %1 PASSWORD %2 に設定する",
  "EXTIO2_READ_ADC8_PIN": "%1 Get ADC 8bit pin %2",
  "EXTIO2_READ_ADC12_PIN": "%1 Get ADC 12bit pin %2",
  "EXTIO2_READ_SERVO_ANGLE_PIN": "%1 Get servo angle pin %2",
  "EXTIO2_WRITE_SERVO_PULSE": "%1 Set servo pin %2 pulse %3",
  "EXTIO2_READ_SERVO_PULSE_PIN": "%1 Get servo pulse pin %2",
  "EXTIO2_WRITE_RGB_LED_PIN": "%1 Set RGB LED pin %2 R %3 G %4 B %5",
  "EXTIO2_READ_RGB_LED_PIN": "%1 Get RGB LED pin %2",
  "EXTIO2_READ_STATUS": "%1 Get status %2",
  "EXTIO2_SET_I2C_ADDRESS": "%1 Set I2C Address %2",
  "EXTIO2_INIT_I2C_ADDRESS": "%1 Init I2C Address %2",
  "HAT_8SERVO": "8Servos",
  "HAT_8SERVO_WRITE_SERVO_ANGLE": "%1 write servo angle %2 CH %3",
  "HAT_8SERVO_WRITE_SERVO_PULSE": "%1 write servo pulse %2 CH %3",
  "HAT_8SERVO_SET_POWER_CONTROL": "%1 set power control %2",
  "HAT_8SERVO_READ_SERVO_ANGLE": "%1 read servo angle CH %2",
  "HAT_8SERVO_READ_SERVO_PULSE": "%1 read servo pulse CH %2",
  "HAT_8SERVO_GET_POWER_CONTROL": "%1 get power control",
  "ROBOCAR": "MC4.0",
  "ROBOCAR_SET_PID_PARAMETER": "Set PID parameter P %1 I %2 D %3",
  "ROBOCAR_SET_ENCODER_PARAMETER_COUNT": "Set encoder parameter count %1",
  "ROBOCAR_SET_ENCODER_PARAMETER": "Set encoder parameter %1 Pulse per cycle %2 Cycle per angle ratio %3",
  "ROBOCAR_SET_MOTOR_CONTROL": "Set motor control motor %1 (1 ~ 4) dir %2 (0 ~ 1) speed %3 (0 ~ 100)",
  "ROBOCAR_SET_MOTOR_ANGLE_DIR": "Set robo turn angle %1 dir %2",
  "ROBOCAR_SET_MOTOR_ANGLE": "Set motor angle motor %1 angle %2 dir %3",
  "ROBOCAR_MOTOR_STOP": "Motor stop motor %1 (1 ~ 4)",
  "ROBOCAR_RUN_FORWARD": "Run forward speed %1 (0 ~ 100)",
  "ROBOCAR_RUN_BACKWARD": "Run backward speed %1 (0 ~ 100)",
  "ROBOCAR_RUN_RIGHTSIDE": "Run rightside speed %1 (0 ~ 100)",
  "ROBOCAR_RUN_LEFTSIDE": "Run leftside speed %1 (0 ~ 100)",
  "ROBOCAR_ROTATE_RIGHTSIDE": "Rotate rightside speed %1 (0 ~ 100)",
  "ROBOCAR_ROTATE_LEFTSIDE": "Rotate leftside speed %1 (0 ~ 100)",
  "ROBOCAR_UPDATE_TASK": "Update task",
  "ROBOCAR_READ_ENCODER_COUNT": "Get encoder pulse motor %1 (return int)",
  "HAT_BALAC": "BalaC/C Plus",
  "HAT_BALAC_SET_MOTOR_SPEED": "Set %1 speed %2",
  "HAT_BALAC_STOP_MOTOR": "Stop %1",
  "IR": "IR",
  "timer": "Timer",
  "LORAWAN_NETWORK": "Network",
  "PBHUB_DIGITAL_READ": "%1 %2 CH %3 IO %4 をデジタル読み込み",
  "PBHUB_DIGITAL_WRITE": "%1 %2 CH %3 IO %4 に値 %5 をデジタル書き込み",
  "PBHUB_ANALOGREAD": "%1 %2 CH %3 をアナログ読み込み",
  "PBHUB_SETRGBNUM": "%1 %2 CH %3 のRGB LEDの総数を %4 に設定",
  "PBHUB_SETCOLORPOS": "%1 %2 CH %3 のRGB LED の %4 番目を色 %5 に設定",
  "PBHUB_SETCOLOR": "%1 %2 CH %3 のRGB LED の %4 番目から %5 個を色 %6 に設定",
  "PBHUB_SETBRIGHTNESS": "%1 %2 CH %3 のRGB LED の輝度を %4 に設定",
  "MQTT_PRINTER_PRINT_TEXT": "Print text x %1 size %2 text %3",
  "MQTT_PRINTER_BAR_PRINT": "Print barcode message %1",
  "MQTT_PRINTER_QR_PRINT": "Print QRcode message %1",
  "LAN_BASE_MQTT_INIT": "Init MQTT server %1 port %2 client id %3 username %4 password %5 keepalive %6",
  "LAN_BASE_MQTT_DISCONNECT": "MQTT disconnect server",
  "LAN_BASE_MQTT_CONNECT": "MQTT connect server",
  "LAN_BASE_MQTT_CHECK_CONNECTION": "MQTT check connect server",
  "PBHUB_SET_SERVO_ANGLE": "%1 CH %2 IO %3 のサーボの角度を %4 に設定",
  "PBHUB_SET_SERVO_PULSE": "%1 CH %2 IO %3 のサーボのパルス幅を %4 に設定",
  "PBHUB_SET_I2C_ADDRESS": "%1 I2C アドレスを %2 に設定",
  "PBHUB_INIT_I2C_ADDRESS": "%1 I2C アドレス %2 を初期化",
  "PBHUB_READ_STATUS": "%1 %2 を読み込み",
  "UNIT_GPS_GET_LATITUDE": "get %1 latitude (string: ddmm.mmmmm<W/E>)",
  "UNIT_GPS_GET_LONGITUDE": "get %1 longitude (string: dddmm.mmmmm<S/N>)",
  "UNIT_GPS_GET_LATITUDE_DECIMAL": "get %1 latitude decimal (float: dd.dddd)",
  "UNIT_GPS_GET_LONGITUDE_DECIMAL": "get %1 longitude decimal (float: dd.dddd)",
  "ROBOCAR_UPDATE_SENSOR": "Get two-channel line follower sensor %1 (return int)",
  "UNIT_LIMIT": "Limit",
  "UNIT_GPS_GET_ALTITUDE": "get %1 altitude (meter)",
  "UNIT_LIMIT_GET_SWITCH_STATUS": "%1 のスイッチの状態",
  "UNIT_KEY": "Key",
  "UNIT_KEY_GET_SWITCH_STATUS": "%1 のスイッチの状態",
  "UNIT_KEY_SET_COLOR": "%1 のRGB LEDの色を %2 輝度を %3 に設定",
  "BASE_POE": "Base PoE",
  "BASE_POE_INIT": "Init PoE %1 remote IP %2 port %3 socket type %4 %5 machine type %6",
  "ROBOCAR_ANGLE_TASK": "Robo angle task",
  "ROBOCAR_CHECK_ANGLE_TASK": "Check angle task (return True or False)",
  "ROBOCAR_CLEAR_ENCODER_COUNT": "Clear encoder pulse motor %1 (1 ~ 4)",
  "UNIT_KEY_SET_RGB_COLOR": "%1 のRGB LEDの色を 赤 %2 緑 %3 青 %4 輝度 %5 に設定",
  "BASE_GPS_OPEN_SDCARD_FILE": "ファイル %1 を パス %2 モード %3 で開く",
  "BASE_GPS_SDCARD_FILE_READ_ALL": "ファイルを全て読み込み %1",
  "BASE_GPS_SDCARD_FILE_READ_BYTES": "ファイル %2 から %1 バイト読み込み",
  "BASE_GPS_SDCARD_FILE_READ_LINE": "ファイルから1行読み込み %1",
  "BASE_GPS_SDCARD_FILE_WRITE": "ファイル %1 に テキスト %2 を書き込む",
  "BASE_GPS_SDCARD_FILE_SET_SEEK": "ファイルのシーク位置を %1 にする",
  "BASE_GPS_SDCARD_FILE_GET_SEEK": "ファイルのシーク位置を取得する %1",
  "BASE_GPS_SDCARD_LISTDIR": "ディレクトリ %1 のパス %2 の一覧を表示する",
  "BASE_GPS_SDCARD_MKDIR": "パス %2 にフォルダ %1 を作成する",
  "BASE_GPS_SDCARD_REMOVE": "パス %2 のファイル %1 を削除する",
  "BASE_GPS_SDCARD_RMDIR": "パス %2 のフォルダ %1 を削除する",
  "BASE_GPS_SDCARD_RENAME": "古いパス %2 のファイル %1 を新しいパス %3 に名前変更する",
  "BASE_GPS_SDCARD_ISFILE": "パス %2 のファイル %1 は存在する?",
  "BASE_GPS_SDCARD_ISDIRECTORY": "パス %2 のフォルダー %1 が存在する?",
  "BASE_GPS_INIT_SDCARD": "SDCardを I/O %1 MISO %2 MOSI %3 SCK %4 周波数 %5 で設定する",
  "TOIO_READ_ID": " toioの位置IDと標準IDを読み込む",
  "TOIO_READ_MOTION_DETECTION": "toioの動いている方向を読み込む",
  "TOIO_READ_POSTURE_EULER_ANGLE": "toioの姿勢角を読み込む",
  "TOIO_READ_POSTURE_QUATERNIONS": "toioの姿勢のクォータニオンを読み込む",
  "TOIO_READ_MAGNETIC": "toioの磁気センサー値を読み込む",
  "TOIO_READ_VERSION": "toioのファームウエアバージョンを読み込む",
  "TOIO_WRITE_MOTOR_MOVE_TO_TARGET": "Write toio's motor move to target %1 control distinction value %2 timeout period %3 movement type %4 motor speed %5 motor speed change types %6 x coordinate %7 y coordinate %8 angle type %9 angle %10",
  "UNIT_CATMGNSS": "CatM + GNSS",
  "UNIT_CATMGNSS_MODEM_POWER": "%1 COM module power %2",
  "UNIT_CATMGNSS_GET_IMEI": "%1 get IMEI",
  "UNIT_CATMGNSS_GET_CCID": "%1 get CCID",
  "UNIT_CATMGNSS_POWER_DOWN_MODULE": "%1 power down module",
  "UNIT_CATMGNSS_RESET_MODULE": "%1 reset module",
  "UNIT_CATMGNSS_SET_ECHO_MODE": "%1 set command echo mode %2",
  "UNIT_CATMGNSS_CHECK_STATUS": "%1 check module status",
  "UNIT_CATMGNSS_CHECK_SINGLE_QUALITY": "%1 check signal quality",
  "UNIT_CATMGNSS_CHECK_NETWORK_REGISTRATION": "%1 check network registration",
  "UNIT_CATMGNSS_CHECK_GPRS_NETWORK_REGISTRATION": "%1 check GPRS network registration",
  "UNIT_CATMGNSS_ENABLE_PDP_CONTEXT": "%1 enable PDP context",
  "UNIT_CATMGNSS_COAP_INIT": "%1 Init connect IP %2 port %3",
  "UNIT_CATMGNSS_COAP_GET": "%1 CoAP GET url %2",
  "UNIT_CATMGNSS_COAP_POST": "%1 CoAP POST url %2 payload %3",
  "UNIT_CATMGNSS_COAP_PUT": "%1 CoAP PUT url %2 payload %3",
  "UNIT_CATMGNSS_COAP_DELETE": "%1 CoAP delete",
  "UNIT_CATMGNSS_MQTT_CONNECT": "%1 Init connect server %2 port %3 client id %4 username %5 password %6 keepalive %7",
  "UNIT_CATMGNSS_MQTT_DISCONNECT": "%1 MQTT disconnect",
  "UNIT_CATMGNSS_MQTT_SUB": "%1 MQTT subscribe topic %2 QoS %3",
  "UNIT_CATMGNSS_MQTT_SUB_CB": "%1 MQTT subscribe callback topic %2 msg %3",
  "UNIT_CATMGNSS_MQTT_UNSUBSCRIBE": "%1 MQTT unsubscribe topic %2",
  "UNIT_CATMGNSS_MQTT_PUBLISH": "%1 MQTT publish topic %2 payload %3 QoS %4",
  "UNIT_CATMGNSS_MQTT_CHECK_CONNECTION": "%1 MQTT check connection",
  "UNIT_CATMGNSS_MQTT_POLL": "%1 MQTT poll downlink message",
  "UNIT_CATMGNSS_EZDATA_ASYNC_GET_VALUE": "ID:%1 %2 Get value from topic %3 with token %4",
  "UNIT_CATMGNSS_EZDATA_SAVE": "%1 save value %2 to topic %3 with token %4 mode %5",
  "UNIT_CATMGNSS_EZDATA_REMOVE": "%1 remove topic %2 with token %3",
  "UNIT_CATMGNSS_NETWORK_ACTIVE": "%1 network active id %2 action %3",
  "UNIT_CATMGNSS_NETWORK_IP_ID": "%1 network IP id %2",
  "UNIT_CATMGNSS_HTTP_SERVICES": "%1 HTTP services %2 method %3 %4 url %5 path %6 headers %7 payload %8",
  "UNIT_CATMGNSS_DISCONNECT_SERVER": "%1 disconnect HTTP services",
  "UNIT_CATMGNSS_POWER_CONTROL": "%1 GNSS power control %2",
  "UNIT_CATMGNSS_WORK_MODE": "%1 GNSS work mode %2",
  "UNIT_CATMGNSS_NMEA_POLL_TASK": "%1 GNSS NMEA poll task",
  "UNIT_CATMGNSS_SET_TIME_ZONE": "%1 Set time zone %2",
  "UNIT_CATMGNSS_GET_POSITION": "%1 GNSS position %2 format %3",
  "UNIT_CATMGNSS_GET_TIME": "%1 Get GNSS time",
  "UNIT_CATMGNSS_GET_DATE": "%1 Get GNSS date",
  "UNIT_CATMGNSS_GET_ALTITUDE": "%1 Get GNSS altitude",
  "UNIT_CATMGNSS_GET_SATELLITE": "%1 Get GNSS satellite view",
  "UNIT_CATMGNSS_GET_FIX_STATUS": "%1 Get GNSS fix status",
  "UNIT_CATMGNSS_GET_SPEED": "%1 Get GNSS speed",
  "UNIT_CATMGNSS_GET_COURSE": "%1 Get GNSS course",
  "UNIT_CATMGNSS_CHECK_POWER": "%1 Check GNSS power",
  "BASE_TFCARD": "TF-CARD",
  "BASE_TFCARD_OPEN_TFCARD_FILE": "open file %1 path %2 mode %3",
  "BASE_TFCARD_FILE_READ_ALL": "ファイルを全て読み込み %1",
  "BASE_TFCARD_FILE_READ_BYTES": "ファイル %2 から %1 バイト読み込み",
  "BASE_TFCARD_FILE_READ_LINE": "ファイルから1行読み込み %1",
  "BASE_TFCARD_FILE_WRITE": "ファイル %1 に テキスト %2 を書き込む",
  "BASE_TFCARD_FILE_SET_SEEK": "ファイルのシーク位置を %1 にする",
  "BASE_TFCARD_FILE_GET_SEEK": "ファイルのシーク位置を取得する %1",
  "BASE_TFCARD_LISTDIR": "ディレクトリ %1 のパス %2 の一覧を表示する",
  "BASE_TFCARD_MKDIR": "パス %2 にフォルダ %1 を作成する",
  "BASE_TFCARD_REMOVE": "パス %2 のファイル %1 を削除する",
  "BASE_TFCARD_RMDIR": "パス %2 のフォルダ %1 を削除する",
  "BASE_TFCARD_RENAME": "古いパス %2 のファイル %1 を新しいパス %3 に名前変更する",
  "BASE_TFCARD_ISFILE": "パス %2 のファイル %1 は存在するか?",
  "BASE_TFCARD_ISDIRECTORY": "パス %2 のフォルダー %1 は存在するか?",
  "BASE_TFCARD_INIT_SDCARD": "SDCardを I/O %1 MISO %2 MOSI %3 SCK %4 周波数 %5 で設定する",
  "HAT_CBACKNBIOT": "CBack NB-IoT",
  "HAT_CBACKNBIOT_MQTT_CONNECT": "Init connect server %1 port %2 client id %3 username %4 password %5 keepalive %6",
  "HAT_CBACKNBIOT_COAP_INIT": "Init connect IP %1 port %2",
  "HAT_CBACKNBIOT_MODBUS_INIT": "Init Tx %1 Rx %2 bandrate %3 mode %4 slave addr %5",
  "HAT_CBACKNBIOT_CHECK_STATUS": "Check module status",
  "HAT_CBACKNBIOT_POWER_DOWN_MODULE": "Power down module",
  "HAT_CBACKNBIOT_RESET_MODULE": "Reset module",
  "HAT_CBACKNBIOT_CHECK_SINGLE_QUALITY": "Check signal quality",
  "HAT_CBACKNBIOT_CHECK_NETWORK_REGISTRATION": "Check network registration",
  "HAT_CBACKNBIOT_CHECK_GPRS_NETWORK_REGISTRATION": "Check GPRS network registration",
  "HAT_CBACKNBIOT_COAP_GET": "CoAP GET url %1 security",
  "HAT_CBACKNBIOT_COAP_POST": "CoAP POST url %1 payload %2 content format %3 security",
  "HAT_CBACKNBIOT_COAP_PUT": "CoAP PUT url %1 payload %2 content format %3 security",
  "HAT_CBACKNBIOT_COAP_DESTROY": "CoAP destroy",
  "HAT_CBACKNBIOT_MQTT_DISCONNECT": "MQTT disconnect",
  "HAT_CBACKNBIOT_MQTT_SUB": "MQTT subscribe topic %1 QoS %2",
  "HAT_CBACKNBIOT_MQTT_SUB_CB": "MQTT subscribe callback topic %1 msg %2",
  "HAT_CBACKNBIOT_MQTT_UNSUBSCRIBE": "MQTT unsubscribe topic %1",
  "HAT_CBACKNBIOT_MQTT_PUBLISH": "MQTT publish topic %1 payload %2 QoS %3",
  "HAT_CBACKNBIOT_MQTT_CHECK_CONNECTION": "MQTT check connection",
  "HAT_CBACKNBIOT_MQTT_POLL": "MQTT poll downlink message",
  "HAT_CBACKNBIOT_SET_ECHO_MODE": "Set command echo mode %1",
  "HAT_CBACKNBIOT_MODEM_POWER": "COM module power %1",
  "HAT_CBACKNBIOT_GET_IMEI": "Get IMEI",
  "HAT_CBACKNBIOT_GET_CCID": "Get CCID",
  "HAT_CBACKNBIOT_UART_READ": "Read all",
  "HAT_CBACKNBIOT_UART_READ_CHARACTERS": "Read %1 characters",
  "HAT_CBACKNBIOT_UART_READLINE": "1行読み込む",
  "HAT_CBACKNBIOT_UART_WRITE": "Write %1 in UART",
  "HAT_CBACKNBIOT_UART_ANY": "Remain cache ",
  "HAT_CBACKNBIOT_UART_WRITE_LINE": "Write a line %1 in UART",
  "HAT_CBACKNBIOT_UART_WRITE_RAW_DATA": "Write raw data %1 in UART",
  "HAT_CBACKNBIOT_EZDATA_GET": "Get value from topic %1 with token %2",
  "HAT_CBACKNBIOT_EZDATA_SAVE": "Save value %1 to topic %2 with token %3 mode %4",
  "HAT_CBACKNBIOT_EZDATA_REMOVE": "Remove topic %1 with token %2",
  "UNIT_DIGICLOCK": "Digi Clock",
  "UNIT_DIGICLOCK_INIT_I2C_ADDRESS": "%1 I2Cアドレスを %2 に設定",
  "UNIT_DIGICLOCK_CLEAR": "%1 画面消去",
  "UNIT_DIGICLOCK_WRITE_BRIGHTNESS": "%1 輝度を %2 に設定",
  "UNIT_DIGICLOCK_WRITE_RAW": "%1 %3 番目に 生データ %2 を表示",
  "UNIT_DIGICLOCK_WRITE_CHAR": "%1 %3 番目に文字 %2 を表示",
  "UNIT_DIGICLOCK_WRITE_CHAR_LIST": "%1 文字リスト %2 を表示",
  "UNIT_DIGICLOCK_MATCH_STRING": "%1 一致した文字列 %2 を表示",
  "UNIT_DIGICLOCK_READ_VERSION": "%1 バージョンを読み込み",
  "ESPNOW_INIT_CHANNEL": "EspNow チャンネル %1 で初期化",
  "M5ESPNOW_SET_CHANNEL": "EspNow %1 チャンネルを %2 に設定",
  "M5ESPNOW_ADD_PEER": "EspNow %1 ピア(接続相手) %2 ID %3 (1 ~ 10) ifidx %4 で追加",
  "M5ESPNOW_SET_AP_MODE": "EspNow APモード %1 SSID %2 パスワード %3 チャンネル %4 で追加",
  "M5ESPNOW_SEND_STRING": "EspNow %1 文字列 %2 ID %3 で送る",
  "M5ESPNOW_SET_PMK": "EspNow %1 プライマリーマスターキーを %2 に設定",
  "M5ESPNOW_GET_MAC_ADDRESS": "EspNow %1 モード %2 でMACアドレスを取得",
  "M5ESPNOW_GET_REMOTE_MAC": "EspNow リモートのMACアドレス %1 をリモードSSID %2 で取得",
  "M5ESPNOW_RECV_CB": "EspNow 受信コールバックを %1 MACアドレス %2 データ %3 で定義",
  "M5ESPNOW_SEND_CB": "EspNow 送信コールバックを %1 フラグ %2 で定義",
  "MODULE_BALA2": "Bala2",
  "MODULE_BALA2_RUN": "Bala2 %1 run %2 speed %3",
  "MODULE_BALA2_TURN": "Bala2 %1 turn %2 speed %3",
  "MODULE_BALA2_ROTATE": "Bala2 %1 rotate %2 speed %3",
  "MODULE_BALA2_STOP": "Bala2 stop",
  "MODULE_BALA2_SERVO_ANGLE": "Bala2 %1 servo %2 angle %3",
  "MODULE_BALA2_SERVO_PULSE": "Bala2 %1 servo %2 pulse %3",
  "MODULE_BALA2_SET_MOTOR_SPEED": "Bala2 %1 motor %2 dir %3 speed %4",
  "MODULE_BALA2_CLEAR": "Bala2 clear %1 encoder %2 count",
  "MODULE_BALA2_READ": "Bala2 read %1 encoder %2 count",
  "MODULE_BALA2_ACCELEROMETER": "Accelerometer %1",
  "MODULE_BALA2_GYRO": "Gyroscope %1",
  "MODULE_BALA2_YPR": "Read %1",
  "HAT_DLIGHT": "Dlight",
  "HAT_DLIGHT_GET_LUX": "%1 LUX値",
  "HAT_DLIGHT_SET_STATE_MODE": "%1 %2 状態を %3 に設定",
  "HAT_DLIGHT_SET_CONTINOUS_MODE": "%1 %2 連続モード %3",
  "HAT_DLIGHT_SET_ONE_SHOT_MODE": "%1 %2 ワンショットモード %3",
  "UNIT_ANGLE8_READ_ADC_12RAW": "%1 チャンネル %3 のA/D変換の12bit値 %2",
  "UNIT_ANGLE8_READ_ADC_8RAW": "%1 チャンネル %3 のA/D変換の8bit値 %2",
  "UNIT_ANGLE8_READ_BUTTON_STATUS": "%1 のスイッチの値",
  "UNIT_ANGLE8_READ_STATUS": "%1 デバイス %2 の %3",
  "UNIT_ANGLE8_SET_LED_RGB": "%1 チャンネル %3 のLED %2 の色を赤 %4 緑 %5 青 %6 、輝度 %7 に設定",
  "UNIT_ANGLE8_SET_I2C_ADDRESS": "%1 デバイスのI2Cアドレス %2 を %3 に設定",
  "RTC_STATION_SET_CLIENT": "set rtc %1 year %2 month %3 date %4 weekday %5 hour %6 minute %7 second %8",
  "RTC_STATION_GET_DATE_TIME": "get rtc %1",
  "GROVE_GET_STATUS": "Grove %1 get status",
  "GROVE_SET_STATUS": "Grove %1 set %2 control %3",
  "AXP_STATION_GET_BTNSTATE": "Get power button status %1",
  "UNIT_GROVE2GROVE": "Grove2Grove",
  "UNIT_GROVE2GROVE_GET_STATUS": "%1 有効状態",
  "UNIT_GROVE2GROVE_GET_AMETER": "%1 電流値",
  "UNIT_GROVE2GROVE_SET_PIN": "%1 %2 ピンの状態を %3",
  "UNIT_GROVE2GROVE_SET_VREF": "%1 0mA の基準電流を設定",
  "GROVE": "Grove",
  "GROVE_CHECK_CHANNEL_ENABLE": "Grove %1 check channel enable",
  "GROVE_GET_CURRENT": "Grove %1 get current",
  "GROVE_GET_VBUS_VOLTAGE": "Grove %1 get VBus voltage",
  "GROVE_SET_CHANNEL_ENABLE": "Grove %1 channel %2 enable %3",
  "UNIT_UWB": "UWB",
  "UNIT_UWB_RESET": "%1 Reset",
  "UNIT_UWB_SET_INTERVAL": "Set %1 range interval %2 times before value output",
  "UNIT_UWB_SET_TAG": "Set %1 to tag mode",
  "UNIT_UWB_SET_ANCHOR": "Set %1  to anchor mode with ID %2 (0 ~ 3)",
  "UNIT_UWB_START_MEASURING": "%1 Start measuring",
  "UNIT_UWB_STOP_MEASURING": "%1 Stop measuring",
  "UNIT_UWB_GET_VERSION": "%1 Get firmware version (return string)",
  "UNIT_UWB_GET_MEASURING_DATA": "%1 Get measuring data list",
  "UNIT_UWB_GET_MEASURING_DATA_LIST": "%1 Get measuring %2 data list %3",
  "UNIT_ANGLE8_SET_LED_RGB_FROM": "%1 チャンネル %3 から %4 のLED %2 の色を赤 %5 緑 %6 青 %7 、輝度 %8 に設定",
  "MODULE_4IN8OUT": "4in8out",
  "MODULE_4IN8OUT_INIT": "Init I2C %1 address %2",
  "MODULE_4IN8OUT_READ_PIN": "Get input %1 channel %2",
  "MODULE_4IN8OUT_READ_STATUS": "Get %1 status %2",
  "MODULE_4IN8OUT_WRITE_PIN": "Set output %1 channel %2 %3 state %4",
  "MODULE_4IN8OUT_SET_ADDRESS": "Set I2C %1 address %2",
  "UNIT_CO2": "Co2",
  "UNIT_CO2_START_PERIODIC_MEASUREMENT": "%1 Start periodic measurement",
  "UNIT_CO2_STOP_PERIODIC_MEASUREMENT": "%1 Stop periodic measurement",
  "UNIT_CO2_DOWNLOAD_SENSOR_MEASUREMENT": "%1 Updated sensor measurement",
  "UNIT_CO2_SET_TEMPERATURE_OFFSET": "%1 Set %2 temperature offset %3",
  "UNIT_CO2_SET_SENSOR_ALTITUDE": "%1 Set sensor %2 altitude height %3 M",
  "UNIT_CO2_SET_AMBIENT_PRESSURE": "%1 Set %2 ambient pressure %3 hPa",
  "UNIT_CO2_FORCE_CALIBRATION": "%1 Perform forced recalibration %2 CO2 %3 PPM",
  "UNIT_CO2_SET_AUTO_CALIBRATION": "%1 Set %2 auto-calibration %3",
  "UNIT_CO2_START_LOW_PERIODIC_MEASUREMENT": "%1 Start low periodic measurement",
  "UNIT_CO2_PERSIST_SETTING": "%1 All settings save EEPROM",
  "UNIT_CO2_SELF_TEST": "%1 Perform self test",
  "UNIT_CO2_FACTORY_RESET": "%1 Perform factory reset",
  "UNIT_CO2_REINIT": "%1 Re-initializes sensor",
  "UNIT_CO2_SINGLE_SHOT_MEASUREMENT_ALL": "%1 Single shot measurement ALL",
  "UNIT_CO2_SINGLE_SHOT_MEASUREMENT_HT": "%1 Single shot measurement HT",
  "UNIT_CO2_POWER_DOWN": "%1 Sensor power down",
  "UNIT_CO2_WAKE_UP": "%1 Sensor wake up",
  "UNIT_CO2_READ_PARAMETER": "%1 Get %2 parameter %3",
  "UNIT_CO2_GET_TEMPERATURE_OFFSET": "%1 Get temperature offset",
  "UNIT_CO2_GET_SENSOR_ALTITUDE": "%1 Get sensor altitude",
  "UNIT_CO2_GET_CALIBRATION_ENABLED": "%1 Get auto-calibration enabled ?",
  "UNIT_CO2_GET_SERIAL_NUMBER": "%1 Get sensor serial number",
  "AXP_STATION_GET_BAT_VOLTAGE_PERCENT": "Get battery percentage Vmin %1 Vmax %2",
  "BLE_PERIPHERAL": "BLE Peripheral",
  "BLE_PERIPHERAL_INIT": "Init BLE Peripheral %1 name %2",
  "BLE_PERIPHERAL_SEND_DATA": "BLE send %1 data %2",
  "BLE_PERIPHERAL_CONNECTED": "BLE check connection ?",
  "BLE_PERIPHERAL_RECV_CB": "BLE recv callback %1 %2",
  "BLE_PERIPHERAL_DISCONNECT": "BLE disconnect device",
  "BLE_CENTRAL": "BLE Central",
  "BLE_CENTRAL_SEND_DATA": "BLE send %1 data %2",
  "BLE_CENTRAL_CONNECT": "BLE connect device",
  "BLE_CENTRAL_DISCONNECT": "BLE disconnect device",
  "BLE_CENTRAL_SCAN_CB": "BLE get scan result %1 %2",
  "BLE_CENTRAL_SCAN_DURATION": "BLE start scan device %1 duration %2 ms",
  "BLE_CENTRAL_RECV_CB": "BLE recv callback %1 %2",
  "BLE_CENTRAL_CHECK_CONNECTION": "BLE check connection ?",
  "BLE": "BLE",
  "ATOM_POE": "PoE",
  "ATOM_POE_INIT": "Init LAN %1 remote IP %2 port %3 socket type %4 %5 machine type %6",
  "ATOM_POE_TCP_SEND_PACKET": "TCP send %1 packet %2",
  "ATOM_POE_TCP_RECEIVE_PACKET": "TCP receive packet %1 size %2",
  "ATOM_POE_UDP_SEND_PACKET": "UDP send packet %1 IP %2 port %3 payload %4",
  "ATOM_POE_UDP_RECEIVE_PACKET": "UDP receive packet %1 size %2",
  "ATOM_POE_AVAILABLE_PACKET": "Available packet %1",
  "ATOM_POE_LOCAL_IP": "Local IP address",
  "ATOM_POE_REMOTE_IP": "Remote IP address",
  "ATOM_POE_GET_IF_CONFIG": "Get if config",
  "ATOM_POE_SOCKET_CLOSE": "Socket closed",
  "ATOM_POE_HTTP_GET": "HTTP(S) GET %1 url %2 %3",
  "ATOM_POE_HTTP_POST": "HTTP(S) POST %1 url %2 type %3 data %4",
  "ATOM_POE_MQTT_INIT": "Init MQTT server %1 port %2 client id %3 username %4 password %5 keepalive %6",
  "ATOM_POE_MQTT_DISCONNECT": "MQTT disconnect server",
  "ATOM_POE_MQTT_CONNECT": "MQTT connect server",
  "ATOM_POE_MQTT_CHECK_CONNECTION": "MQTT check connect server",
  "ATOM_POE_MQTT_SUB": "MQTT subscribe %1 topic %2 QoS %3",
  "ATOM_POE_MQTT_SUB_CB": "MQTT subscribe callback %1 topic %2 msg %3",
  "ATOM_POE_MQTT_PUBLISH": "MQTT publish topic %1 payload %2 QoS %3",
  "ATOM_POE_MQTT_POLL": "MQTT poll downlink message",
  "ATOM_POE_EZDATA_REMOVE": "Remove %1 topic %2 with %3 token %4",
  "ROBOCAR_DISTANCE_SENSOR": "Get one wire ultrasonic target distance %1 CM sensor pin %2 (return float)",
  "ROBOCAR_SET_LED": "Set one wire ultrasonic RGB num %1 (1 ~ 3) color R %2 G %3 B %4 (0 ~ 255)",
  "ZIGBEE": "Zigbee",
  "ZIGBEE_INIT": "Init zigbee module %1 Tx %2 Rx %3",
  "ZIGBEE_GET_VERSION": "Get module version",
  "ZIGBEE_GET_PARAM": "Get module %1 param %2",
  "ZIGBEE_RECV_PAYLOAD": "Receive payload",
  "ZIGBEE_CHECK_PAYLOAD": "Check payload length ?",
  "ZIGBEE_SET_REBOOT": "Set module reboot",
  "ZIGBEE_SET_MODULE": "Set module parameter %1 ROLE %2 %3 PAN ID %4 CHANNEL %5 MODE %6 %7 USER ADDRESS %8 BAUDRATE %9 %10 ANTENNA %11 %12 ENCRYPT PASSWORD %13",
  "ZIGBEE_SEND_PAYLOAD": "Send payload %1",
  "ZIGBEE_SET_CORE_BAUDRATE": "Set core baudrate %1",
  "UNIT_ZIGBEE": "Zigbee",
  "UNIT_ZIGBEE_GET_VERSION": "%1 Get module version",
  "UNIT_ZIGBEE_GET_PARAM": "%1 Get module %2 param %3",
  "UNIT_ZIGBEE_RECV_PAYLOAD": "%1 Receive payload",
  "UNIT_ZIGBEE_CHECK_PAYLOAD": "%1 Check payload length ?",
  "UNIT_ZIGBEE_SET_REBOOT": "%1 Set module reboot",
  "UNIT_ZIGBEE_SET_MODULE": "%1 Set module parameter %2 ROLE %3 %4 PAN ID %5 CHANNEL %6 MODE %7 %8 USER ADDRESS %9 BAUDRATE %10 %11 ANTENNA %12 %13 ENCRYPT PASSWORD %14",
  "UNIT_ZIGBEE_SEND_PAYLOAD": "%1 Send payload %2",
  "UNIT_ZIGBEE_SET_CORE_BAUDRATE": "%1 Set core baudrate %2",
  "UNIT_SCALES": "Scales",
  "UNIT_SCALES_GET_BUTTON": "%1 Get %2 button %3",
  "UNIT_SCALES_GET_SCALE": "%1 Get  %2 scale %3 value",
  "UNIT_SCALES_GET_LED": "%1 Get %2 LED %3 status",
  "UNIT_SCALES_GET_STATUS": "%1 Get device %2 status %3",
  "UNIT_SCALES_SET_RGB": "%1 Set RGB color %2 R %3 G %4 B %5",
  "UNIT_SCALES_SET_ADC": "%1 Set offset ADC %2 value %3",
  "UNIT_SCALES_SET_ADC_OFFSET": "%1 Set offset current ADC value",
  "UNIT_SCALES_SET_BUTTON_OFFSET": "%1 Set button  %2 offset %3",
  "UNIT_SCALES_SET_RGB_SYNC": "%1 Set RGB LED %2 sync %3",
  "UNIT_SCALES_SET_ZERO": "%1 Set zero gram calibration",
  "UNIT_SCALES_SET_CALIBRATION": "%1 Set load %2 gram calibration",
  "UNIT_SCALES_SET_I2C": "%1 Set %2 I2C address %3",
  "UNIT_SCALES_INIT_I2C": "%1 Init %2 I2C address %3",
  "UNIT_THERMAL2": "Thermal2",
  "UNIT_THERMAL2_GET_BUTTON_STATUS": "%1 Get button %2 status %3",
  "UNIT_THERMAL2_GET_TEMP_ALARM_STATUS": "%1 Get temperature alarm status",
  "UNIT_THERMAL2_GET_DEVICE_INFO": "%1 Get device %2 info %3",
  "UNIT_THERMAL2_GET_I2C_ADDRESS": "%1 Get I2C %2 address %3",
  "UNIT_THERMAL2_GET_FUNC_CTRL": "%1 Get function control",
  "UNIT_THERMAL2_GET_REFRESH_RATE": "%1 Get refresh rate",
  "UNIT_THERMAL2_GET_NOISE_FILTER": "%1 Get noise filter",
  "UNIT_THERMAL2_GET_TEMP_MONITOR": "%1 Get temperature monitor %2 size",
  "UNIT_THERMAL2_GET_BUZZER_FREQ": "%1 Get buzzer frequency",
  "UNIT_THERMAL2_GET_BUZZER_DUTY": "%1 Get buzzer duty cycle",
  "UNIT_THERMAL2_GET_TEMP_THRESHOLD": "%1 Get %2 temperature threshold",
  "UNIT_THERMAL2_GET_ALARM_BUZZER_FREQ": "%1 Get %2 temperature buzzer frequency",
  "UNIT_THERMAL2_GET_ALARM_BUZZER_INTERVAL": "%1 Get %2 temperature buzzer interval",
  "UNIT_THERMAL2_GET_TEMP_ALARM_LED": "%1 Get %2 temperature LED RGB colors",
  "UNIT_THERMAL2_GET_DATA_REFRESH_CTRL": "%1 Get Data refresh control",
  "UNIT_THERMAL2_GET_SUBPAGE_INFO": "%1 Get subpage information",
  "UNIT_THERMAL2_GET_TEMP_MEASURE": "%1 Get %2 temperature %3 value",
  "UNIT_THERMAL2_GET_TEMP_DIFFERENTIAL": "%1 Get %2 %3 position %4",
  "UNIT_THERMAL2_GET_TEMP_DATA_BUFFER": "%1 Get temperature data buffer",
  "UNIT_THERMAL2_SET_FUNC_CTRL": "%1 Set %2 %3 control %4",
  "UNIT_THERMAL2_SET_REFRESH_RATE": "%1 Set  %2 refresh rate %3 hz",
  "UNIT_THERMAL2_SET_NOISE_FILTER": "%1 Set %2 noise filter %3",
  "UNIT_THERMAL2_SET_TEMP_MONITOR": "%1 Set temperature monitor size %2 width %3 height %4",
  "UNIT_THERMAL2_SET_TEMP_ALARM_CTRL": "%1 Set temperature %2 alarm %3 control %4",
  "UNIT_THERMAL2_SET_BUZZER_FREQ": "%1 Set buzzer %2 frequency %3",
  "UNIT_THERMAL2_SET_BUZZER_DUTY": "%1 Set buzzer %2 duty cycle %3",
  "UNIT_THERMAL2_SET_LED_COLOR": "%1 Set LED color %2 R %3 G %4 B %5",
  "UNIT_THERMAL2_SET_TEMP_THRESHOLD": "%1 Set %2 temperature threshold %3 value %4 °C",
  "UNIT_THERMAL2_SET_TEMP_FREQ": "%1 Set %2 temperature buzzer %3 frequency %4",
  "UNIT_THERMAL2_SET_TEMP_ALARM_INTERVAL": "%1 Set %2 temperature buzzer %3 interval %4",
  "UNIT_THERMAL2_SET_TEMP_ALARM_LED": "%1 Set %2 temperature LED color %3 R %4 G %5 B %6",
  "MODULE_RELAY2": "2Relay",
  "MODULE_RELAY2_INIT": "Init module I2C %1 address %2",
  "MODULE_RELAY2_GET_STATUS": "Get %1 relay %2 status",
  "MODULE_RELAY2_GET_INFO": "Get module %1 info %2",
  "MODULE_RELAY2_SET_STATE": "Set %1 relay %2 state %3",
  "MODULE_RELAY2_SET_ADDRESS": "Set module I2C %1 address %2",
  "M5ESPNOW_GET_REMOTE_MAC1": "EspNow %2 リモート %1 を SSID %3 で取得",
  "M5ESPNOW_INIT_CHANNEL": "EspNow %1 チャンネル %2 (0 ~ 13)をデータ型 %3 で初期化",
  "M5ESPNOW_SET_AP_MODE1": "EspNow APモード %1 SSID %2 パスワード %3 に設定",
  "BASE_SPK": "SPK",
  "BASE_SPK_PLAY_WAV_FILE": "Play %1 WAV %2 file %3 volume %4",
  "BASE_SPK_PLAY_WAV_DROPDOWN": "Play local WAV %1 file %2 volume %3",
  "BASE_SPK_PLAY_WAV_RATE": "Play local WAV %1 file %2 samplerate %3 data format %4 channel %5 volume %6",
  "BASE_SPK_PLAY_CLOUD_WAV": "Play cloud WAV %1 file(URL) %2 volume %3",
  "BASE_SPK_PLAY_SING": "Play %1 tone %2 for %3 beat volume %4",
  "CATM_GPRS_SERVICE": "GPRS service %1",
  "CATM_SHOW_PDP_ADDRESS": "Show PDP address",
  "UNIT_CATM_GPRS_SERVICE": "%1 GPRS service %2",
  "UNIT_CATM_SHOW_PDP_ADDRESS": "%1 Show PDP address",
  "SDCARD_INIT": "SDCardをクロック周波数 %1 で初期化する",
  "UNIT_NCIR2": "NCIR2",
  "UNIT_NCIR2_INIT": "%1 Init I2C %2 address %3",
  "UNIT_NCIR2_GET_TEMPERATURE": "%1 Get object temperature °C value",
  "UNIT_NCIR2_GET_EMISSIVITY": "%1 Get emissivity value",
  "UNIT_NCIR2_GET_TEMP_THRESHOLD": "%1 Get %2 temperature threshold value",
  "UNIT_NCIR2_GET_TEMP_LED_COLOR": "%1 Get %2 temperature LED RGB colors",
  "UNIT_NCIR2_GET_TEMP_BUZZER_FREQ": "%1 Get %2 temperature buzzer frequency",
  "UNIT_NCIR2_GET_TEMP_BUZZER_INTERVAL": "%1 Get %2 temperature buzzer interval",
  "UNIT_NCIR2_GET_TEMP_BUZZER_DUTY": "%1 Get %2 temperature buzzer duty cycle",
  "UNIT_NCIR2_GET_BUZZER_FREQ": "%1 Get buzzer frequency",
  "UNIT_NCIR2_GET_BUZZER_DUTY": "%1 Get buzzer duty cycle",
  "UNIT_NCIR2_GET_BUZZER_CONTROL": "%1 Get buzzer control status",
  "UNIT_NCIR2_GET_RGB_LED": "%1 Get RGB LED color",
  "UNIT_NCIR2_GET_BUTTON_STATUS": "%1 Get button status",
  "UNIT_NCIR2_GET_DEVICE_TEMP": "%1 Get device temperature °C value",
  "UNIT_NCIR2_GET_DEVICE_STATUS": "%1 Get device %2 status %3",
  "UNIT_NCIR2_SET_EMISSIVITY": "%1 Set emissivity %2 value %3",
  "UNIT_NCIR2_SET_TEMP_THRESHOLD": "%1 Set %2 temperature threshold %3 value %4",
  "UNIT_NCIR2_SET_TEMP_LED_COLOR": "%1 Set %2 temperature LED RGB color %3 R %4 G %5 B %6",
  "UNIT_NCIR2_SET_TEMP_BUZZER_FREQ": "%1 Set %2 temperature buzzer %3 frequency %4",
  "UNIT_NCIR2_SET_TEMP_BUZZER_INTERVAL": "%1 Set %2 temperature buzzer %3 interval %4",
  "UNIT_NCIR2_SET_TEMP_BUZZER_DUTY": "%1 Set %2 temperature buzzer %3 duty cycle %4",
  "UNIT_NCIR2_SET_BUZZER_FREQ": "%1 Set buzzer %2 frequency %3",
  "UNIT_NCIR2_SET_BUZZER_DUTY": "%1 Set buzzer %2 duty cycle %3",
  "UNIT_NCIR2_SET_CONTROL": "%1 Set buzzer control %2 state %3",
  "UNIT_NCIR2_SET_RGB_LED": "%1 Set RGB LED color %2 R %3 G %4 B %5",
  "UNIT_NCIR2_SAVE_SETTING": "%1 Save current configure settings",
  "UNIT_NCIR2_SET_I2C_ADDRESS": "%1 Set device I2C %2 address %3",
  "UNIT_FLASHLIGHT": "FlashLight",
  "UNIT_FLASHLIGHT_CONTROL": "%1 のフラッシュライト %2 を %3 で制御した後、LEDを消すか %4 、遅延時間 %5 秒",
  "BASE_SPK_PLAY_TONE": "Play tone %1 frequency %2 beat %3 volume %4",
  "CATM_INIT_MODEM": "Power on & Init module",
  "CATM_POWER_SAVE_MODE": "Enable power save mode %1 Periodic-TAU unit : base %2 %3 Periodic-TAU duration %4 %5 Active Time unit : base %6 %7 Active Time duration %8",
  "CATM_DISABLE_POWER_SAVE_MODE": "Disable power save mode",
  "UNIT_CATM_INIT_MODULE": "%1 Init module",
  "ROBOCAR_GET_MULTI_LINE_SENSOR": "Get multi-channel line follower sensor %1 (return int)",
  "ROBOCAR_SET_MULTI_LED": "Set multi-channel line follower sensor LED %1",
  "TOIO_TOF_GET_DISTANCE": "ToFの値",
  "MODULE_COMMU": "COMMU",
  "MODULE_COMMU_CAN_INIT": "CAN init %1 mode %2 speed %3",
  "MODULE_COMMU_CAN_SET_MODE": "CAN set %1 mode %2",
  "MODULE_COMMU_CAN_RESET": "CAN module reset",
  "MODULE_COMMU_CAN_CONFIG_RATE": "CAN config rate %1 speed %2",
  "MODULE_COMMU_CAN_AVAILABLE_MSG": "CAN available message ?",
  "MODULE_COMMU_CAN_READ_MSG": "CAN read message %1 type %2",
  "MODULE_COMMU_CAN_REMOTE_ID": "CAN remote can ID",
  "MODULE_COMMU_CAN_SEND_MSG": "CAN send message %1 ID %2 data %3",
  "MODULE_COMMU_CAN_DEBUG": "CAN print debug %1",
  "MODULE_COMMU_CAN_INTERRUPT_OCCUR": "CAN INT pin interrupt occur ?",
  "MODULE_COMMU_CAN_CLEAR_INTERRUPT": "CAN clear interrupts flag",
  "MODULE_COMMU_UART_INIT": "%1 Init uart num %2 %3 Tx pin %4 Rx pin %5 Baud rate %6 %7 Bits %8 %9 Parity %10 %11 Stop bit %12",
  "MODULE_COMMU_I2C_INIT": "I2C init %1 sda %2 scl %3 addr %4 freq %5",
  "MODULE_COMMU_UART_READ": "%1 Read all",
  "MODULE_COMMU_UART_READ_CHARACTERS": "%1 Read %2 bytes",
  "MODULE_COMMU_UART_READLINE": "%1 Read line",
  "MODULE_COMMU_UART_ANY": "%1 Remain cache",
  "MODULE_COMMU_UART_WRITE": "%1 Write %2",
  "MODULE_COMMU_UART_WRITE_LINE": "%1 Write a %2 line %3",
  "MODULE_COMMU_UART_WRITE_RAW_DATA": "%1 Write %2 raw data %3",
  "MODULE_COMMU_I2C_AVAILABLE": "Available I2C address in list",
  "MODULE_COMMU_I2C_SCAN": "Scan I2C device",
  "MODULE_COMMU_I2C_READ_REQ": "Read %1 reg %2 one byte",
  "MODULE_COMMU_I2C_READ_RES": "Read %1 reg %2 one short with %3 decode %4",
  "MODULE_COMMU_I2C_READ_REG": "Read %1 reg %2 %3 read %4 byte",
  "MODULE_COMMU_I2C_READ_MEM_DATA": "Read %1 reg %2 num %3 type %4",
  "MODULE_COMMU_I2C_READ_DATA": "Read data %1 num %2 type %3",
  "MODULE_COMMU_I2C_GET_DATA_IN_LIST": "In %1 data %2 get %3 index %4",
  "MODULE_COMMU_I2C_WRITE_BYTE": "Write %1 reg %2 one byte %3",
  "MODULE_COMMU_I2C_WRITE_BIG": "Write %1 reg %2 one short %3 %4 with encode %5",
  "MODULE_COMMU_I2C_WRITE_MEM_DATA": "Write %1 reg %2 data %3 type %4",
  "MODULE_COMMU_I2C_WRITE_DATA": "Write %1 data %2 type %3",
  "MODULE_COMMU_I2C_WRITE_MEM_LIST": "Write list %1 reg %2 byte %3",
  "IMAGE_SET_IMAGE_SDCARD": "Set %1 sdcard image %2",
  "IMAGE_SET_IMAGE_SDCARD_CORE2": "Set %1 sdcard image ( png ) %2",
  "UNIT_ANGLE8_INIT": "%1 をI2Cアドレス %2 %3 で初期化",
  "UNIT_ENCODER8": "8ENCODER",
  "UNIT_ENCODER8_INIT": "%1 をI2Cアドレス %2 %3 で初期化",
  "UNIT_ENCODER8_GET_COUNTER_VALUE": "%1 チャンネル %3 のカウンタ値 %2",
  "UNIT_ENCODER8_GET_INCREMENT_VALUE": "%1 チャンネル %3 の増減値 %2",
  "UNIT_ENCODER8_GET_BUTTON_STATUS": "%1 チャンネル %3 のボタンスイッチの値 %2",
  "UNIT_ENCODER8_GET_SWITCH_STATUS": "%1 のスイッチの値",
  "UNIT_ENCODER8_GET_DEVICE_STATUS": "%1 デバイス %2 %3 の状態",
  "UNIT_ENCODER8_SET_COUNTER_VALUE": "%1 チャンネル %4 のカウンタ %2 の 値を %3 に設定",
  "UNIT_ENCODER8_RESET_COUNTER_VALUE": "%1 チャンネル %3 のカウンタ値 %2 をリセット",
  "UNIT_ENCODER8_SET_LED_RGB": "%1 チャンネル %3 のLED %2 の色を赤 %4 緑 %5 青 %6 に設定",
  "UNIT_ENCODER8_SET_LED_RGB_FROM": "%1 チャンネル %3 から %4 のLED %2 の色を赤 %5 緑 %6 青 %7 に設定",
  "UNIT_ENCODER8_SET_I2C_ADDRESS": "%1 デバイスのI2Cアドレス %2 を %3 に設定",
  "UNIT_BPSQMP": "BPS V1.1",
  "UNIT_BPSQMP_GET_TEMPERATURE": "%1 Get temperature value (°C)",
  "UNIT_BPSQMP_GET_PRESSURE": "%1 Get pressure value (Pa)",
  "RS485": "RS485",
  "RS485_PIN": "RS485 Set tx %1 rx %2 %3 baud %4 use UART %5",
  "RS485_READ": "RS485 Read all",
  "RS485_READ_CHARACTERS": "RS485 Read %1 character",
  "RS485_READLINE": "RS485から1行読み込む",
  "RS485_READANY": "RS485 Remain cache",
  "RS485_WRITE": "RS485 Write %1",
  "RS485_WRITE_LINE": "RS485 Write line %1",
  "RS485_WRITE_RAW_DATA": "RS485 Write raw data %1",
  "RS485_PIN2_OFF": "Receive enable",
  "RS485_PIN2_ON": "Transmit enable",
  "UNIT_CO2L": "Co2L",
  "UNIT_CO2L_GET_VALUE": "%1 Get %2 value %3",
  "UNIT_CO2L_POWER_DOWN": "%1 Set sensor sleep mode",
  "UNIT_CO2L_GET_DATA_READY_STATUS": "%1 Get data ready status",
  "UNIT_CO2L_GET_SENSOR_MEASUREMENT": "%1 Wait for update sensor measurement",
  "HAT_HEARTRATE": "Heart Rate",
  "HAT_HEARTRATE_GET_HEARTRATE": "%1 の心拍数",
  "HAT_HEARTRATE_GET_SPO2": "%1 のSpO2",
  "HAT_HEARTRATE_SET_MODE": "%1 %3 %2 モードに設定",
  "HAT_HEARTRATE_SET_LED_CURRENT": "%1 %2 赤色LED電流 %3 IR LED電流 %4 に設定",
  "HAT_HEARTRATE_GET_IR": "%1 IRの生A/Dコンバータ電流値",
  "HAT_HEARTRATE_GET_RED": "%1 REDの生A/Dコンバータ電流値",
  "HAT_CBACKNBIOT_DESTROY_HTTPS": "Delete HTTP(S) service",
  "HAT_MINIENCODERC": "Mini EncoderC",
  "HAT_MINIENCODERC_INIT": "エンコーダ %1 を I2Cを %2 アドレス %3 で初期化",
  "HAT_MINIENCODERC_GET_COUNTER_VALUE": "エンコーダ %1 のカウント",
  "HAT_MINIENCODERC_GET_INCREMENT_VALUE": "エンコーダ %1 の増減値",
  "HAT_MINIENCODERC_GET_BUTTON_STATUS": "エンコーダ %1 のボタンの状態",
  "HAT_MINIENCODERC_GET_DEVICE_STATUS": "エンコーダ %1 の %2 デバイスの %3",
  "HAT_MINIENCODERC_SET_COUNTER_VALUE": "エンコーダ %1 の %2 カウントを %3 に設定",
  "HAT_MINIENCODERC_RESET_COUNTER_VALUE": "エンコーダ %1 のカウントを初期化",
  "HAT_MINIENCODERC_SET_LED_RGB": "エンコーダ %1 のRGB LEDの色を %2 R %3 G %4 B %5 に設定",
  "HAT_MINIENCODERC_SET_I2C_ADDRESS": "エンコーダ %1 のI2Cを %2 アドレス %3 に設定",
  "HAT_CBACKNBIOT_HTTP_SERVICES": "HTTP(S) services %1 method %2 %3 url %4 path %5 content type %6 %7 payload %8",
  "HAT_MINIJOYC": "Mini JoyC",
  "HAT_MINIJOYC_INIT": "%1 %2 I2Cアドレス %3 で初期化",
  "HAT_MINIJOYC_GET_RAW_VALUE": "%1 %3 %2 軸の生データを取得",
  "HAT_MINIJOYC_GET_10BIT_VALUE": "%1 %3 %2 軸のオフセットありの10bitデータを取得",
  "HAT_MINIJOYC_GET_8BIT_VALUE": "%1 %3 %2 軸のオフセットありの8bitデータを取得",
  "HAT_MINIJOYC_GET_BUTTON_STATUS": "%1 ボタンの状態を取得",
  "HAT_MINIJOYC_GET_DEVICE_STATUS": "%1 デバイスの %2 状態 %3 を取得",
  "HAT_MINIJOYC_GET_OFFSET_VALUE": "%1 キャリブレーションのオフセット値 %2 を取得",
  "HAT_MINIJOYC_SET_LED_RGB": "%1 LEDの色を %2 R %3 G %4 B %5 に設定",
  "HAT_MINIJOYC_SET_OFFSET_VALUE": "%1 キャリブレーションの %2 オフセット %3 を値 %4 に設定",
  "HAT_MINIJOYC_SET_I2C_ADDRESS": "%1 デバイスの %2 I2Cアドレスを %3 に設定",
  "UNIT_ACSSR": "ACSSR",
  "UNIT_ACSSR_SELECT_MODE": "%1 Set control %2 mode %3",
  "UNIT_ACSSR_INIT_I2C_ADDRESS": "%1 Init I2C %2 address %3",
  "UNIT_ACSSR_GET_I2C_SSR_STATUS": "%1 Get I2C SSR status",
  "UNIT_ACSSR_GET_I2C_LED": "%1 Get I2C RGB LED value",
  "UNIT_ACSSR_GET_I2C_STATUS": "%1 Get I2C status %2",
  "UNIT_ACSSR_SET_I2C_SSR_STATE": "%1 Set I2C SSR state %2",
  "UNIT_ACSSR_SET_I2C_RGB_LED": "%1 Set I2C RGB LED color %2 R %3 G %4 B %5",
  "UNIT_ACSSR_SET_I2C_ADDRESS": "%1 Set I2C %2 address %3",
  "UNIT_ACSSR_INIT_MODBUS": "%1 Init modbus %2 slave address %3 UART id %4 baudrate %5 data bits %6 stop bits %7 parity %8",
  "UNIT_ACSSR_GET_MODBUS_SSR_STATUS": "%1 Get modbus SSR status",
  "UNIT_ACSSR_GET_MODBUS_LED": "%1 Get modbus RGB LED value",
  "UNIT_ACSSR_GET_MODBUS_STATUS": "%1 Get modbus status %2",
  "UNIT_ACSSR_SET_MODBUS_SSR_STATE": "%1 Set modbus SSR state %2",
  "UNIT_ACSSR_SET_MODBUS_RGB_LED": "%1 Set modbus RGB LED color %2 R %3 G %4 B %5",
  "UNIT_ACSSR_SET_MODBUS_ADDRESS": "%1 Set modbus %2 address %3",
  "PM25_SHT30_GET_TEMPERATURE": "PM2.5 (SHT30) %1 get temperature value (℃, return float)",
  "PM25_SHT30_GET_HUMIDITY": "PM2.5 (SHT30) %1 get humidity value (%RH, return float)",
  "BASE_SOCKET_KIT": "Atom Socket",
  "ATOM_SOCKET_KIT_REMOTE_CONTROL": "Set remote control mode %1",
  "ATOM_SOCKET_KIT_WAIT_UPDATE_DATA": "Wait for updated data",
  "ATOM_SOCKET_KIT_LOAD_VOLTAGE": "Get load voltage",
  "ATOM_SOCKET_KIT_LOAD_CURRENT": "Get load current",
  "ATOM_SOCKET_KIT_LOAD_ACTIVE_POWER": "Get load active power",
  "ATOM_SOCKET_KIT_RELAY_STATUS": "Get relay status",
  "ATOM_SOCKET_KIT_SET_RELAY_STATE": "Set relay state %1",
  "ATOM_SOCKET_KIT_SERVER_LOOP": "AP mode web server polling loop",
  "ATOM_SOCKET_KIT_GET_PUBLISH_TOPIC": "Get publish topic",
  "ATOM_SOCKET_KIT_GET_SUBSCRIBE_TOPIC": "Get subscribe topic %1",
  "STAMPS": "Stamps",
  "STAMP_IO": "IO",
  "STAMP_TIMERPOWER": "TimerPower",
  "STAMP_TIMERPOWER_INIT": "%1 Init timerpower %2 SDA %3 %4 SCL %5 %6 HOLD %7 %8 Wakeup %9 %10 3V3 enable %11 %12",
  "STAMP_TIMERPOWER_HOLD": "%1 Set hold %2 state %3",
  "STAMP_TIMERPOWER_WAKEUP": "%1 Set wakeup timer %2 value %3 mode %4",
  "STAMP_TIMERPOWER_WAKEUP_CTRL": "%1 Set wakeup %2 output %3",
  "STAMP_TIMERPOWER_IRQ": "%1 Disable timer IRQ output",
  "STAMP_TIMERPOWER_POWER_CONTROL": "%1 Set 3V3 power control %2 output %3",
  "STAMP_TIMERPOWER_SET_DATE_TIME": "%1 Set RTC %2 year %3 month %4 date %5 weekday %6 hour %7 minute %8 second %9",
  "STAMP_TIMERPOWER_GET_DATE_TIME": "%1 Get RTC %2",
  "STAMP_TIMERPOWER_SET_ALARM": "%1 Set alarm %2 date %3 hours %4 minutes %5",
  "STAMP_TIMERPOWER_CHECK_ALARM_FLAG": "%1 Check alarm flag",
  "STAMP_TIMERPOWER_CLEAR_ALARM": "%1 Turn off alarm",
  "STAMP_TIMERPOWER_DISABLE_ALARM": "%1 Disable alarm",
  "STAMP_TIMERPOWER_SET_TIMER_MODE": "%1 Set timer %2 value %3 mode %4",
  "STAMP_TIMERPOWER_GET_TIMER_VALUE": "%1 Get timer value",
  "STAMP_TIMERPOWER_CHECK_TIMER_FLAG": "%1 Check timer flag",
  "STAMP_TIMERPOWER_DISABLE_TIMER": "%1 Disable timer",
  "STAMP_TIMERPOWER_PAUSE_TIMER": "%1 Pause timer",
  "STAMP_TIMERPOWER_RESUME_TIMER": "%1 Resume timer",
  "STAMP_TIMERPOWER_CLEAR_TIMER_FLAG": "%1 Turn off timer",
  "RGB_SET_COLOR_FROM_RGB_INPUT": "Set %1 from %2 to %3 color %4",
  "FINGER_UART_INIT": "%1 Set core uart ID num %2",
  "PBHUB_PWM_WRITE": "%1 CH %2 IO %3 のPWMのデューティ比を %4 %に設定",
  "PBHUB_PWM_READ": "%1 CH %2 IO %3 のPWMを読み込み",
  "STEPMOTOR_DRIVER_INIT": "Init device I2C address %1",
  "STEPMOTOR_DRIVER_READ_FAULT_STATUS": "Read fault status motor %1",
  "STEPMOTOR_DRIVER_DRIVER_RESET": "Reset motor %1 state %2",
  "STEPMOTOR_DRIVER_STATUS": "Read device status %1",
  "STEPMOTOR_DRIVER_SET_I2C": "Set device I2C address %1",
  "STEPMOTOR_DRIVER_SET_STEP_PULSE2": "Set step pulse freq %1 motor %2",
  "STEPMOTOR_DRIVER_MODBUS_INIT": "Init Tx %1 Rx %2 bandrate %3 mode %4 slave addr %5",
  "HAT_VIBRATOR": "バイブレータ",
  "HAT_VIBRATOR_SET_FREQ": "バイブレータ %1 の %2 周波数を %3 hzに設定",
  "HAT_VIBRATOR_SET_DUTY": "バイブレータ %1 の %2 デューティー比を %3 %に設定",
  "HAT_VIBRATOR_TURN_OFF": "バイブレータ %1 をオフにする",
  "TIMER_HARDWARE_TIMER_INIT": "ハードウエア タイマー3 を %1 [ミリ秒]間隔 モード %2 に",
  "TIMER_TIMER3_CALLBACK": "タイマー3 が呼び出されたとき",
  "STAMP_IO_GET_CONFIG_MODE": "%1 Get config mode %2 pin %3",
  "STAMP_IO_SET_CONFIG_MODE": "%1 Set config mode %2 pin %3 mode %4",
  "STAMP_IO_READ_DIGITAL_INPUT_PIN": "%1 Get digital input %2 pin %3",
  "STAMP_IO_WRITE_DIGITAL_OUTPUT_PIN": "%1 Set digital output %2 pin %3 level %4",
  "STAMP_IO_WRITE_DIGITAL_OUTPUT_PIN2": "%1 Set digital output %2 pin %3 level %4",
  "STAMP_IO_WRITE_SERVO_ANGLE": "%1 Set servo %2 pin %3 angle %4",
  "STAMP_IO_READ_ADC8_PIN": "%1 Get ADC 8bit %2 pin %3",
  "STAMP_IO_READ_ADC12_PIN": "%1 Get ADC 12bit %2 pin %3",
  "STAMP_IO_READ_SERVO_ANGLE_PIN": "%1 Get servo angle %2 pin %3",
  "STAMP_IO_WRITE_SERVO_PULSE": "%1 Set servo %2 pin %3 pulse %4",
  "STAMP_IO_READ_SERVO_PULSE_PIN": "%1 Get servo pulse %2 pin %3",
  "STAMP_IO_WRITE_RGB_LED_PIN": "%1 Set RGB LED %2 pin %3 R %4 G %5 B %6",
  "STAMP_IO_READ_RGB_LED_PIN": "%1 Get RGB LED %2 pin %3",
  "STAMP_IO_READ_STATUS": "%1 Get %2 status %3",
  "STAMP_IO_SET_I2C_ADDRESS": "%1 Set I2C %2 address %3",
  "STAMP_IO_INIT_I2C_ADDRESS": "%1 Init I2C %2 address %3",
  "KMETER_INIT_I2C": "%1 Init device I2C %2 address %3",
  "KMETER_GET_FW_VERSION": "%1 Get device firmware version",
  "KMETER_GET_I2C_ADDRESS": "%1 Get device I2C slave address",
  "KMETER_GET_SLEEP_TIME": "%1 Get device sleep time ( S )",
  "KMETER_SET_I2C_ADDRESS": "%1 Set device I2C slave %2 address %3",
  "KMETER_SET_SLEEP_TIME": "%1 Set device sleep %2 time %3 ( S )",
  "KMETER_SET_WAKE_UP_MODE": "%1 Set device wake up %2 mode %3",
  "HAT_SPK2": "SPK2",
  "HAT_SPK2_PLAY_WAV_DROPDOWN": "%1 %2 ローカルWAVファイル %3 を音量 %4 で鳴らす",
  "HAT_SPK2_PLAY_WAV_RATE": "%1 %2 ローカルWAVファイル %3 をサンプルレート %4 データ形式 %5 チャンネル %6 音量 %7 で鳴らす",
  "HAT_SPK2_PLAY_CLOUD_WAV": "%1 %2 クラウドWAVファイル(URL) %3 を音量 %4 で鳴らす",
  "HAT_SPK2_PLAY_SING": "%1 %2 トーン %3 を %4 拍、音量 %5 で鳴らす",
  "HAT_SPK2_PLAY_TONE": "%1 %2 周波数 %3 を %4 拍、音量 %5 で鳴らす",
  "UNIT_GLASS": "Glass",
  "UNIT_GLASS_DRAW_TEXT": "%1 Draw %2 text %3 x %4 y %5 fonsize %6 invert %7",
  "UNIT_GLASS_DRAW_PIXEL": "%1 Draw pixel %2 x %3 y %4 invert %5",
  "UNIT_GLASS_DRAW_LINE": "%1 Draw line %2 x1 %3 y1 %4 x2 %5 y2 %6 invert %7",
  "UNIT_GLASS_DRAW_CIRCLE": "%1 Draw circle %2 x %3 y %4 radius %5 invert %6",
  "UNIT_GLASS_DISP_INVERT": "%1 Display %2 show %3 flip %4",
  "UNIT_GLASS_DISP_CTRL": "%1 Display screen %2 control %3",
  "UNIT_GLASS_COLOUR_REVERSE": "%1 Display screen %2 colour %3",
  "UNIT_GLASS_DISP_SHOW": "%1 Screen show on",
  "UNIT_GLASS_DISP_CLEAR": "%1 Screen clear",
  "UNIT_GLASS_BUZZER_FREQ": "%1 Set buzzer %2 frequency %3 duty cycle %4",
  "UNIT_GLASS_BUZZER_CTRL": "%1 Buzzer %2 control %3",
  "UNIT_GLASS_GET_BUTTON_STATUS": "%1 Get %2 button %3 status",
  "UNIT_GLASS_GET_FW_VERSION": "%1 Get firmware version",
  "SPEAKER_SING_VOLUME": "%1 Play tone %2 for %3 beat volume %4",
  "SPEAKER_PLAY_WAV_FILE": "Play %1 WAV file %2 volume %3",
  "SPEAKER_PLAY_WAV_DROPDOWN": "Play local WAV file %1 volume %2",
  "SPEAKER_PLAY_TONE": "Play tone frequency %1 beat %2 volume %3",
  "UNIT_COLOR_SET_GAIN": "%1 ゲインの値を %2 に設定",
  "UNIT_COLOR_SET_INTEGRATION_TIME": "%1 integration timeを %2 に設定",
  "AMETER_SET_GAIN": "%1 Set max input current range %2 A",
  "VMETER_SET_GAIN2": "%1 Set max input voltage range %2 V",
  "STAMP_CATM": "CatM",
  "STAMP_CATM_UART_INIT": "%1 Init core uart Tx %2 Rx %3 baudrate %4 databits %5 stopbits %6 parity %7 port id %8",
  "UNIT_KMETERISO": "KMeterISO",
  "UNIT_KMETERISO_GET_THERMO_TEMP": "%1 Get thermocouple temperature %2",
  "UNIT_KMETERISO_GET_INTERNAL_TEMP": "%1 Get internal temperature %2",
  "UNTI_KMETERISO_GET_ISREADY": "%1 Is ready temperature measurement",
  "UNIT_KMETERISO_GET_STR_THERMO_TEMP": "%1 Get string thermocouple temperature %2",
  "UNIT_KMETERISO_GET_STR_INTERNAL_TEMP": "%1 Get string internal temperature %2",
  "UNIT_RF433T": "RF433T",
  "UNIT_RF433T_TRANSMIT": "%1 Transmit raw data list %2 repeat %3",
  "UNIT_RF433R": "RF433R",
  "UNIT_RF433R_START_RECEIVE": "%1 Start receiver",
  "UNIT_RF433R_STOP_RECEIVE": "%1 Stop receiver",
  "UNIT_RF433R_BUFFER_LENGTH": "%1 Length of receiver buffer",
  "UNIT_RF433R_RECEIVER_DATA_BUFFER": "%1 Receiver data buffer",
  "UNIT_RF433R_CLEAR_BUFFER": "%1 Clear data buffer",
  "MODULE_DUALKMETER": "DualKMeter",
  "MODULE_DUALKMETER_INIT_I2C": "Init device I2C %1 address %2",
  "MODULE_DUALKMETER_GET_FW_VERSION": "Get device firmware version",
  "MODULE_DUALKMETER_GET_I2C_ADDRESS": "Get device I2C slave address",
  "MODULE_DUALKMETER_SET_I2C_ADDRESS": "Set device I2C slave %1 address %2",
  "MODULE_DUALKMETER_GET_THERMO_TEMP": "Get thermocouple temperature %1",
  "MODULE_DUALKMETER_GET_INTERNAL_TEMP": "Get internal temperature %1",
  "MODULE_DUALKMETER_GET_ISREADY": "Is ready temperature measurement",
  "MODULE_DUALKMETER_GET_STR_THERMO_TEMP": "Get string thermocouple temperature %1",
  "MODULE_DUALKMETER_GET_STR_INTERNAL_TEMP": "Get string internal temperature %1",
  "MODULE_DUALKMETER_SET_CHANNEL": "Set kmeter %1 channel %2",
  "MODULE_DUALKMETER_GET_CHANNEL": "Get selected kmeter channel",
  "HAT_ADC_RAW_VALUE": "%1 Read raw value",
  "MODULE_DMX": "DMX",
  "MODULE_DMX_INIT": "DMX init %1 Tx %2 Rx %3 En %4 mode %5",
  "MODULE_DMX_WRITE_DATA": "DMX write byte %1 channel %2 data %3",
  "MODULE_DMX_CLEAR_BUFFER": "DMX clear data buffer",
  "MODULE_DMX_DEINIT": "DMX deinit",
  "MODULE_DMX_READ_DATA": "DMX read byte %1 channel %2",
  "FADER_MULTI_SET_COLOR": "%1 %2 の %3 %4 番目のLEDの色を %5 に設定",
  "FADER_MULTI_SET_COLOR_FROM": "%1 %2 の %3 から %4 %5 番目のLEDの色を %6 に設定",
  "FADER_MULTI_SET_COLOR_ALL": "%1 %2 %3 の全てのLEDの色を %4 に設定",
  "FADER_MULTI_SET_COLOR_FROM_RGB": "%1 %2 の %3 から %4 番目のLEDの色を 赤 %5 緑 %6 青 %7 に設定",
  "WLAN_CONFIG_AP": "アクセスポイントをSSID %1 PASSWORD %2 認証方式 %3 に設定する",
  "GPS_GET_DATE": "Get date (return string)",
  "UNIT_GPS_GET_DATE": "get %1 date",
  "MODULE_RS232": "RS232",
  "MODULE_RS232M": "RS232M",
  "MODULE_RS232F": "RS232F",
  "MODULE_HMI": "HMI",
  "MODULE_HMI_INIT": "Init I2C %1 address %2",
  "MODULE_HMI_GET_COUNTER": "Get counter value",
  "MODULE_HMI_GET_INCREMENT": "Get increment value",
  "MODULE_HMI_GET_BUTTON_STATUS": "Get button %1 status",
  "MODULE_HMI_GET_DEVICE_STATUS": "Get device FW version",
  "MODULE_HMI_SET_COUNTER": "Set counter %1 value %2",
  "MODULE_HMI_RESET_COUNTER": "Reset counter value",
  "MODULE_HMI_SET_LED": "Set %1 LED %2 state %3",
  "MODULE_HMI_SET_I2C_ADDRESS": "Set device I2C %1 address %2",
  "UNIT_HBRIDGE": "Hbridge",
  "UNIT_HBRIDGE_INIT": "%1 Init device I2C %2 address %3",
  "UNIT_HBRIDGE_GET_DRIVER_CONFIG": "%1 Get configure value %2",
  "UNIT_HBRIDGE_GET_ADC_VALUE": "%1 Get %2 value resolution %3",
  "UNIT_HBRIDGE_GET_DEVICE_STATUS": "%1 Get FW version",
  "UNIT_HBRIDGE_SET_DIRECTION": "%1 Set %2 direction %3",
  "UNIT_HBRIDGE_SET_8BIT_PWM": "%1 Set pwm duty cycle 8bit %2 value %3",
  "UNIT_HBRIDGE_SET_16BIT_PWM": "%1 Set pwm duty cycle 16bit %2 value %3",
  "UNIT_HBRIDGE_SET_PWM_FREQ": "%1 Set pwm %2 frequency %3",
  "MODULE_RS232_INIT": "%1 Init UART id %2 TX %3 RX %4 baudrate %5 data bits %6 stop bits %7 parity %8",
  "MODULE_RS232_READ": "%1 Read all bytes",
  "MODULE_RS232_READ_CHARACTERS": "%1 Read %2 characters",
  "MODULE_RS232_READLINE": "%1 Read bytes a line",
  "MODULE_RS232_READANY": "%1 Remain cache",
  "MODULE_RS232_RS485_WRITE": "%1 Write text %2",
  "MODULE_RS232_WRITE_LINE": "%1 Write text a line %2",
  "MODULE_RS232_WRITE_RAW_DATA": "%1 Write raw data list %2",
  "UNIT_CAN": "CAN",
  "UNIT_CAN_INIT": " %1 Init bus %2 extframe %3 mode %4 baudrate %5 TX %6 RX %7",
  "UNIT_CAN_SET_FILTER": " %1 Set filter bank %2 mode %3 message %4",
  "UNIT_CAN_SEND": "%1 Send message %2 with id %3",
  "UNIT_CAN_RECV": "%1 Receive message",
  "UNIT_CAN_GET_REMOTEID": "%1 Get remote ID",
  "UNIT_CAN_RESTART": "%1 Restart",
  "UNIT_CAN_CLEARFILTER": "%1 Clear filter",
  "UNIT_CAN_CLEAR_TX_QUEUE": "%1 Clear TX queue",
  "UNIT_CAN_CLEAR_RX_QUEUE": "%1 Clear RX queue",
  "UNIT_CAN_STATE": "%1 Get state of the controller",
  "UNIT_CAN_ANY": "%1 If any message waiting on the FIFO %2 (return True or False)",
  "UNIT_CAN_DEINIT": "%1 Deinit",
  "ATOM_CAN": "CAN",
  "ATOM_CAN_INIT": " Init bus %1 extframe %2 mode %3 baudrate %4 TX %5 RX %6",
  "ATOM_CAN_SET_FILTER": " Set filter bank %1 mode %2 message %3",
  "ATOM_CAN_SEND": "Send message %1 with id %2",
  "ATOM_CAN_RECV": "Receive message",
  "ATOM_CAN_GET_REMOTEID": "Get remote ID",
  "ATOM_CAN_RESTART": "Restart",
  "ATOM_CAN_CLEARFILTER": "Clear filter",
  "ATOM_CAN_CLEAR_TX_QUEUE": "Clear TX queue",
  "ATOM_CAN_CLEAR_RX_QUEUE": "Clear RX queue",
  "ATOM_CAN_STATE": "Get state of the controller",
  "ATOM_CAN_ANY": "If any message waiting on the FIFO",
  "ATOM_CAN_DEINIT": "Deinit",
  "UNIT_DCSSR": "DCSSR",
  "UNIT_DCSSR_GET_I2C_STATUS": "%1 Get I2C FW version",
  "UNIT_DCSSR_GET_MODBUS_STATUS": "%1 Get modbus FW version",
  "DISPLAY_MODULE_SCREEN_SET_BGCOLOR": "Display module Set Screen backgroundColor %1",
  "DISPLAY_MODULE_SCREEN_SET_BGCOLOR_RGB": "Display module Set Screen backgroundColor R %1 G %2 B %3",
  "DISPLAY_MODULE_SCREEN_SET_ROTATION": "Display module Set screen rotate mode %1",
  "LABELPLUS": "Label+",
  "LABELPLUS_SET_DATASOURCE_TEXT": "%1 データソースをURL %2 タイマー %3 時間感覚(ms) %4 に設定",
  "url": "データの場所(URL)",
  "update": "自動更新",
  "jsonKey": "JSONキー",
  "errorText": "エラーメッセージ",
  "errorTextColor": "エラーメッセージの色",
  "LABELPLUS_SET_UPDATE": "%1 更新有効状態を %2 に設定",
  "LABELPLUS_SET_INTERNVAL": "%1 更新間隔を %2 に設定",
  "LABELPLUS_IS_VALID_DATA": "%1 有効なデータか?",
  "LABELPLUS_GET_DISPLAY_DATA": "%1 表示するデータを取得",
  "MODBUS_MASTER_READ_COILS_TIMEOUT": "Read coils slave address %1 starting address %2 coil qty %3 timeout %4",
  "MODBUS_MASTER_READ_DISCRETE_INPUTS_TIMEOUT": "Read discrete inputs slave address %1 starting address %2 input qty %3 timeout %4",
  "MODBUS_MASTER_READ_HOLDING_REGISTERS_TIMEOUT": "Read holding registers slave address %1 starting address %2 register qty %3 signed %4 timeout %5",
  "MODBUS_MASTER_READ_INPUT_REGISTERS_TIMEOUT": "Read input registers slave address %1 starting address %2 register qty %3 signed %4 timeout %5",
  "MODBUS_MASTER_WRITE_SINGLE_COIL_TIMEOUT": "Write single coil slave address %1 output address %2 output %3 timeout %4",
  "MODBUS_MASTER_WRITE_SINGLE_REGISTER_TIMEOUT": "Write single register slave address %1 register address %2 register value %3 signed %4 timeout %5",
  "MODBUS_MASTER_WRITE_MULTIPLE_COILS_TIMEOUT": "Write multiple coils slave address %1 starting address %2 output value %3 timeout %4",
  "MODBUS_MASTER_WRITE_MULTIPLE_REGISTERS_TIMEOUT": "Write multiple register slave address %1 starting address %2 register value %3 signed %4 timeout %5",
  "UNIT_EXTENCODER": "ExtEncoder",
  "UNIT_EXTENCODER_INIT": "%1 Init device I2C address %2",
  "UNIT_EXTENCODER_GET_ENCODER_VALUE": "%1 Get encoder pulse count value",
  "UNIT_EXTENCODER_GET_METER_VALUE": "%1 Get meter pulse count value",
  "UNIT_EXTENCODER_GET_STR_METER_VALUE": "%1 Get string meter pulse count value",
  "UNIT_EXTENCODER_GET_PERIMETER_VALUE": "%1 Get perimeter value",
  "UNIT_EXTENCODER_GET_PULSE_VALUE": "%1 Get pulse per cycle value",
  "UNIT_EXTENCODER_GET_ZERO_COUNTER_VALUE": "%1 Get zero pulse count value",
  "UNIT_EXTENCODER_GET_Z_TRIGGER_MODE": "%1 Get Z trigger mode",
  "UNIT_EXTENCODER_GET_DEVICE_FIRMWARE": "%1 Get device firmware version",
  "UNIT_EXTENCODER_RESET_ENCODER": "%1 Reset encoder and meter count value",
  "UNIT_EXTENCODER_SET_PERIMETER_VALUE": "%1 Set perimeter value %2",
  "UNIT_EXTENCODER_SET_PULSE_VALUE": "%1 Set pulse per cycle value %2",
  "UNIT_EXTENCODER_SET_ZERO_COUNTER_VALUE": "%1 Set zero pulse pulse count value %2",
  "UNIT_EXTENCODER_SET_Z_TRIGGER_MODE": "%1 Set clear count Z trigger mode %2",
  "UNIT_EXTENCODER_SET_I2C_ADDRESS": "%1 Set device I2C slave address %2",
  "STAMP_IO_WRITE_PWM_DUTY": "%1 Set pwm %2 pin %3 duty cycle %4 %",
  "UNIT_AIN420MA": "AIN4-20mA",
  "UNIT_AIN420MA_INIT": "%1 Init device I2C address %2",
  "UNIT_AIN420MA_GET_ADC_RAW16_VALUE": "%1 Get ADC 16bit raw value",
  "UNIT_AIN420MA_GET_CURRENT_VALUE": "%1 Get current value",
  "UNIT_AIN420MA_GET_FIRMWARE_VERSION": "%1 Get device firmware version",
  "UNIT_AIN420MA_SET_I2C_ADDRESS": "%1 Set device I2C slave address %2",
  "MODULE_AIN420MA": "AIN4-20mA",
  "MODULE_AIN420MA_INIT": "Init device I2C address %1",
  "MODULE_AIN420MA_GET_ADC_RAW16_VALUE": "Get ADC 16bit raw value channel %1",
  "MODULE_AIN420MA_GET_CURRENT_VALUE": "Get current value channel %1",
  "MODULE_AIN420MA_GET_FIRMWARE_VERSION": "Get device firmware version",
  "MODULE_AIN420MA_SET_I2C_ADDRESS": "Set device I2C slave address %1",
  "UNIT_IMU_GET_X": "%1 X",
  "UNIT_IMU_GET_Y": "%1 Y",
  "UNIT_IMU_ACC_FULLSCALE_RANGE": "%1 加速度計のフルスケールレンジを %2 に設定",
  "UNIT_IMU_GYRO_FULLSCALE_RANGE": "%1 ジャイロのフルスケールレンジを %2 に設定",
  "UNIT_IMU_SET_ACC_UNIT": "%1 加速度計の出力単位を %2 に設定",
  "UNIT_IMU_SET_GYRO_UNIT": "%1 Set ジャイロの出力単位を %2 に設定",
  "UNIT_IMU_GYRO_CALIBRATE": "%1 ジャイロの自動キャリブレーションをサンプル数 %2 時間間隔 %3 ms に設定",
  "UNIT_IMU_SET_GYRO_OFFSET": "%1 ジャイロの手動キャリブレーションを x %2 y %3 z %4 に設定",
  "UNIT_NECO": "Neco",
  "UNIT_NECO_SET_COLOR": "%1 の %2 番目のLEDの色を %3 に設定",
  "UNIT_NECO_SET_COLOR_FROM": "%1 の %2 から %3 番目のLEDの色を %4 に設定",
  "UNIT_NECO_SET_COLOR_ALL": "%1 の全てのLEDの色を %2 に設定",
  "UNIT_NECO_SET_RANDOM_COLOR": "%1 の %2 番目のLEDをランダムな色に設定",
  "UNIT_NECO_SET_ONE_RANDOM_COLOR_FROM": "%1 の %2 から %3 番目をランダムに決めた同じ色に設定",
  "UNIT_NECO_SET_RANDOM_COLOR_FROM": "%1 の %2 から %3 番目のLEDをランダムな色に設定",
  "UNIT_NECO_SET_ONE_RANDOM_COLOR_ALL": "%1 の全てのLEDをランダムに決めた同じ色に設定",
  "UNIT_NECO_SET_RANDOM_COLOR_ALL": "%1 の全てのLEDをランダムな色に設定",
  "UNIT_NECO_SET_BRIGHTNESS": "%1 %2 の明るさを %3 に設定",
  "UNIT_NECO_BUTTON_CALLBACK": "%1 のボタンが %2 の時",
  "UNIT_NECO_BUTTON_STATE": "%1 のボタンの状態 %2",
  "UNIT_GPS_UART_INIT": "Set %1 core uart ID num %2",
  "GPS_UART_INIT": "Set core uart ID num %1",
  "GPS_GET_LATITUDE_DECIMAL": "Get latitude decimal (return float: dd.dddd)",
  "GPS_GET_LONGITUDE_DECIMAL": "Get longitude decimal (return float: dd.dddd)",
  "GPS_GET_ALTITUDE": "Get altitude (meter, return string)",
  "M5ESPNOW_SEND_DATA": "EspNow %1 ID %2 (1 ~ 10) データ %3 で送る",
  "M5ESPNOW_BROADCAST_DATA": "EspNow %1 データ %2 をブロードキャストで送る",
  "UNIT_ACMEASURE": "AC Measure",
  "UNIT_ACMEASURE_INIT": "%1 Init device I2C address %2",
  "UNIT_ACMEASURE_GET_VOLTAGE": "%1 Get voltage (string)",
  "UNIT_ACMEASURE_GET_CURRENT": "%1 Get current (string)",
  "UNIT_ACMEASURE_GET_ACTIVE_POWER": "%1 Get active power (string)",
  "UNIT_ACMEASURE_GET_APPARENT_POWER": "%1 Get apparent power (string)",
  "UNIT_ACMEASURE_GET_POWER_FACTOR": "%1 Get power factor (string)",
  "UNIT_ACMEASURE_GET_KWH": "%1 Get KW/H (string)",
  "UNIT_ACMEASURE_GET_VOLTAGE_RAW": "%1 Get voltage raw value",
  "UNIT_ACMEASURE_GET_CURRENT_RAW": "%1 Get current raw value",
  "UNIT_ACMEASURE_GET_ACTIVE_POWER_RAW": "%1 Get active power raw value",
  "UNIT_ACMEASURE_GET_APPARENT_POWER_RAW": "%1 Get apparent power raw value",
  "UNIT_ACMEASURE_GET_POWER_FACTOR_RAW": "%1 Get power factor raw value",
  "UNIT_ACMEASURE_GET_KWH_RAW": "%1 Get KW/H raw value",
  "UNIT_ACMEASURE_GET_VOLTAGE_COEFFICIENT": "%1 Get voltage coefficient",
  "UNIT_ACMEASURE_GET_CURRENT_COEFFICIENT": "%1 Get current coefficient",
  "UNIT_ACMEASURE_DATA_READY": "%1 Is data ready",
  "UNIT_ACMEASURE_GET_FW": "%1 Get device firmware version",
  "UNIT_ACMEASURE_SET_KWH_RAW": "%1 Set KW/H raw value %2 (float)",
  "UNIT_ACMEASURE_SET_VOLTAGE_COEFFICIENT": "%1 Set voltage coefficient value (0 ~ 255) %2",
  "UNIT_ACMEASURE_SET_CURRENT_COEFFICIENT": "%1 Set current coefficient value (0 ~ 255) %2",
  "UNIT_ACMEASURE_SET_SAVE_COEFF": "%1 Save voltage & current coefficient in flash",
  "UNIT_ACMEASURE_SET_JUMP_BOOTLOADER": "%1 Set jump to bootloader",
  "UNIT_ACMEASURE_SET_I2C_ADDRESS": "%1 Set device I2C address %2",
  "ROBOCAR_UPDATE_LINE_SENSOR": "Update two-channel line follower in loop %1 sensor pin %2",
  "ROBOCAR_UPDATE_MULTI_LINE_SENSOR": "Update multi-channel line follower in loop %1 sensor pin %2 type %3",
  "ROBOCAR_GET_ULTRASONIC_DISTANCE": "Get RGB ultrasonic target distance value pin %1 mode %2 (return float)",
  "ROBOCAR_SET_ULTRASONIC_LED": "Set RGB ultrasonic LED index %1 (1 ~ 6) color %2 brightness %3 (0 ~ 100) %",
  "ROBOCAR_SET_ULTRASONIC_LED_PIN": "Set RGB ultrasonic LED pin %1",
  "ROBOCAR_SET_ULTRASONIC_LED_FROM": "Set RGB ultrasonic LED from %1 to %2 (1 ~ 6) color %3 brightness %4 (0 ~ 100) %",
  "ROBOCAR_SET_ULTRASONIC_LED_ALL": "Set RGB ultrasonic LED all color %1 brightness %2 (0 ~ 100) %",
  "MODULE_RELAY4": "4Relay",
  "MODULE_RELAY4_GET_STATUS": "Get %1 relay %2  (1 ~ 4) status (return 0 or 1)",
  "MODULE_RELAY4_SET_STATE": "Set %1 relay %2 (1 ~ 4) state %3",
  "MODULE_RELAY4_SET_ALL_RELAY_STATE": "Set %1 all relay state %2",
  "SPI": "SPI",
  "SPI_INIT": "Init %1 %2 baudrate %3 SCK %4 MISO %5 MOSI %6 firstbit %7 mode %8",
  "SPI_DEINIT": "%1 Deinit",
  "SPI_READINTO": "%1 Read into buf %2",
  "SPI_READ": "%1 Read nbytes %2 (return bytes)",
  "SPI_WRITE": "%1 Write buf %2",
  "SPI_WRITE_READINTO": "%1 Write buf %2 read buf %3",
  "BYTE_ARRAY": "Bytearray",
  "BYTE_ARRAY_CREATE_EMPTY": "空のbytearrayを長さ %1 で作成",
  "BYTE_ARRAY_APPEND": "Bytearray %1 に %2 を追加",
  "BYTE_ARRAY_EXTEND": "Bytearray %1 を %2 で拡張",
  "BYTE_ARRAY_DECODE": "Bytearray %1 decode %2",
  "IMAGEPLUS": "Image+",
  "IMAGEPLUS_SET_UPDATE": "%1 更新の状態を %2 に設定",
  "IMAGEPLUS_SET_INTERVAL": "%1 更新間隔を %2 に設定",
  "IMAGEPLUS_SET_POSITION": "%1 の位置をx %2 y %3 に移動",
  "IMAGEPLUS_SET_DISPLAY": "%1 を %2",
  "IMAGEPLUS_IS_VALID": "%1 が有効なデータか?",
  "UNIT_CATCH": "Catch",
  "UNIT_CATCH_WRITE_ANGLE": "%1 Set %2 degree turn",
  "UNIT_CATCH_WRITE_US": "%1 Set %2 μs pulse",
  "UNIT_MINIOLED": "Mini OLED",
  "UNIT_MINIOLED_FILL": "%1 %2 で塗りつぶし",
  "UNIT_MINIOLED_PIXEL": "%1 x: %2 y: %3 色: %4 で点を描画",
  "UNIT_MINIOLED_FILL_RECT": "%1 x: %2 y: %3 w: %4 h: %5 color: %6 で塗りつぶした四角を描画",
  "UNIT_MINIOLED_LINE": "%1 x1: %2 y1: %3 x2: %4 y2: %5 色: %6 で線を描画",
  "UNIT_MINIOLED_HLINE": "%1 x: %2 y: %3 w: %4 色: %5 で水平線を描画",
  "UNIT_MINIOLED_VLINE": "%1 x: %2 y: %3 h: %4 色: %5 で垂直線を描画",
  "UNIT_MINIOLED_RECT": "%1 x: %2 y: %3 w: %4 h: %5 色: %6 で四角を描画",
  "UNIT_MINIOLED_TEXT": "%1 テキスト %2 を x: %3 y: %4 色: %5 で描画",
  "UNIT_MINIOLED_DISPLAY_POWER": "%1 画面の電源を %2",
  "UNIT_MINIOLED_DISPLAY_BRIGHTNESS": "%1 明るさ %2 で画面を表示",
  "UNIT_MINIOLED_DISPLAY_COLOR": "%1 色モード %2 で画面を表示",
  "UNIT_MINIOLED_DISPLAY_SHOW": "%1 画面を表示",
  "UNIT_MINIOLED_DISPLAY_SCROLL": "%1 画面をX方向に %2 、Y方向に %3 スクロール",
  "UNIT_SERVOS8": "8Servos",
  "UNIT_SERVOS8_GET_CONFIG_MODE": "%1 チャンネル %2 の設定モードを(intで)取得",
  "UNIT_SERVOS8_SET_CONFIG_MODE": "%1 チャンネル %2 モードを %3 に設定",
  "UNIT_SERVOS8_READ_DIGITAL_INPUT_PIN": "%1 チャンネル %2 のデジタル入力を(TrueかFalseで)取得",
  "UNIT_SERVOS8_WRITE_DIGITAL_OUTPUT_PIN": "%1 チャンネル %2 のデジタル出力レベルを %3 に設定",
  "UNIT_SERVOS8_WRITE_SERVO_ANGLE": "%1 チャンネル %2 のサーボの角度を %3 に設定",
  "UNIT_SERVOS8_READ_ADC8_PIN": "%1 チャンネル %2 のADCの値を(intで)8bitで取得",
  "UNIT_SERVOS8_READ_ADC12_PIN": "%1 チャンネル %2 ADCの値を(intで)12bitで取得",
  "UNIT_SERVOS8_READ_SERVO_ANGLE_PIN": "%1 チャンネル %2 のサーボの角度を(intで)取得",
  "UNIT_SERVOS8_WRITE_SERVO_PULSE": "%1 チャンネル %2 のサーボのパルス幅を %3 に設定",
  "UNIT_SERVOS8_READ_SERVO_PULSE_PIN": "%1 チャンネル %2 のサーボのパルス幅を(intで)取得",
  "UNIT_SERVOS8_WRITE_RGB_LED_PIN": "%1 チャンネル %2 のRGB LEDの色を %3 に設定",
  "UNIT_SERVOS8_READ_RGB_LED_PIN": "%1 チャンネル %2 のRGB LEDの色を(リストで)取得",
  "UNIT_SERVOS8_READ_STATUS": "%1 ファームウェアのバージョンを取得",
  "UNIT_SERVOS8_SET_I2C_ADDRESS": "%1 I2Cアドレスを %2 に設定",
  "UNIT_SERVOS8_INIT_I2C_ADDRESS": "%1 I2Cアドレスを %2 で初期化",
  "UNIT_SERVOS8_WRITE_PWM_DUTY": "%1 チャンネル %2 のPWMのデューティ比を %3 %に設定",
  "UNIT_SERVOS8_READ_SERVO_CURRENT": "%1 サーボの電流を(floatで)取得",
  "JSON_GET_KEY_VALUE": "Get JSON  %1 key %2 value",
  "JSON_GET_KEYS": "Get JSON  %1 keys (return list)",
  "JSON_GET_VALUES": "Get JSON %1 values (return list)",
  "JSON_GET_KEYS_LEN": "Get JSON %1 keys length",
  "JSON_SET_KEY_VALUE": "JSON %1 set value %2 of key %3",
  "JSON_ADD_KEY_VALUE": "JSON %1 add item key %2 value %3",
  "JSON_DEL_KEY": "JSON %1 delete item key %2",
  "JSON_CREATE": "Create JSON (string)",
  "UNIT_HBRIDGE_GET_CURRENT": "%1 Get vin current (float) in amps",
  "UNIT_ENV4": "ENV IV",
  "UNIT_ENV4_GET_MODE": "Get %1 mode",
  "UNIT_ENV4_SET_MODE": "%1 Set mode %2",
  "NTP_INIT_TIMEZONE": "Init ntptime with host %1 and timezone %2 hours %3 minutes ",
  "NTP_INIT_TIMEZONE_DROPDOWN": "Init ntptime with host %1 and timezone %2 hours %3 minutes ",
  "UNIT_UWB_UART_INIT": "Set %1 core uart ID num %2 (1 ~ 2)",
  "UNIT_UWB_CHECK_DEVICE": "Check %1 device available (return True of False)",
  "UNIT_UWB_GET_DEVICE_ID": "Get %1 device ID (return string)",
  "UNIT_UWB_GET_DISTANCE_MEASURE": "Get %1 distance (in Meter) to anchor ID %2 (return float)",
  "UNIT_UWB_UPDATE_VALUE_LOOP": "%1 Updated new distance value (in use loop)",
  "UNIT_UWB_CONTINUOUS_VALUE_OUTPUT": "%1 Continuous value output %2",
  "UNIT_UWB_INIT": "Init %1 as",
  "UNIT_UWB_INIT_WITH_ID": "with ID",
  "UNIT_ENVPRO": "ENV Pro",
  "UNIT_ENVPRO_GET_TEMPERATURE": "%1 温度(°C)を(floatで)取得",
  "UNIT_ENVPRO_GET_PRESSURE": "%1 気圧(hPa)を(floatで)取得",
  "UNIT_ENVPRO_GET_HUMIDITY": "%1 湿度(%)を(floatで)取得",
  "UNIT_ENVPRO_GET_GAS_RESISTANCE": "%1 ガス抵抗(kΩ)を(floatで)取得",
  "UNIT_ENVPRO_GET_OVER_SAMPLING_RATE": "%1 %2 のオーバーサンプリングレートを(intで)取得",
  "UNIT_ENVPRO_GET_IIR_FILTER_COEFFICIENT": "%1 IIRフィルタ係数を(intで)取得",
  "UNIT_ENVPRO_GET_ALTITUDE": "%1 標高(m)を(floatで)取得",
  "UNIT_ENVPRO_SET_IIR_FILTER_COEFFICIENT": "%1 IIRフィルタ係数を %2 (0 ~ 127)に設定",
  "UNIT_ENVPRO_SET_OVER_SAMPLING_RATE": "%1 %2 のオーバーサンプリングレートを %3 (1 ~ 16)に設定",
  "UNIT_ENVPRO_UPDATE_DATA": "%1 データを更新(main loop用)",
  "MODULE_RELAY4_INIT_I2C_ADDRESS": "Init %1 device I2C address %2 (0x01 ~ 0x7f)",
  "MODULE_RELAY4_SET_I2C_ADDRESS": "Set %1 device I2C slave address %2 (0x01 ~ 0x7f)",
  "MODULE_RELAY4_GET_8BIT_VOLTAGE_VALUE": "Get %1 ADC 8bit voltage value (V, return 0 ~ 26)",
  "MODULE_RELAY4_GET_8BIT_RAW_VALUE": "Get %1 ADC 8bit raw value (return 0 ~ 255)",
  "MODULE_RELAY4_GET_12BIT_VOLTAGE_VALUE": "Get %1 ADC 12bit voltage value (V, return 0 ~ 26)",
  "MODULE_RELAY4_GET_12BIT_RAW_VALUE": "Get %1 ADC 12bit raw value (return 0 ~ 4095)",
  "PM25_SHT20_GET_TEMPERATURE": "PM2.5 (SHT20) %1 get temperature value (℃, return float)",
  "PM25_SHT20_GET_HUMIDITY": "PM2.5 (SHT20) %1 get humidity value (%RH, return float)",
  "PM25SHT30_GET_PM_FACTORY": "%1 PM2.5 (SHT30) get %2 value in %3 (μg/m³, return int)",
  "PM25SHT30_GET_NUM_ABOVE": "%1 PM2.5 (SHT30) get number of particles above %2 μm (in 0.1L of air) (return int)",
  "M5ESPNOW_DEINIT": "EspNow deinit",
  "M5_TEXT_BYTESTR_TO_HEXSTR": "Byte string %1 to hex string",
  "M5_TEXT_HEXSTR_TO_BYTESTR": "Hex string %1 to byte string",
  "M5ESPNOW_ENABLE_SEND_CB": "EspNow 送信コールバックを有効化",
  "M5ESPNOW_ENABLE_RECV_CB": "EspNow 受信コールバックを有効化",
  "MODULE_GNSS": "GNSS",
  "MODULE_GNSS_INIT_IMU": "Init IMU device I2C address %1 (0x68 ~ 0x69)",
  "MODULE_GNSS_GET_ACCEL": "Get accelerometer data direction %1 (m/s2, return float)",
  "MODULE_GNSS_GET_ACCEL_RAW": "Get accelerometer raw data direction %1 (return int)",
  "MODULE_GNSS_GET_GYRO": "Get gyroscope data direction %1 (deg/s, return float)",
  "MODULE_GNSS_GET_GYRO_RAW": "Get gyroscope raw data direction %1 (return int)",
  "MODULE_GNSS_GET_MAGNETO": "Get magnetometer magnetic field strength %1 direction %2 (uT, return float)",
  "MODULE_GNSS_GET_MAGNETO_RAW": "Get magnetometer raw data direction %1 (return int)",
  "MODULE_GNSS_GET_TEMP": "Get temperature (°C, return float)",
  "MODULE_GNSS_GET_PRESSURE": "Get pressure (hPa, return float)",
  "MODULE_GNSS_SET_MODE_BMI": "Set bmi270 to %1 mode",
  "MODULE_GNSS_SET_ACCEL_RANGE": "Set accelerometer range %1",
  "MODULE_GNSS_SET_GYRO_RANGE": "Set gyroscope range %1",
  "MODULE_GNSS_SET_ACCEL_ODR": "Set accelerometer output data rate %1",
  "MODULE_GNSS_SET_GYRO_ODR": "Set gyroscope output data rate %1",
  "MODULE_GNSS_SET_MAGNETO_ODR": "Set magnetometer output data rate %1",
  "MODULE_GNSS_INIT": "Init GNSS %1 UART %2 Tx pin %3 Rx pin %4 Baud rate %5 Bits %6 Parity %7 Stop bits %8",
  "MODULE_GNSS_SET_TIME_ZONE": "Set timezone %1 hours %2 minutes",
  "API_SERVER": "サーバー :",
  "ROBOCAR_LEGO_MOTOR_INIT": "Init DC motor module",
  "MODULE_LAN": "LAN",
  "MODULE_LAN_INIT": "Init LAN module %1 sclk %2 mosi %3 miso %4 cs %5 rst %6 irq %7",
  "MODULE_LAN_CONFIG": "Config TCP/UDP LAN %1 socket type %2 port (0 ~ 65535) %3",
  "MODULE_LAN_CONFIG_MACHINE": "machine type",
  "MODULE_LAN_CONFIG_IP": "remote ip",
  "MODULE_LAN_TCP_SEND_PACKET": "TCP send packet %1",
  "MODULE_LAN_TCP_RECEIVE_PACKET": "TCP receive packet size %1 (0 ~ 2048)",
  "MODULE_LAN_UDP_SEND_PACKET": "UDP send packet IP %1 port %2 payload %3",
  "MODULE_LAN_UDP_RECEIVE_PACKET": "UDP receive packet size %1 (0 ~ 2048)",
  "MODULE_LAN_AVAILABLE_PACKET": "Available amount of packet %1 (return int)",
  "MODULE_LAN_LOCAL_IP": "Local IP address (return string)",
  "MODULE_LAN_REMOTE_IP": "Remote IP address (return string)",
  "MODULE_LAN_GET_IF_CONFIG": "Get ifconfig (return list)",
  "MODULE_LAN_SOCKET_CLOSE": "Socket closed",
  "MODULE_LAN_MQTT_INIT": "Init MQTT server %1 port %2 client id %3 username %4 password %5 keepalive %6",
  "MODULE_LAN_MQTT_DISCONNECT": "MQTT disconnect server",
  "MODULE_LAN_MQTT_CONNECT": "MQTT connect server",
  "MODULE_LAN_MQTT_CHECK_CONNECTION": "MQTT check connect server (return True or False)",
  "MODULE_LAN_MQTT_POLL": "MQTT polling downlink message in loop",
  "UNIT_GLASS2": "Glass2",
  "UNIT_GLASS2_FILL": "%1 Fill %2",
  "UNIT_GLASS2_FILL_RECT": "%1 Fill rect x %2 y %3 w %4 h %5 color %6",
  "UNIT_GLASS2_LINE": "%1 Draw line x1 %2 y1 %3 x2 %4 y2 %5 color %6",
  "UNIT_GLASS2_HLINE": "%1 Draw horizontal line x %2 y %3 w %4 color %5",
  "UNIT_GLASS2_VLINE": "%1 Draw vertical line x %2 y %3 h %4 color %5",
  "UNIT_GLASS2_RECT": "%1 Draw rect x %2 y %3 w %4 h %5 color %6",
  "UNIT_GLASS2_TEXT": "%1 Draw text %2 x %3 y %4 font %5 color %6",
  "UNIT_GLASS2_PIXEL": "%1 Draw pixel x %2 y %3 color %4",
  "UNIT_GLASS2_DISPLAY_SCROLL": "%1 Display scroll x step %2 (0 ~ 127) y step %3 (0 ~ 63)",
  "UNIT_GLASS2_IMAGE": "%1 Draw image %2 x %3 y %4",
  "UNIT_GLASS2_DISPLAY_POWER": "%1 Display power %2",
  "UNIT_GLASS2_DISPLAY_BRIGHTNESS": "%1 Display brightness %2 (0 ~ 100) %",
  "UNIT_GLASS2_DISPLAY_SHOW": "%1 Display show",
  "UNIT_GLASS2_DISPLAY_INVERT": "%1 Display %2 color",
  "UNIT_IMUPRO": "IMU Pro",
  "UNIT_IMUPRO_GET_TEMP": "%1 温度(°C, return float)",
  "UNIT_IMUPRO_GET_PRESSURE": "%1 気圧(Pa, return float)",
  "UNIT_IMUPRO_GET_ACC": "%1 加速度(m/s^2, return float)",
  "UNIT_IMUPRO_GET_GYRO": "%1 ジャイロ(rad/s, return float)",
  "UNIT_IMUPRO_GET_MAG": "%1 地磁気の値(uT, return float)",
  "UNIT_IMUPRO_GET_COMPASS": "%1 コンパスの方向(0 ~ 360°, return float)",
  "UNIT_IMUPRO_GET_ATTITUDE": "%1 姿勢角 %2 (return tuple [yaw, pitch, roll])",
  "UNIT_IMUPRO_SET_GYRO_OFFSET": "%1 ジャイロの手動キャリブレーションをx %2 y %3 z %4 (rad/s)に設定",
  "UNIT_IMUPRO_BMI_SET_ACC_RANGE": "%1 加速度のレンジを %2 に設定",
  "UNIT_IMUPRO_BMI_SET_GYRO_RANGE": "%1 ジャイロのレンジを %2 に設定",
  "UNIT_IMUPRO_BMI_SET_ACC_ODR": "%1 加速度の出力頻度を %2 に設定",
  "UNIT_IMUPRO_BMI_SET_GYRO_ODR": "%1 ジャイロの出力頻度を %2 に設定",
  "UNIT_LORAE220": "LoRaE220",
  "UNIT_LORAE220_SETUP": "%1 Config %2 Address (0x0000 ~ 0xFFFF) %3 Channel (0 ~ 30) %4 Encryption key (0x0000 ~ 0xFFFF) %5",
  "UNIT_LORAE220_RECEIVE_IN_LOOP_CB": "ID:%1 On LoRa data received data %2 %3 RSSI (dB) %4",
  "UNIT_LORAE220_RECEIVE_IN_LOOP": "ID:%1 %2 Receive data in loop",
  "UNIT_LORAE220_STOP_RECEIVE": "%1 Stop receive data in loop",
  "UNIT_LORAE220_RECEIVE": "%1 Receive data timeout %2 ms (return list [receive_data, rssi])",
  "UNIT_LORAE220_SEND": "%1 Send a line %4 address %2 (0x0000 ~ 0xFFFF) channel %3 (0 ~ 30)",
  "UNIT_LORAE220_SEND_STR": "%1 Send %4 address %2 (0x0000 ~ 0xFFFF) channel %3 (0 ~ 30)",
  "UNIT_LORAE220_SEND_LIST": "%1 Send raw data %4 address %2 (0x0000 ~ 0xFFFF) channel %3 (0 ~ 30)",
  "UNIT_TOF4M": "TOF4M",
  "UNIT_TOF4M_SET_DISTANCE_MODE": "%1 距離モードを %2 に設定",
  "UNIT_TOF4M_SET_MEASUREMENT_BUDGET": "%1 measurement timing budgetを %2 msに設定",
  "UNIT_TOF4M_GET_SINGLE_DISTANCE": "%1 距離を一度取得(mm, return int)",
  "AXP_GET_TEMP_IN_AXP192_CORE2": "Get internal PMU Temperature",
  "WEIGH_SET_CALIBRATE_SCALE": "%1 Set calibrate scale weight %2 gram",
  "UNIT_GLASS2_INIT": "%1 Init device I2C address %2 (0x3C ~ 0x3D)",
  "MICROPHONE_PDM_INIT": "マイクを初期化 %1 wsピン %2 データピン %3 サンプルレート[Hz] %4 録音時間[ms] %5",
  "MICROPHONE_PDM_PAUSE": "タイムアウト %1 ms でマイクの録音を一時停止",
  "MICROPHONE_PDM_RESUME": "マイクの録音を再開",
  "MICROPHONE_PDM_WAITDONE": "タイムアウト %1 msでマイクの録音が終わるのを待つ",
  "MICROPHONE_PDM_GET_RMS": "マイクの音量(float)を取得",
  "MICROPHONE_PDM_READ": "マイクが現在のインデックスから一つのサンプル %1 (int)を読み込む",
  "MICROPHONE_PDM_REWIND": "マイクのサンプル %1 を巻き戻し",
  "MICROPHONE_PDM_REWINDMS": "%1 msマイクを巻き戻し",
  "MICROPHONE_PDM_READ_TO_BUFFER": "マイクがサンプル数 %2 をバッファ %1 (bytearray)に読み込み",
  "MICROPHONE_PDM_DEINIT": "Microphone deinit timeout %1 ms",
  "MICROPHONE_PDM_RECORD_START": "ファイル %1 へ時間 %2 msでマイクによる録音を開始",
  "MICROPHONE_PDM_RECORD_STOP": "マイクによる録音を停止",
  "UNIT_PDM_INIT_V2": "%1 init %2 sample rate (hz) %3 record (in ms) %4",
  "UNIT_PDM_PAUSE": "%1 pauses recording timeout %2 ms",
  "UNIT_PDM_RESUME": "%1 resumes recording",
  "UNIT_PDM_WAITDONE": "%1 wait record done timeout %2 ms",
  "UNIT_PDM_GET_RMS": "%1 get volume (return float)",
  "UNIT_PDM_READ": "%1 read a single sample %2 from the current reading index (return int)",
  "UNIT_PDM_REWIND": "%1 rewind %2 samples",
  "UNIT_PDM_REWINDMS": "%1 rewind %2 ms",
  "UNIT_PDM_READ_TO_BUFFER": "%1 read sample count %3 into buffer %2 (bytearray)",
  "UNIT_PDM_DEINIT_V2": "%1 deinit timeout %2 ms",
  "UNIT_PDM_RECORD_START": "%1 start recording file %2 time %3 ms",
  "UNIT_PDM_RECORD_STOP": "%1 stop recording",
  "UNIT_REFLECTIVEIR": "Reflective IR",
  "UNIT_REFLECTIVEIR_GET_ANALOG_OUTPUT": "%1 Get analog output value (return int, 0 ~ 4095)",
  "UNIT_REFLECTIVEIR_GET_DIGITAL_OUTPUT": "%1 Get digital output value (return int, 0 ~ 1)",
  "GRAPH": "Chart Graph",
  "foregroundColor": "Foreground Color",
  "tension": "Tension (float, 0 ~ 1)",
  "segment": "Segment",
  "GRAPH_SET_FGCOLOR": "%1 Set foreground color %2",
  "GRAPH_SET_BGCOLOR": "%1 Set background color %2",
  "GRAPH_SET_TENSION": "%1 Set smoothed line tension %2 (float, 0 ~ 1)",
  "GRAPH_SET_MIN": "%1 Set Y-axis min value %2",
  "GRAPH_SET_MAX": "%1 Set Y-axis max value %2",
  "GRAPH_SET_X": "%1 Set X %2",
  "GRAPH_SET_Y": "%1 Set Y %2",
  "GRAPH_SET_WIDTH": "%1 Set Width %2",
  "GRAPH_SET_HEIGHT": "%1 Set Height %2",
  "GRAPH_SET_TYPE": "%1 Set chart graph type %2",
  "GRAPH_SET_HIDE": "%1 Hide",
  "GRAPH_SET_SHOW": "%1 Show",
  "GRAPH_ADD_SAMPLE": "%1 Add Sample %2",
  "GRAPH_DESTROY": "%1 Destroy",
  "UNIT_SYNTH": "Synth",
  "UNIT_SYNTH_SET_NOTE_ON": "%1 Set note on channel %2 pitch %3 (0 ~ 127) velocity %4 (0 ~ 127)",
  "UNIT_SYNTH_SET_NOTE_ON_PITCH": "%1 Set note on channel %2 pitch %3 velocity %4 (0 ~ 127)",
  "UNIT_SYNTH_SET_NOTE_OFF": "%1 Set note off channel %2 pitch %3 (0 ~ 127)",
  "UNIT_SYNTH_SET_CHANGE_INSTRUMENT": "%1 Set instrument bank %2 (0 or 127) channel %3 value %4 (1 ~ 128)",
  "UNIT_SYNTH_SET_INSTRUMENT_GENERAL_MIDI": "%1 Set general instrument channel %2 name %3",
  "UNIT_SYNTH_SET_INSTRUMENT_VARIATION": "%1 Set MT-32 instrument channel %2 name %3",
  "UNIT_SYNTH_SET_DRUMS_INSTRUMENT": "%1 Set drums instrument name %2 velocity %3 (0 ~ 127)",
  "UNIT_SYNTH_SET_PITCH_BEND": "%1 Set pitch bend channel %2  value %3 (0 ~ 1023)",
  "UNIT_SYNTH_SET_PITCH_BEND_RANGE": "%1 Set pitch bend range channel %2 value %3 (0 ~ 255)",
  "UNIT_SYNTH_SET_DEVICE_RESET": "%1 Reset",
  "UNIT_SYNTH_SET_CHANNEL_VOLUME": "%1 Set channel %2 volume %3 (0 ~ 100)",
  "UNIT_SYNTH_SET_ALL_NOTE_OFF": "%1 Set all notes off channel %2",
  "UNIT_SYNTH_SET_MASTER_VOLUME": "%1 Set master volume %2 (0 ~ 100)",
  "UNIT_SYNTH_SET_REVERB": "%1 Set reverb %2 channel %3 program %4 level (0 ~ 127) %5 delay feedback (0 ~ 255) %6",
  "UNIT_SYNTH_SET_CHORUS": "%1 Set chorus %2 channel %3 program %4 level (0 ~ 127) %5 feedback (0 ~ 255) %6 chorusdelay (0 ~ 255) %7",
  "UNIT_SYNTH_SET_PAN": "%1 Set pan channel %2 value %3 (0 ~ 127)",
  "UNIT_SYNTH_SET_EQ": "%1 Set equalizer %2 channel %3 low band (0 ~ 127) %4 medium low band (0 ~ 127) %5 medium high band (0 ~ 127) %6 high band (0 ~ 127) %7 low freq (0 ~ 127) %8 medium low freq (0 ~ 127) %9 medium high freq (0 ~ 127) %10 high freq (0 ~ 127) %11",
  "UNIT_SYNTH_SET_TUNING": "%1 Set tuning %2 channel %3 fine tuning (0 ~ 127) %4 coarse tunning (0 ~ 127) %5",
  "UNIT_SYNTH_SET_VIBRATE": "%1 Set vibrate %2 channel %3 rate (0 ~ 127) %4 depth (0 ~ 127) %5 delay (0 ~ 127) %6",
  "UNIT_SYNTH_SET_TVF": "%1 Set TVF %2 channel %3 cutoff freq (0 ~ 127) %4 resonance (0 ~ 127) %5",
  "UNIT_SYNTH_SET_ENVELOPE": "%1 Set envelope time %2 channel %3 attack (0 ~ 127) %4 decay (0 ~ 127) %5 release (0 ~ 127) %6",
  "UNIT_SYNTH_SET_SCALE_TUNING": "%1 Set scale tuning %2 channel %3 v1 (0 ~ 127) %4 v2 (0 ~ 127) %5 v3 (0 ~ 127) %6 v4 (0 ~ 127) %7 v5 (0 ~ 127) %8 v6 (0 ~ 127) %9 v7 (0 ~ 127) %10 v8 (0 ~ 127) %11 v9 (0 ~ 127) %12 v10 (0 ~ 127) %13 v11 (0 ~ 127) %14 v12 (0 ~ 127) %15",
  "UNIT_SYNTH_SET_MOD_WHEEL": "%1 Set modulation wheel %2 channel %3 pitch (0 ~ 127) %4 TVT cutoff (0 ~ 127) %5 amplitude (0 ~ 127) %6 rate (0 ~ 127) %7 pitch depth (0 ~ 127) %8 TVF depth (0 ~ 127) %9 TVA depth (0 ~ 127) %10",
  "UNIT_SYNTH_SET_ALL_DRUMS": "%1 Set all channels drums",
  "GUIDE_WELCOME": "UIFlowにようこそ",
  "GUIDE_MSG": "ここでは、UIFlowの特徴についですばやく学ぶことができます。さらにどのようにしてプログラムするかも学びます。",
  "GUIDE_START": "開始",
  "GUIDE_SKIP": "Skip",
  "GUIDE_DONT_SHOW": "もう一度表示しない。",
  "GUIDE_NEXT_PAGE": "次へ",
  "GUIDE_PREV_PAGE": "前へ",
  "GUIDE_FIRMWARE_BURN_TITLE": "ファームウエア書込",
  "GUIDE_CONNECT_DEVICE_TITLE": "デバイスに接続",
  "GUIDE_RUN_PROGRAM_TITLE": "プログラム実行",
  "GUIDE_SAVE_PROGRAM_TITLE": "プログラム保存/読込",
  "GUIDE_DOWNLOAD_PROGRAM_TITLE": "プログラムダウンロード",
  "GUIDE_OVERVIEW_TITLE": "概要",
  "GUIDE_HEADER_TITLE": "ヘッダー",
  "GUIDE_UI_EDIT_AREA_TITLE": "UI編集エリア",
  "GUIDE_SELECTION_AREA_TITLE": "リソースエリア",
  "GUIDE_TOOLBOX_TITLE": "ブロックツールボックス",
  "GUIDE_PROGRAMMING_TITLE": "プログラミングエリア",
  "GUIDE_DEVICE_SETTING_TITLE": "デバイス設定",
  "GUIDE_STEP1": "ステップ1",
  "GUIDE_STEP2": "ステップ2",
  "GUIDE_STEP3": "ステップ3",
  "GUIDE_FIRMWARE_BURN_STEP1_MSG1": "書き込みツールをダウンロード: ",
  "GUIDE_FIRMWARE_BURN_STEP1_MSG2": "M5Burner",
  "GUIDE_FIRMWARE_BURN_STEP2_MSG1": "ファームウエアをダウンロード",
  "GUIDE_FIRMWARE_BURN_STEP2_MSG2": "左側のメニューから適切なデバイスクラスを選択する。",
  "GUIDE_FIRMWARE_BURN_STEP2_MSG3": "デバイスに適合したファームウエアを選択する。",
  "GUIDE_FIRMWARE_BURN_STEP2_MSG4": "ダウンロードするために、ダウンロードボタンをクリックする。",
  "GUIDE_FIRMWARE_BURN_STEP3_MSG1": "ファームウエアの書き込みを開始する",
  "GUIDE_FIRMWARE_BURN_STEP3_MSG2": "Type-CデータケーブルでコンピュータとM5デバイスを接続します。M5Burnerは自動的に適切なシリアルポート(COM)を選択します。ボーレートはM5Burnerのデフォルト設定が利用できます。書き込み(Burn)ボタンをクリックします。",
  "GUIDE_FIRMWARE_BURN_STEP3_MSG3": "WiFi設定ボックスにWiFiの設定を入力します。この情報はM5デバイスにファームウエアと共に書き込まれます。スタート(Start)を押すと書き込みがはじまります。",
  "GUIDE_FIRMWARE_BURN_STEP3_MSG4": "注意:もしプログラミングタイムアウトが発生した場合、ボーレートを115200に落としてみてください。",
  "GUIDE_FIRMWARE_BURN_STEP3_MSG5": "書き込みログが\"Burn Successfully\"を表示すれば、ファームウエアは書き込みされています。",
  "GUIDE_CONNECT_DEVICE_STEP1_MSG1": "M5デバイスをType-Cデータケーブルでコンピュータに接続し、あなたのデバイスがWiFiに接続されていることをチェックします。",
  "GUIDE_CONNECT_DEVICE_STEP2_MSG1": "設定パネルを開きます",
  "GUIDE_CONNECT_DEVICE_STEP2_MSG2": "APIキーを入力します",
  "GUIDE_CONNECT_DEVICE_STEP2_MSG3": "あなたのM5デバイスを選択して\"OK\"ボタンをクリックします。",
  "GUIDE_RUN_PROGRAM_STEP1_MSG1": "ラベルUI要素を画面シミュレータにドラッグします",
  "GUIDE_RUN_PROGRAM_STEP2_MSG1": "ラベル表示ブロックをプログラミングエリアにドラッグして、Setupブロックに接続します",
  "GUIDE_RUN_PROGRAM_STEP3_MSG1": "UIFlowのプログラムを実行するために、Runボタンをクリックします。",
  "GUIDE_SAVE_PROGRAM_SAVE_MSG1": "あなたのプログラムを保存するためには\"Save\"ボタンか\"Save as\"ボタンをクリックします。",
  "GUIDE_SAVE_PROGRAM_LOAD_MSG1": "プログラムを読み込むためには、\"Open\"ボタンをクリックして、.m5fファイルを選択します。",
  "GUIDE_DOWNLOAD_PROGRAM_MSG1": "プログラムを終了するときには、いつもあなたのデバイスで実行できるように、プログラムをダウンロードすることができます。",
  "GUIDE_DOWNLOAD_PROGRAM_MSG2": "\"Download\"ボタンをクリックすると、デバイスの画面に\"uploading.\"と表示されるので、しばらくお待ちください。",
  "GUIDE_DOWNLOAD_PROGRAM_MSG3": "ダウンロードが成功すると、デバイスは自動的に再起動して、プログラムが実行されます。",
  "GUIDE_OVERVIEW_POINT1_MSG": "",
  "GUIDE_OVERVIEW_POINT2_MSG": "UI要素をシミュレーション画面にドラッグ&ドロップし、UI要素を設定します。",
  "GUIDE_OVERVIEW_POINT3_MSG": "あなたの必要なUnitやHatやStampを選択します。",
  "GUIDE_OVERVIEW_POINT4_MSG": "",
  "GUIDE_OVERVIEW_POINT5_MSG": "ブロックツールボックスからブロックをワークスペースにドラッグします。あなたのプログラムを作るために、ブロックをお互いにくっつけます。",
  "GUIDE_OVERVIEW_POINT6_MSG": "デバイスのAPIキーを設定し、いくつかの操作をします。",
  "GUIDE_HEADER_POINT1_B1_MSG1": "プロジェクト名:",
  "GUIDE_HEADER_POINT1_B1_MSG2": "現在のプロジェクトの名前。",
  "GUIDE_HEADER_POINT2_B1_MSG1": "プログラミングスイッチエリア:",
  "GUIDE_HEADER_POINT2_B1_MSG2": "ブロックプログラミングとPythonプログラミングをスイッチします。",
  "GUIDE_HEADER_POINT3_B1_MSG1": "アカウント: ",
  "GUIDE_HEADER_POINT3_B1_MSG2": "M5アカウントにログインします",
  "GUIDE_HEADER_POINT3_B2_MSG1": "ショートカットキー: ",
  "GUIDE_HEADER_POINT3_B2_MSG2": "ショートカットキーのリスト",
  "GUIDE_HEADER_POINT3_B3_MSG1": "デバイスファイルマネージャー:",
  "GUIDE_HEADER_POINT3_B3_MSG2": "",
  "GUIDE_HEADER_POINT3_B4_MSG1": "Undo: ",
  "GUIDE_HEADER_POINT3_B4_MSG2": "ブロックの操作をUndoする。",
  "GUIDE_HEADER_POINT3_B5_MSG1": "Redo: ",
  "GUIDE_HEADER_POINT3_B5_MSG2": "ブロックの操作をRedoする。",
  "GUIDE_HEADER_POINT4_B1_MSG1": "履歴記録を実行: ",
  "GUIDE_HEADER_POINT4_B1_MSG2": "履歴記録を見て読み込む",
  "GUIDE_HEADER_POINT4_B2_MSG1": "新規プロジェクト: ",
  "GUIDE_HEADER_POINT4_B2_MSG2": "新しいプロジェクトを作成する",
  "GUIDE_HEADER_POINT4_B3_MSG1": "ファイルを開く: ",
  "GUIDE_HEADER_POINT4_B3_MSG2": ".m5fファイルを開く",
  "GUIDE_HEADER_POINT4_B4_MSG1": "保存: ",
  "GUIDE_HEADER_POINT4_B4_MSG2": "M5Fファイルとしてプロジェクトを保存する。",
  "GUIDE_HEADER_POINT4_B5_MSG1": "名前をつけて保存: ",
  "GUIDE_HEADER_POINT4_B5_MSG2": "プロジェクトを指定された場所に保存します。",
  "GUIDE_HEADER_POINT5_B1_MSG1": "EzData: ",
  "GUIDE_HEADER_POINT5_B1_MSG2": "EzDataマネージャーのページにリンクします",
  "GUIDE_HEADER_POINT5_B2_MSG1": "デモ: ",
  "GUIDE_HEADER_POINT5_B2_MSG2": "利用例",
  "GUIDE_HEADER_POINT5_B3_MSG1": "Doc: ",
  "GUIDE_HEADER_POINT5_B3_MSG2": "ドキュメントへのリンク",
  "GUIDE_HEADER_POINT5_B4_MSG1": "ユーザーガイド: ",
  "GUIDE_HEADER_POINT5_B4_MSG2": "UIFlowの短いガイド",
  "GUIDE_HEADER_POINT5_B5_MSG1": "その他: ",
  "GUIDE_HEADER_POINT5_B5_MSG2": "コミュニティー, Version, 更新記録, 設定.",
  "GUIDE_UIEDITOR_MSG1": "UI要素をシミュレーション画面にドラッグ&ドロップします。",
  "GUIDE_UIEDITOR_MSG2": "更に設定したい場合は、UI要素を選択します。",
  "GUIDE_SELECTION_MSG1": "あなたの必要なUnit, Hat, Stampを追加し、UnitとStampのポートを選択できます",
  "GUIDE_SELECTION_MSG2": "追加したUnitはこのエリアに現れます。アイコンをクリックすることでポートの変更ができ、ゴミ箱にドラッグすることで削除できます。",
  "GUIDE_PRIGRAMMING_MSG1": "ブロックツールボックスからワークスペースにブロックをドラッグします。あなたのプログラムを作成するために、ブロックをお互いにくっつけます。",
  "GUIDE_PRIGRAMMING_MSG2": "Pythonにスイッチすることで、Pythonのコードを見ることができます。",
  "GUIDE_DEVICE_SETTING_POINT1": "APIキー",
  "GUIDE_DEVICE_SETTING_POINT2": "デバイス接続状態",
  "GUIDE_DEVICE_SETTING_POINT3": "デバイスファームウエアバージョン",
  "GUIDE_DEVICE_SETTING_POINT4": "デバイス接続状態を更新",
  "GUIDE_DEVICE_SETTING_POINT5": "プログラムを保存",
  "GUIDE_DEVICE_SETTING_POINT6": "m5fファイルを読み込み",
  "GUIDE_DEVICE_SETTING_POINT7": "プログラムをダウンロード",
  "RTC_CPLUS2_SET_DATE_TIME": "Set rtc %1 year %2 month %3 date %4 weekday %5 hour %6 minute %7 second %8",
  "RTC_CPLUS2_GET_DATE_TIME": "Get rtc %1",
  "RTC_CPLUS2_SET_ALARM": "Set alarm date %1 hours %2 minutes %3",
  "RTC_CPLUS2_CHECK_ALARM_FLAG": "Check alarm flag",
  "RTC_CPLUS2_CLEAR_ALARM": "Turn off alarm",
  "RTC_CPLUS2_DISABLE_ALARM": "Disable alarm",
  "RTC_CPLUS2_SET_TIMER_MODE": "Set timer value %1 mode %2",
  "RTC_CPLUS2_GET_TIMER_VALUE": "Get timer value",
  "RTC_CPLUS2_CHECK_TIMER_FLAG": "Check timer flag",
  "RTC_CPLUS2_DISABLE_TIMER": "Disable timer",
  "RTC_CPLUS2_PAUSE_TIMER": "Pause timer",
  "RTC_CPLUS2_RESUME_TIMER": "Resume timer",
  "RTC_CPLUS2_CLEAR_TIMER_FLAG": "Turn off timer",
  "RTC_CPLUS2_ENABLE_TIMER_INTERRUPT": "Enable timer interrupt",
  "RTC_CPLUS2_DISABLE_TIMER_INTERRUPT": "Disable timer interrupt",
  "RTC_CPLUS2_ENABLE_ALARM_INTERRUPT": "Enable alarm interrupt",
  "RTC_CPLUS2_DISABLE_ALARM_INTERRUPT": "Disable alarm interrupt",
  "POWER_CPLUS2_ON": "Device power on",
  "POWER_CPLUS2_OFF": "Device power off",
  "POWER_CPLUS2_BRIGHTNESS": "Device LCD brightness %1",
  "POWER_CPLUS2_RESTART_AFTER_PERIOD": "Restart after period %1 %2",
  "POWER_CPLUS2_RESTART_ON": "Restart on %1 set minutes %2 set hours %3 set date %4",
  "POWER_CPLUS2_GET_BAT_VOLT": "Get device battery voltage ( V )",
  "samplesNum": "Samples Num",
  "MATH_REMAP": "Remap %1 from low %2 from high %3 to low %4 to high %5",
  "BARGRAPH": "Bar Graph",
  "BARGRAPH_SET_FGCOLOR": "%1 Set foreground color %2",
  "BARGRAPH_SET_BGCOLOR": "%1 Set background color %2",
  "BARGRAPH_SET_MIN": "%1 Set min value %2",
  "BARGRAPH_SET_MAX": "%1 Set max value %2",
  "BARGRAPH_SET_X": "%1 Set X %2",
  "BARGRAPH_SET_Y": "%1 Set Y %2",
  "BARGRAPH_SET_WIDTH": "%1 Set Width %2",
  "BARGRAPH_SET_HEIGHT": "%1 Set Height %2",
  "BARGRAPH_SET_TYPE": "%1 Set graph type %2",
  "BARGRAPH_SET_HIDE": "%1 Hide",
  "BARGRAPH_SET_SHOW": "%1 Show",
  "BARGRAPH_ADD_SAMPLE": "%1 Add Sample %2 (float)",
  "BARGRAPH_SET_REVERSED": "%1 Set reversed %2",
  "reversed": "Reversed",
  "UNIT_MINISCALE": "Mini Scales",
  "UNIT_MINISCALE_GET_ADC": "%1 生ADC値(int)",
  "UNIT_MINISCALE_GET_WEIGHT": "%1 重さ(g:float)",
  "UNIT_MINISCALE_GET_BUTTON": "%1 ボタンの状態(True or False)",
  "UNIT_MINISCALE_GET_LOWPASS_FILTER": "%1 ローパスフィルタの状態(True or False)",
  "UNIT_MINISCALE_GET_AVERAGE_FILTER": "%1 平均フィルタのレベル(int)",
  "UNIT_MINISCALE_GET_EMA_FILTER": "%1 EMAフィルタのalpha値(int)",
  "UNIT_MINISCALE_SET_LED": "%1 RGB LEDの色 %2",
  "UNIT_MINISCALE_CALIBRATION": "%1 キャリブレーション weight1 %2 (グラムで) weight1 adc %3 weight2 %4 (グラムで) weight2 adc %5",
  "UNIT_MINISCALE_SET_LOWPASS_FILTER": "%1 ローパスフィルタを %2 に設定",
  "UNIT_MINISCALE_SET_AVERAGE_FILTER": "%1 平均フィルタのレベル(0 ~ 50)を %2 に設定",
  "UNIT_MINISCALE_SET_EMA_FILTER": "%1 EMAフィルタのalpha値(0 ~ 99)を %2 に設定",
  "UNIT_MINISCALE_RESET": "%1 リセット",
  "UNIT_QRCODE": "QRCode",
  "UNIT_QRCODE_INIT_MODE": "%1 Init device mode",
  "UNIT_QRCODE_SET_MANUAL_SCAN": "%1 Set manual scanning method %2",
  "UNIT_QRCODE_CLEAR_CURRENT_DATA_STATUS": "%1 Clear qrcode trigger flag",
  "UNIT_QRCODE_SET_TRIGGER_MODE": "%1 Set trigger mode %2",
  "UNIT_QRCODE_SET_I2C_ADDRESS": "%1 Set device I2C address %2 (0x01 ~ 0x7f)",
  "UNIT_QRCODE_GET_CURRENT_DATA_STATUS": "%1 Get qrcode trigger flag (return int)",
  "UNIT_QRCODE_GET_DATA_LENGTH": "%1 Get qrcode data length (return int)",
  "UNIT_QRCODE_GET_DATA_FORMAT": "%1 Get qrcode data format %2 (return bytes or string)",
  "UNIT_QRCODE_GET_TRIGGER_MODE": "%1 Get trigger mode status (return int)",
  "UNIT_QRCODE_GET_TRIGGER_BUTTON": "%1 Get trigger button status (return bool)",
  "UNIT_QRCODE_GET_DEVICE_INFO": "%1 Get device information %2 (return int)",
  "UNIT_DAC2": "DAC2",
  "UNIT_DAC2_SETDACOUTPUTVOLTAGERANGE": "Set %1 output voltage range %2",
  "UNIT_DAC2_SETVOLTAGE": "Set %1 channel %3 output voltage %2 (V)",
  "UNIT_DAC2_SETVOLTAGEBOTH": "Set %1 channel0 output voltage %2 (V) channel1 output voltage %3 (V)",
  "UNIT_ADCV11": "ADC V1.1",
  "UNIT_ADCV11_SET_GAIN": "%1 Set gain %2",
  "UNIT_ADCV11_SET_SAMPLE_RATE": "%1 Set sample rate %2",
  "UNIT_ADCV11_SET_MODE": "%1 Set mode %2",
  "UNIT_ADCV11_GET_ADC_RAW_VALUE": "%1 Get ADC raw value (return int)",
  "UNIT_ADCV11_GET_VOLTAGE": "%1 Get voltage (return float)",
  "MODULE_4ENCODERMOTOR": "4Encoder Motor",
  "MODULE_4ENCODERMOTOR_INIT": "Init device I2C address %1 (0x01 ~ 0x7f)",
  "MODULE_4ENCODERMOTOR_SET_MODE": "Set motor %2 mode %1 ",
  "MODULE_4ENCODERMOTOR_SET_MODE_ALL": "Set all motors mode %1 ",
  "MODULE_4ENCODERMOTOR_SET_PWM_DUTYCYCLE": "Set motor %1 pwm dutycycle %2 (-127 ~ 127)",
  "MODULE_4ENCODERMOTOR_SET_MOTOR_ENCODER_VALUE": "Set motor %1 encoder value %2",
  "MODULE_4ENCODERMOTOR_SET_POS_ENCODER_VALUE": "Set motor %1 position encoder value %2",
  "MODULE_4ENCODERMOTOR_SET_POS_MAX_SPEED_VALUE": "Set motor %1 position maximum speed value %2 (-127 ~ 127)",
  "MODULE_4ENCODERMOTOR_SET_POS_PID_VALUE": "Set motor %1 position P %2 I %3 D %4 value",
  "MODULE_4ENCODERMOTOR_SET_SPEED_PID_VALUE": "Set motor %1 speed P %2 I %3 D %4 value",
  "MODULE_4ENCODERMOTOR_SET_SPEED_POINT_VALUE": "Set motor %1 speed point value %2 (-127 ~ 127)",
  "MODULE_4ENCODERMOTOR_SET_I2C_ADDRESS": "Set device I2C address %1",
  "MODULE_4ENCODERMOTOR_GET_MOTOR_ENCODER_VALUE": "Get motor %1 encoder value (return int)",
  "MODULE_4ENCODERMOTOR_GET_MOTOR_SPEED_VALUE": "Get motor %1 speed value (return int)",
  "MODULE_4ENCODERMOTOR_GET_VIN_CURRENT_FLOAT_VALUE": "Get Vin current value (A, return float)",
  "MODULE_4ENCODERMOTOR_GET_VIN_CURRENT_VALUE": "Get Vin current value (mA, return int)",
  "MODULE_4ENCODERMOTOR_GET_VIN_ADC_RAW8_VALUE": "Get Vin adc 8bit raw value (return int)",
  "MODULE_4ENCODERMOTOR_GET_VIN_ADC_RAW12_VALUE": "Get Vin adc 12bit raw value (return int)",
  "MODULE_4ENCODERMOTOR_GET_VIN_VOLTAGE_VALUE": "Get Vin voltage value (return int)",
  "MODULE_4ENCODERMOTOR_GET_DEVICE_SPEC": "Get device %1 spec detail (return int)",
  "MODULE_4ENCODERMOTOR_GET_MOTOR_POS_PID_VALUE": "Get motor %1 position PID value (return list)",
  "MODULE_4ENCODERMOTOR_GET_MOTOR_SPEED_PID_VALUE": "Get motor %1 speed PID value (return list)",
  "MODULE_4ENCODERMOTOR_SET_ENCODER_MODE_DIRECTION": "Set encoder mode direction %1",
  "MODULE_4ENCODERMOTOR_GET_ENCODER_MODE_DIRECTION": "Get encoder mode direction (return int)",
  "HAT_DAC2": "DAC2",
  "HAT_DAC2_SETDACOUTPUTVOLTAGERANGE": "Set %1 output voltage range %2",
  "HAT_DAC2_SETVOLTAGE": "Set %1 channel %3 output voltage %2 (V)",
  "HAT_DAC2_SETVOLTAGEBOTH": "Set %1 channel0 output voltage %2 (V) channel1 output voltage %3 (V)",
  "UNIT_MINICAN": "Mini CAN",
  "UNIT_MINICAN_INIT": " %1 Init bus %2 extframe %3 mode %4 baudrate %5 TX %6 RX %7",
  "UNIT_MINICAN_SET_FILTER": " %1 Set filter bank %2 mode %3 message %4",
  "UNIT_MINICAN_SEND": "%1 Send message %2 with id %3",
  "UNIT_MINICAN_RECV": "%1 Receive message (return bytes)",
  "UNIT_MINICAN_GET_REMOTEID": "%1 Get remote ID (return int)",
  "UNIT_MINICAN_RESTART": "%1 Restart",
  "UNIT_MINICAN_CLEARFILTER": "%1 Clear filter",
  "UNIT_MINICAN_CLEAR_TX_QUEUE": "%1 Clear TX queue",
  "UNIT_MINICAN_CLEAR_RX_QUEUE": "%1 Clear RX queue",
  "UNIT_MINICAN_STATE": "%1 Get state of the controller (return 0 ~ 3)",
  "UNIT_MINICAN_ANY": "%1 If any message waiting on the FIFO %2 (return True or False)",
  "UNIT_MINICAN_DEINIT": "%1 Deinit",
  "UNIT_WEIGHTI2C": "Weight I2C",
  "UNIT_WEIGHTI2C_INIT": "%1 Init device I2C address %2 (0x01 ~ 0x7f)",
  "UNIT_WEIGHTI2C_SET_CALIBRATION": "%1 Set calibration %2 zero weight in gram %3 zero weight adc %4 load weight in gram %5 load weight adc %6",
  "UNIT_WEIGHTI2C_SET_LOWPASS_FILTER": "%1 Set lowpass filter %2",
  "UNIT_WEIGHTI2C_SET_AVERAGE_FILTER_LEVEL": "%1 Set average filter level value %2 (0 ~ 50)",
  "UNIT_WEIGHTI2C_SET_EMA_FILTER_ALPHA": "%1 Set EMA filter alpha value %2 (0 ~ 99)",
  "UNIT_WEIGHTI2C_SET_I2C_ADDRESS": "%1 Set device I2C address %2 (0x01 ~ 0x7f)",
  "UNIT_WEIGHTI2C_SET_RESET_OFFSET": "%1 Reset offset (Tare)",
  "UNIT_WEIGHTI2C_GET_ADC_RAW_VALUE": "%1 Get adc raw value (return int)",
  "UNIT_WEIGHTI2C_GET_WEIGHT_IN_FLOAT": "%1 Get weight in float (return float)",
  "UNIT_WEIGHTI2C_GET_WEIGHT_IN_INT": "%1 Get weight in int (return int)",
  "UNIT_WEIGHTI2C_GET_WEIGHT_IN_STR": "%1 Get weight in string (return string)",
  "UNIT_WEIGHTI2C_GET_LOWPASS_FILTER": "%1 Get lowpass filter (return True or False)",
  "UNIT_WEIGHTI2C_GET_AVERAGE_FILTER_LEVEL": "%1 Get average filter level (return int)",
  "UNIT_WEIGHTI2C_GET_EMA_FILTER_ALPHA": "%1 Get EMA filter alpha (return int)",
  "UNIT_WEIGHTI2C_GET_DEVICE_SPEC": "%1 Get device %2 spec detail (return int)",
  "BUTTON_PIN_INIT": "ボタンのピンを %1 に初期化",
  "MODULE_USB_INIT_MAX3421": "Init Max3421 usb module %1 sclk %2 mosi %3 miso %4 cs %5 irq %6",
  "MODULE_USB_INIT_MAX3421_CONFIG_IRQ": "irq",
  "USBV12_MODULE": "USB V1.2",
  "STAMP_CATM_HTTP_SERVICES": "%1 HTTP services %2 method %3 %4 url %5 path %6 headers %7 %8 payload %9",
  "MODULE_PPS": "PPS",
  "MODULE_PPS_INIT": "Init device I2C address %1 (0x01 ~ 0x7f)",
  "MODULE_PPS_SETOUTPUT": "Set output %1",
  "MODULE_PPS_ENABLEOUTPUT": "Enable the output",
  "MODULE_PPS_DISABLEOUTPUT": "Disable the output",
  "MODULE_PPS_SETOUTPUTVOLTAGE": "Set output voltage %1 (V, 0 ~ 30)",
  "MODULE_PPS_SETOUTPUTCURRENT": "Set output current %1 (A, 0 ~ 5)",
  "MODULE_PPS_READPSURUNNINGMODE": "Get PSU running mode (return int)",
  "MODULE_PPS_READOUTPUTCURRENT": "Get output current (A, return float)",
  "MODULE_PPS_READOUTPUTVOLTAGE": "Get output voltage (V, return float)",
  "MODULE_PPS_READINPUTVOLTAGE": "Get input voltage (V, return float)",
  "MODULE_PPS_READDATAUPDATEFLAG": "Get data update flag (return int)",
  "MODULE_PPS_READMCUTEMPERATURE": "Get MCU temperature (°C, return float)",
  "MODULE_PPS_READMODULEID": "Get module ID (return int)",
  "MODULE_PPS_READUID": "Get unique identifier (UID) (return bytearray)",
  "MODULE_PPS_GETI2CADDRESS": "Get current I2C address (return int)",
  "MODULE_PPS_SETI2CADDRESS": "Set I2C address %1 (0x01 ~ 0x7f)",
  "BLYNK_CATEGORY": "Blynk",
  "IOT_BLYNK2": "Blynk loT (V2)",
  "IOT_BLYNK2_INIT": "Init blynk %1 Authtoken %2",
  "IOT_BLYNK2_INIT_SERVER": "Init blynk %1 Server %2 port %3 Authtoken %4 SSL/TLS %5 heartbeat %6",
  "IOT_BLYNK2_CONNECT": "%1 Connect the server",
  "IOT_BLYNK2_DISCONNECT": "%1 Disconnect the server",
  "IOT_BLYNK2_SET_VIRTUAL_WRITE": "Set %1 Virtual write pin %2 (0 ~ 255) data %3",
  "IOT_BLYNK2_SET_SYNC_VIRTUAL": "Set %1 Sync virtual pin %2 (0 ~ 255)",
  "IOT_BLYNK2_RUN": "%1 Run in Loop",
  "IOT_BLYNK2_EVENT_READ": "%1 On event V%2 read value %3 %4",
  "IOT_BLYNK2_EVENT_READ_PIN": "%1 On event V* read value %2 pin %3 %4",
  "IOT_BLYNK2_GET_STATE": "%1 Get server connection status (return int)",
  "HAT_BUGC2": "BUGC2",
  "HAT_BUGC2_INIT": "%1 Init device I2C address %2 (0x01 ~ 0x7f)",
  "HAT_BUGC2_SET_MOTOR_SPEED": "%1 Set motor %2 speed %3 (-100 ~ 100)",
  "HAT_BUGC2_SET_RGB_COLOR": "%1 set RGB %2 color %3",
  "HAT_BUGC2_SET_I2C_ADDRESS": "%1 Set device I2C address %2 (0x01 ~ 0x7f)",
  "HAT_BUGC2_GET_ADC_RAW_VALUE": "%1 Get adc %2 raw value (return int)",
  "HAT_BUGC2_GET_DEVICE_SPEC": "%1 Get device %2 spec detail (return int)",
  "HAT_BUGC2_GET_BAT_VOLTAGE": "%1 Get battery voltage (mV, return int)",
  "HAT_BUGC2_RX_CB": "%1 IR NEC receive callback data %2 address %3 %4",
  "MODULE_LAN_SET_IFCONFIG": "Set ifconfig %1 ip %2 subnet %3 gateway %4 dns %5",
  "LAN_BASE_SET_IFCONFIG": "Set ifconfig %1 ip %2 subnet %3 gateway %4 dns %5",
  "UNIT_BLDCDRIVER": "BLDC Driver",
  "UNIT_BLDCDRIVER_INIT": "%1 Init devide I2C address %2 (0x01 ~ 0x7f)",
  "UNIT_BLDCDRIVER_SET_I2C_ADDRESS": "%1 Set device I2C address %2 (0x01 ~ 0x7f)",
  "UNIT_BLDCDRIVER_SET_MODE": "%1 Set %2 mode",
  "UNIT_BLDCDRIVER_SET_DIRECTION": "%1 Set motor direction %2",
  "UNIT_BLDCDRIVER_SET_MOTOR_MODEL": "%1 Set motor %2 model",
  "UNIT_BLDCDRIVER_SET_POLE_PAIRS": "%1 Set %2 number of pole pairs",
  "UNIT_BLDCDRIVER_SET_OPEN_LOOP_PWM": "%1 Set open loop pwm dutycycle value %2 (0 ~ 2047)",
  "UNIT_BLDCDRIVER_SET_RPM_FLOAT": "%1 Set motor rpm %2 value in float",
  "UNIT_BLDCDRIVER_SET_RPM_INT": "%1 Set mortor rpm %2 value in int",
  "UNIT_BLDCDRIVER_SET_PID": "%1 set P %2 I %3 D %4 value",
  "UNIT_BLDCDRIVER_SAVE": "%1 Save current motor data in flash",
  "UNIT_BLDCDRIVER_GET_MODE": "%1 Get current mode (return 0 or 1)",
  "UNIT_BLDCDRIVER_GET_DIRECTION": "%1 Get motor current direction (return 0 or 1)",
  "UNIT_BLDCDRIVER_GET_MOTOR_MODEL": "%1 Get motor current model (return 0 or 1)",
  "UNIT_BLDCDRIVER_GET_MOTOR_POLE_PAIRS": "%1 Get motor number of pole pairs (return int)",
  "UNIT_BLDCDRIVER_GET_STATUS": "%1 Get motor status (return int)",
  "UNIT_BLDCDRIVER_GET_PWM": "%1 Get open loop pwm dutycycle value (return int)",
  "UNIT_BLDCDRIVER_GET_READ_BACK_RPM_FLOAT": "%1 Get read back rpm value in float (return float)",
  "UNIT_BLDCDRIVER_GET_READ_BACK_RPM_INT": "%1 Get read back rpm value in int (return int)",
  "UNIT_BLDCDRIVER_GET_READ_BACK_RPM_STR": "%1 Get read back rpm value in str (return str)",
  "UNIT_BLDCDRIVER_GET_READ_BACK_FREQ_FLOAT": "%1 Get read back freq value in float (return float)",
  "UNIT_BLDCDRIVER_GET_READ_BACK_FREQ_INT": "%1 Get read back freq value in int (return int)",
  "UNIT_BLDCDRIVER_GET_READ_BACK_FREQ_STR": "%1 Get read back freq value in str (return str)",
  "UNIT_BLDCDRIVER_GET_RPM_FLOAT": "%1 Get rpm value in float (return float)",
  "UNIT_BLDCDRIVER_GET_RPM_INT": "%1 Get rpm value in int (return int)",
  "UNIT_BLDCDRIVER_GET_PID": "%1 Get PID value (return tuple)",
  "UNIT_BLDCDRIVER_GET_DEVICE_SPEC": "%1 Get device %2 spec detail (return int)",
  "ROBOCAR_GET_TWO_CHANNEL_LINE_SENSOR": "Get two-channel line follower sensor 1 %1  2 %2",
  "ROBOCAR_GET_MULTI_CHANNEL_LINE_SENSOR": "Get multi-channel line follower sensor 1 %1 2 %2 3 %3 4 %4 5 %5",
  "BASE_DTUNB_RECEIVE_DATA": "Receive downlink data from buffer",
  "MODULE_LORAWAN_RECEIVE_DATA": "Receive downlink data from buffer",
  "UNIT_LORAWAN_RECEIVE_DATA": "%1 Receive downlink data from buffer",
  "EEPROM_DELETE_KEY": "EEPROM delete key %1",
  "ATOM_QRCODE2": "QRCode2",
  "ATOM_QRCODE2_INIT": "Init QRCode2 device %1",
  "ATOM_QRCODE2_GET_BAUDRATE": "Get QRCode2 uart baudrate (return int)",
  "ATOM_QRCODE2_GET_DATA_LENGTH": "Get QRCode2 data length (return int)",
  "ATOM_QRCODE2_GET_DATA": "Get QRCode2 data format %1 (return bytes or string)",
  "ATOM_QRCODE2_GET_FIRMWARE_VERSION": "Get QRCode2 firmware version (return string)",
  "ATOM_QRCODE2_GET_HARDWARE_MODEL": "Get QRCode2 hardware model (return string)",
  "ATOM_QRCODE2_SET_BAUDRATE": "Set QRCode2 uart baudrate %1",
  "ATOM_QRCODE2_SET_TRIGGER_MODE": "Set QRCode2 trigger mode %1",
  "ATOM_QRCODE2_SET_TRIGGER_KEY": "Set QRCode2 manual key trigger pulse",
  "ATOM_QRCODE2_SET_TRIGGER_CMD": "Set QRCode2 manual command trigger control %1",
  "ATOM_QRCODE2_SET_LIGHT_BRIGHTNESS": "Set QRCode2 scanner light brightness %1",
  "ATOM_QRCODE2_SET_CALLBACK": "When QRCode2 get data %1",
  "ATOM_QRCODE2_CALLBACK_IN_LOOP": "QRCode2 polling data in loop",
  "UNIT_NBIOT2": "NB-IoT2",
  "UNIT_NBIOT2_UART_PORT_ID": "%1 Set core uart ID number %2 (1 ~ 2)",
  "UNIT_NBIOT2_CHECK_SIM_CARD": "%1 Check modem SIM card status (return true of false)",
  "UNIT_NBIOT2_GET_IMEI": "%1 Get identification(IMEI) number (return string)",
  "UNIT_NBIOT2_GET_SINGLE_QUALITY": "%1 Get signal strength (return int)",
  "UNIT_NBIOT2_GET_IDENTIFICATION": "%1 Get model identification (return string)",
  "UNIT_NBIOT2_GET_GPRS_STATUS": "%1 Get gprs network status (return int)",
  "UNIT_NBIOT2_GET_PDP_CONTEXT_IP": "%1 Get show pdp ip address cid %2 (return string)",
  "UNIT_NBIOT2_DEBUG": "%1 Set AT command debug print %2",
  "UNIT_NBIOT2_SET_ENABLE_PDP_CONTEXT": "%1 Set define PDP context apn %2",
  "UNIT_NBIOT2_MQTT_SERVICE_CONFIG": "%1 MQTT service configure %2 server %3 port %4 client id %5 username %6 password %7 keepalive %8",
  "UNIT_NBIOT2_MQTT_SERVICE_CONNECT": "%1 MQTT server connect clean session %2",
  "UNIT_NBIOT2_MQTT_SERVER_DISCONNECT": "%1 MQTT server disconnect",
  "UNIT_NBIOT2_MQTT_SUBSCRIBE_TOPIC": "%1 MQTT subscribe topic %2 Qos %3 (0 ~ 2)",
  "UNIT_NBIOT2_MQTT_UNSUBSCRIBE_TOPIC": "%1 MQTT unsubscribe topic %2",
  "UNIT_NBIOT2_MQTT_PUBLISH_TOPIC": "%1 MQTT publish topic %2 payload %3 Qos %4(0~2)",
  "UNIT_NBIOT2_MQTT_SUBSCRIBE_TOPIC_CB": "%1 When MQTT receives subscribed data topic %2 msg %3",
  "UNIT_NBIOT2_MQTT_POLL": "%1 MQTT polling loop",
  "UNIT_NBIOT2_MQTT_SERVER_IS_CONNECT": "%1 Check MQTT server is connect %2 (return true of false)",
  "UNIT_NBIOT2_HTTP_REQUEST": "%1 http request %2 method %3 %4 url %5 header %6 data %7",
  "UNIT_NBIOT2_HTTP_TERMINATE": "%1 http server terminated",
  "UNIT_NBIOT2_HTTP_STATUS_CODE": "%1 Get http response status code(return int)",
  "UNIT_NBIOT2_HTTP_DATA": "%1 Get http data content (return string)",
  "UNIT_ROLLER485": "Roller485",
  "UNIT_ROLLER485_INIT": "%1 Init roller COM mode",
  "UNIT_ROLLER485_INIT_MSG1": "I2C address",
  "UNIT_ROLLER485_INIT_MSG2": "motor ID",
  "UNIT_ROLLER485_INIT_485": "%1 Init rooler COM mode 485 motor ID %2 %3",
  "UNIT_ROLLER485_INIT_485I2C": "%1 Init rooler COM mode 485 -> I2C address %2 motor ID %3 %4",
  "UNIT_ROLLER485_GET_MOTOR_OUTPUT_STATUS": "%1 Get motor output status (return int)",
  "UNIT_ROLLER485_GET_MOTOR_CURRENT_MODE": "%1 Get motor current mode (return int)",
  "UNIT_ROLLER485_GET_MOTOR_ERROR_CODE": "%1 Get motor error code (return int)",
  "UNIT_ROLLER485_GET_MOTOR_ID": "%1 Get motor 485 id (return int)",
  "UNIT_ROLLER485_GET_MOTOR_BAUDRATE": "%1 Get motor 485 baudrate (return int)",
  "UNIT_ROLLER485_GET_RGB_MODE": "%1 Get RGB mode (return int)",
  "UNIT_ROLLER485_GET_RGB_COLOR": "%1 Get RGB color (return tuple)",
  "UNIT_ROLLER485_GET_RGB_BRIGHTNESS": "%1 Get RGB color brightness(return int)",
  "UNIT_ROLLER485_GET_VIN_VALUE": "%1 Get device input voltage (mV, return int)",
  "UNIT_ROLLER485_GET_TEMPERATURE": "%1 Get device temperature (°C, return int)",
  "UNIT_ROLLER485_SET_MOTOR_OUTPUT_CONTROL": "%1 Set motor output control %2",
  "UNIT_ROLLER485_SET_MOTOR_MODE": "%1 Set motor mode %2",
  "UNIT_ROLLER485_SET_MOTOR_OVER_RANGE_PROTECT": "%1 Set motor over range protection %2",
  "UNIT_ROLLER485_SET_BUTTON_CHANGE_MODE": "%1 Set motor mode change via button %2",
  "UNIT_ROLLER485_SET_REMOVE_PROTECT": "%1 Set release jam protection",
  "UNIT_ROLLER485_SET_STALL_PROTECT": "%1 Set motor stall protection %2",
  "UNIT_ROLLER485_SET_MOTOR_ID": "%1 Set motor 485 id %2",
  "UNIT_ROLLER485_SET_MOTOR_BAUDRATE": "%1 Set motor 485 baudrate %2",
  "UNIT_ROLLER485_SET_RGB_MODE": "%1 Set RGB mode %2",
  "UNIT_ROLLER485_SET_RGB_COLOR": "%1 Set RGB color %2",
  "UNIT_ROLLER485_SET_RGB_BRIGHTNESS": "%1 Set RGB brightness %2",
  "UNIT_ROLLER485_SET_DATA_SAVE_IN_FLASH": "%1 Set current setting save in flash",
  "UNIT_ROLLER485_GET_MOTOR_SPEED_READBACK": "%1 Get motor speed readback value %2 (rpm, return float)",
  "UNIT_ROLLER485_GET_MOTOR_SPEED_PID": "%1 Get motor speed pid (return tuple)",
  "UNIT_ROLLER485_SET_MOTOR_SPEED_CURRENT": "%1 Set motor speed %2 rpm max current %3 mA",
  "UNIT_ROLLER485_SET_MOTOR_SPEED_PID": "%1 Set motor speed P %2 I %3 D %4",
  "UNIT_ROLLER485_GET_MOTOR_POSITON_READBACK": "%1 Get motor position readback value %2 (return float)",
  "UNIT_ROLLER485_GET_MOTOR_POSITON_PID": "%1 Get motor position pid (return tuple)",
  "UNIT_ROLLER485_SET_MOTOR_POSITION_CURRENT_SETTING": "%1 Set motor position %2 count max current %3 mA",
  "UNIT_ROLLER485_SET_MOTOR_POSITION_PID": "%1 Set motor position P %2 I %3 D %4",
  "UNIT_ROLLER485_GET_MOTOR_CURRENT_READBACK": "%1 Get motor current readback value %2 (return float)",
  "UNIT_ROLLER485_SET_MOTOR_MAX_CURRENT": "%1 Set motor max current %2 mA",
  "UNIT_ROLLER485_GET_ENCODER_VALUE": "%1 Get motor encoder count value (return float)",
  "UNIT_ROLLER485_SET_ENCODER_VALUE": "%1 Set motor encoder count %2",
  "UNIT_ROLLER485_GET_MOTOR_SPEED_SETTING": "%1 Get motor speed setting value (rpm, return float)",
  "UNIT_ROLLER485_GET_MOTOR_SPEED_MAX_CURRENT": "%1 Get motor speed max current setting value %2 (mA, return float)",
  "UNIT_ROLLER485_GET_MOTOR_POSITION_SETTING": "%1 Get motor position setting value (return float)",
  "UNIT_ROLLER485_GET_MOTOR_POSITION_MAX_CURRENT": "%1 Get motor position max current setting value %2 (mA, return float)",
  "UNIT_ROLLER485_GET_MOTOR_MAX_CURRENT": "%1 Get motor max current setting value %2 (mA, return float)",
  "UNIT_ROLLER485_GET_DEVICE_SPEC": "%1 Get device spec %2 info (return int)",
  "UNIT_ROLLER485_SET_I2C_ADDRESS": "%1 Set device i2c address %2",
  "UNIT_LORAE220433": "LoRaE220-433",
  "UNIT_LORAE220433_SETUP_UART_ID": "%1 Setup uart ID %2 baudrate %3 parity %4",
  "UNIT_LORAE220433_SETUP": "%1 Setup LoRa E220 module %2 Address (0x0000 ~ 0xFFFF) %3 Channel (0 ~ 83) %4 Encryption key (0x0000 ~ 0xFFFF) %5",
  "UNIT_LORAE220433_READ_CONFIGURE_PARAM": "%1 Read configuration parameters",
  "UNIT_LORAE220433_GET_SETUP_PARAMETER": "%1 Get LoRa E220 setup %2 parameter (return int)",
  "UNIT_LORAE220433_AVAILABLE_DATA": "%1 Available of data count (return int)",
  "UNIT_LORAE220433_RECEIVE_DATA_TIMEOUT": "%1 Get receive data timeout %2 ms (return list [data, rssi])",
  "UNIT_LORAE220433_SEND_STR": "%1 Send %2 address %3 (0x0000 ~ 0xFFFF) channel %4 (0 ~ 83)",
  "UNIT_LORAE220433_SEND_LIST": "%1 Send raw data %2 address %3 (0x0000 ~ 0xFFFF) channel %4 (0 ~ 83)",
  "UNIT_LORAE220433_RECEIVE_CB": "When %1 receive data (bytes) %2 RSSI (dB) %3",
  "UNIT_LORAE220433_RECEIVE_STR_CB": "When %1 receive data (string) %2 RSSI (dB) %3",
  "UNIT_LORAE220433_RECEIVE_IN_LOOP_CB": "ID:%1 When LoRa received data %2 %3 RSSI (dB) %4",
  "UNIT_LORAE220433_RECEIVE_IN_LOOP": "ID:%1 %2 Start Receive data",
  "UNIT_LORAE220433_STOP_RECEIVE": "%1 Stop receive data",
  "GUIDE_DEVICE_SETTING_APIKEY": "Click the api key to open setting pannel",
  "GUIDE_DEVELOP_TITLE": "Develop",
  "GUIDE_INTERFACE_TITLE": "Interface Introduction",
  "UNIT_LORAE220433_SETUP_MSG1": "Baudrate",
  "UNIT_LORAE220433_SETUP_MSG2": "Parity",
  "UNIT_LORAE220433_SETUP_MSG3": "Data Rate (bps)",
  "UNIT_LORAE220433_SETUP_MSG4": "Subpacket size (byte)",
  "UNIT_LORAE220433_SETUP_MSG5": "RSSI ambient noise",
  "UNIT_LORAE220433_SETUP_MSG6": "TX power (dBm)",
  "UNIT_LORAE220433_SETUP_MSG7": "RSSI byte",
  "UNIT_LORAE220433_SETUP_MSG8": "Transmissiton method mode",
  "UNIT_LORAE220433_SETUP_MSG9": "LBT",
  "UNIT_LORAE220433_SETUP_MSG10": "WOR (ms)",
  "UNIT_SCROLL": "Scroll",
  "UNIT_SCROLL_INIT": "%1 I2Cアドレス %2 で初期化",
  "UNIT_SCROLL_SET_ENCODER_VALUE": "%1 エンコーダー値を %2 に設定",
  "UNIT_SCROLL_SET_LED_COLOR": "%1 RGB LEDの色を %2 に設定",
  "UNIT_SCROLL_RESET_ENCODER": "%1 エンコーダー値をリセット",
  "UNIT_SCROLL_SET_ENCODER_MODE": "%1 エンコーダーモードを %2 に設定",
  "UNIT_SCROLL_SET_I2C_ADDRESS": "%1 I2Cアドレスを %2 に設定",
  "UNIT_SCROLL_GET_ENCODER_VALUE": "%1 エンコーダー値を取得 (return int)",
  "UNIT_SCROLL_GET_BUTTON_STATUS": "%1 ボタンの状態を取得(return True or False)",
  "UNIT_SCROLL_GET_LED_COLOR": "%1 RGB LEDの色を取得(return list)",
  "UNIT_SCROLL_GET_INCREMENT_VALUE": "%1 増減値を取得 (return int)",
  "UNIT_SCROLL_GET_ENCODER_MODE": "%1 エンコーダーモードを取得 (return int)",
  "UNIT_SCROLL_GET_DEVICE_SPEC": "%1 デバイス情報 %2 を取得",
  "UNIT_TMOS": "TMOS PIR",
  "UNIT_TMOS_GET_DATA_READY": "%1 Get data update status (return True or False)",
  "UNIT_TMOS_GET_MOTION_STATE": "%1 Get motion detection state (return True or False)",
  "UNIT_TMOS_GET_PRESENCE_STATE": "%1 Get presence detection state (return True or False)",
  "UNIT_TMOS_GET_PRESENCE_VALUE": "%1 Get presence value (cm^-1, return int)",
  "UNIT_TMOS_GET_MOTION_VALUE": "%1 Get motion value (cm^-1, return int)",
  "UNIT_TMOS_GET_GAIN_MODE": "%1 Get gain mode (return int)",
  "UNIT_TMOS_GET_TMOS_SENSITIVITY": "%1 Get sensitivity (return float)",
  "UNIT_TMOS_GET_TAMB_SHOCK_STATE": "%1 Get ambient temperature shock detection state (return True or False)",
  "UNIT_TMOS_GET_TEMPERATURE_DATA": "%1 Get object temperature (return float)",
  "UNIT_TMOS_GET_TAMBIENT_RAW_VALUE": "%1 Get ambient temperature (return int)",
  "UNIT_TMOS_GET_PRESENCE_THRESHOLD": "%1 Get presence threshold (return int)",
  "UNIT_TMOS_GET_MOTION_THRESHOLD": "%1 Get motion threshold (return int)",
  "UNIT_TMOS_GET_TAMBIENT_SHOCK_THRESHOLD": "%1 Get ambient temperature shock threshold (return int)",
  "UNIT_TMOS_GET_PRESENCE_HYSTERESIS": "%1 Get presence detection hysteresis value (return int)",
  "UNIT_TMOS_GET_MOTION_HYSTERESIS": "%1 Get motion detection hysteresis value (return int)",
  "UNIT_TMOS_GET_TAMBIENT_SHOCK_HYSTERESIS": "%1 Get ambient temperature shock detection hysteresis value (return int)",
  "UNIT_TMOS_SET_GAIN_MODE": "%1 Set gain mode to %2",
  "UNIT_TMOS_SET_TMOS_SENSITIVITY": "%1 Set sensitivity to %2 (0 ~ 4080)",
  "UNIT_TMOS_SET_PRESENCE_THRESHOLD": "%1 Set presence threshold to %2 (0 ~ 32767)",
  "UNIT_TMOS_SET_MOTION_THRESHOLD": "%1 Set motion threshold to %2 (0 ~ 32767)",
  "UNIT_TMOS_SET_TAMBIENT_SHOCK_THRESHOLD": "%1 Set ambient temperature shock threshold to %2 (0 ~ 32767)",
  "UNIT_TMOS_SET_PRESENCE_HYSTERESIS": "%1 Set presence detection hysteresis value to %2 (0 ~ 255)",
  "UNIT_TMOS_SET_MOTION_HYSTERESIS": "%1 Set motion detection hysteresis value to %2 (0 ~ 255)",
  "UNIT_TMOS_SET_TAMBIENT_SHOCK_HYSTERESIS": "%1 Set ambient temperature shock detection hysteresis value to %2 (0 ~ 255)",
  "UNIT_TMOS_CALLBACK": "When %1 was %2 detect",
  "UNIT_TMOS_TICK": "%1 Update in loop",
  "UNIT_DMX": "DMX",
  "UNIT_DMX_INIT": "Init %1 mode %2 UART %3",
  "UNIT_DMX_WRITE_VALUE": "%1 Set channel %2 (1 ~ 512) value %3 (0 ~ 255)",
  "UNIT_DMX_CLEAR_BUFFER": "%1 Clear all channel values",
  "UNIT_DMX_DEINIT": "%1 Deinit",
  "UNIT_DMX_READ_VALUE": "%1 Get channel %2 (1 ~ 512) value (return int)",
  "UNIT_CATM_AT_COMMAND_TESTER": "%1 AT command tester CMD %2 keyword %3 timeout %4 format %5 (return list)",
  "COM_GSM_AT_COMMAND_TESTER": "AT command tester CMD %1 keyword %2 timeout %3 format %4 (return list)",
  "USB_MOUSE_GET_CLICK_STATUS": "Get mouse button status %1 click (return True or False)",
  "UNIT_MIDI": "MIDI",
  "UNIT_MIDI_SET_NOTE_ON": "%1 Set note on channel %2 pitch %3 (0 ~ 127) velocity %4 (0 ~ 127)",
  "UNIT_MIDI_SET_NOTE_ON_PITCH": "%1 Set note on channel %2 pitch %3 velocity %4 (0 ~ 127)",
  "UNIT_MIDI_SET_NOTE_OFF": "%1 Set note off channel %2 pitch %3 (0 ~ 127)",
  "UNIT_MIDI_SET_CHANGE_INSTRUMENT": "%1 Set instrument bank %2 (0 or 127) channel %3 value %4 (1 ~ 128)",
  "UNIT_MIDI_SET_INSTRUMENT_GENERAL_MIDI": "%1 Set general instrument channel %2 name %3",
  "UNIT_MIDI_SET_INSTRUMENT_VARIATION": "%1 Set MT-32 instrument channel %2 name %3",
  "UNIT_MIDI_SET_DRUMS_INSTRUMENT": "%1 Set drums instrument name %2 velocity %3 (0 ~ 127)",
  "UNIT_MIDI_SET_PITCH_BEND": "%1 Set pitch bend channel %2  value %3 (0 ~ 1023)",
  "UNIT_MIDI_SET_PITCH_BEND_RANGE": "%1 Set pitch bend range channel %2 value %3 (0 ~ 255)",
  "UNIT_MIDI_SET_DEVICE_RESET": "%1 Reset",
  "UNIT_MIDI_SET_CHANNEL_VOLUME": "%1 Set channel %2 volume %3 (0 ~ 100)",
  "UNIT_MIDI_SET_ALL_NOTE_OFF": "%1 Set all notes off channel %2",
  "UNIT_MIDI_SET_MASTER_VOLUME": "%1 Set master volume %2 (0 ~ 100)",
  "UNIT_MIDI_SET_REVERB": "%1 Set reverb %2 channel %3 program %4 level (0 ~ 127) %5 delay feedback (0 ~ 255) %6",
  "UNIT_MIDI_SET_CHORUS": "%1 Set chorus %2 channel %3 program %4 level (0 ~ 127) %5 feedback (0 ~ 255) %6 chorusdelay (0 ~ 255) %7",
  "UNIT_MIDI_SET_PAN": "%1 Set pan channel %2 value %3 (0 ~ 127)",
  "UNIT_MIDI_SET_EQ": "%1 Set equalizer %2 channel %3 low band (0 ~ 127) %4 medium low band (0 ~ 127) %5 medium high band (0 ~ 127) %6 high band (0 ~ 127) %7 low freq (0 ~ 127) %8 medium low freq (0 ~ 127) %9 medium high freq (0 ~ 127) %10 high freq (0 ~ 127) %11",
  "UNIT_MIDI_SET_TUNING": "%1 Set tuning %2 channel %3 fine tuning (0 ~ 127) %4 coarse tunning (0 ~ 127) %5",
  "UNIT_MIDI_SET_VIBRATE": "%1 Set vibrate %2 channel %3 rate (0 ~ 127) %4 depth (0 ~ 127) %5 delay (0 ~ 127) %6",
  "UNIT_MIDI_SET_TVF": "%1 Set TVF %2 channel %3 cutoff freq (0 ~ 127) %4 resonance (0 ~ 127) %5",
  "UNIT_MIDI_SET_ENVELOPE": "%1 Set envelope time %2 channel %3 attack (0 ~ 127) %4 decay (0 ~ 127) %5 release (0 ~ 127) %6",
  "UNIT_MIDI_SET_SCALE_TUNING": "%1 Set scale tuning %2 channel %3 v1 (0 ~ 127) %4 v2 (0 ~ 127) %5 v3 (0 ~ 127) %6 v4 (0 ~ 127) %7 v5 (0 ~ 127) %8 v6 (0 ~ 127) %9 v7 (0 ~ 127) %10 v8 (0 ~ 127) %11 v9 (0 ~ 127) %12 v10 (0 ~ 127) %13 v11 (0 ~ 127) %14 v12 (0 ~ 127) %15",
  "UNIT_MIDI_SET_MOD_WHEEL": "%1 Set modulation wheel %2 channel %3 pitch (0 ~ 127) %4 TVT cutoff (0 ~ 127) %5 amplitude (0 ~ 127) %6 rate (0 ~ 127) %7 pitch depth (0 ~ 127) %8 TVF depth (0 ~ 127) %9 TVA depth (0 ~ 127) %10",
  "UNIT_MIDI_SET_ALL_DRUMS": "%1 Set all channels drums",
  "UNIT_JOYSTICK2": "JoyStick2",
  "UNIT_JOYSTICK2_INIT": "%1 I2Cアドレス %2 (0x08 ~ 0x77)で初期化",
  "UNIT_JOYSTICK2_SET_ADDRESS": "%1 I2Cアドレスを %2 (0x08 ~ 0x77)に設定",
  "UNIT_JOYSTICK2_SET_AXIS_X_INVERT": "%1 x軸を反転 %2",
  "UNIT_JOYSTICK2_SET_AXIS_Y_INVERT": "%1 y軸を反転 %2",
  "UNIT_JOYSTICK2_SET_AXIS_SWAP": "%1 x軸とy軸を交換 %2",
  "UNIT_JOYSTICK2_GET_BUTTON_STATUS": "%1 ボタンの状態(return True or False)",
  "UNIT_JOYSTICK2_GET_ADC_VALUE": "%1 ADCの値(return tuple)",
  "UNIT_JOYSTICK2_FILL_COLOR": "%1 LEDの色を %2 に設定",
  "UNIT_JOYSTICK2_GET_X_RAW": "%1 x軸のADC値",
  "UNIT_JOYSTICK2_GET_Y_RAW": "%1 y軸のADC値",
  "UNIT_JOYSTICK2_GET_X_POSITION": "%1 x軸の位置",
  "UNIT_JOYSTICK2_GET_Y_POSITION": "%1 y軸の位置",
  "UNIT_JOYSTICK2_GET_FIRMWARE_VERSION": "%1 ファームウエアバージョン(return int)",
  "UNIT_JOYSTICK2_GET_AXIS_POSITION": "%1 位置(return tuple)",
  "UNIT_JOYSTICK2_SET_DEADZONE_ADC": "%1 ADC値のデッドゾーンをX %2 (0 ~ 32768), Y %3 (0 ~ 32768)に設定",
  "UNIT_JOYSTICK2_SET_DEADZONE_POSITION": "%1 位置のデッドゾーンをX %2 (0 ~ 4096), Y %3 (0 ~ 4096)に設定",
  "UNIT_JOYSTICK2_SET_AXIS_X_MAPPING": "%1 x軸のマッピングパラメータ %2 ADC値の負の最小値(0 ~ 65536) %3 ADC値の負の最大値(0 ~ 65536) %4 ADC値の正の最小値(0 ~ 65536) %5 ADC値の正の最大値(0 ~ 65536) %6",
  "UNIT_JOYSTICK2_SET_AXIS_Y_MAPPING": "%1 y軸のマッピングパラメータ %2 ADC値の負の最小値(0 ~ 65536) %3 ADC値の負の最大値(0 ~ 65536) %4 ADC値の正の最小値(0 ~ 65536) %5 ADC値の正の最大値(0 ~ 65536) %6",
  "UNIT_JOYSTICK2_SET_LED_BRIGHTNESS": "%1 LEDの輝度を %2 % (0 ~ 100)に設定",
  "UNIT_TIMERPWR": "TimerPWR",
  "UNIT_TIMERPWR_INIT": "Init %1 I2C address %2",
  "UNIT_TIMERPWR_GET_FIRMWARE_VERSION": "Get %1 firmware version (return int)",
  "UNIT_TIMERPWR_GET_BATTERY_VOLTAGE": "Get %1 battery voltage in millivolt (return int)",
  "UNIT_TIMERPWR_GET_BATTERY_CURRENT": "Get %1 battery current in milliamperes (return int)",
  "UNIT_TIMERPWR_GET_USB_VOLTAGE": "Get %1 usb voltage in millivolt (return int)",
  "UNIT_TIMERPWR_GET_USB_CURRENT": "Get %1 usb current in milliamperes (return int)",
  "UNIT_TIMERPWR_GET_GROVE_VOLTAGE": "Get %1 grove voltage in millivolt (return int)",
  "UNIT_TIMERPWR_GET_GROVE_CURRENT": "Get %1 grove current in milliamperes (return int)",
  "UNIT_TIMERPWR_IS_CHARGING": "%1 is battery charging (return True or False)",
  "UNIT_TIMERPWR_GET_BUTTON_STATUS": "Get %1 button %2 status (return True or False)",
  "UNIT_TIMERPWR_SAVE_DATA_TO_FLASH": "Save %1 data to flash",
  "UNIT_TIMERPWR_GET_GROVE_OUTPUT_STATUS": "Get %1 grove output status (return True or False)",
  "UNIT_TIMERPWR_SET_GROVE_OUTPUT_STATUS": "Set %1 grove output %2",
  "UNIT_TIMERPWR_GET_OLED_BACKLIGHT_STATUS": "Get %1 grove oled backlight status (return True or False)",
  "UNIT_TIMERPWR_SET_OLED_BACKLIGHT_STATUS": "Set %1 oled backlight %2",
  "UNIT_TIMERPWR_SET_WAKEUP_TRIGGER": "Set %1 wake-up trigger %2",
  "UNIT_TIMERPWR_SET_SLEEP_TRIGGER": "Set %1 sleep trigger %2",
  "UNIT_TIMERPWR_SLEEP_ONCE": "Set %1 %2 sleep once after %3 wake up in %4",
  "UNIT_TIMERPWR_SLEEP_CYCLE": "Set %1 %2 sleep cycle after %3 wake up in %4",
  "UNIT_TIMERPWR_TIME_INPUT_MSG0": "hours (0 ~ 255)",
  "UNIT_TIMERPWR_TIME_INPUT_MSG1": "minutes (0 ~ 59)",
  "UNIT_TIMERPWR_TIME_INPUT_MSG2": "seconds (0 ~ 59)",
  "UNIT_TIMERPWR_USB_CALLBACK": "When %1 was USB %2",
  "UNIT_TIMERPWR_CHARGING_CALLBACK": "When %1 %2",
  "UNIT_TIMERPWR_BUTTON_CALLBACK": "When %1 button %2 was %3",
  "UNIT_TIMERPWR_TICK": "%1 check event in loop",
  "MODULE_LLM": "LLM",
  "MODULE_LLM_INIT": "Init LLM %1 with %2 UART %3 TX %4 RX %5",
  "MODULE_LLM_TICK": "Update %1 in loop",
  "MODULE_LLM_CHECK_CONNECTION": "%1 is connection normal (return True or False)",
  "MODULE_LLM_GET_RESPONSE_MSG_LIST": "Get %1 response msg list (return list)",
  "MODULE_LLM_CLEAR_RESPONSE_MSG_LIST": "Clear %1 response msg list",
  "MODULE_LLM_SYS_PING": "%1 Send ping signal",
  "MODULE_LLM_SYS_RESET": "Reset %1 wait reset finish %2",
  "MODULE_LLM_SYS_REBOOT": "Reboot %1",
  "MODULE_LLM_SETUP": "%1 setup LLM with %2 system prompt %3 version %4 %5 model %6 enoutput %7 enkws %8 max token length %9 request id %10",
  "MODULE_LLM_INFERENCE": "%1 LLM inference with %2 work id %3 input data %4 request id %5",
  "MODULE_LLM_TTS_INFERENCE": "%1 TTS inference with %2 work id %3 input data %4 timeout %5 request id %6",
  "MODULE_LLM_AUDIO_SETUP": "%1 Setup audio with %2 cap volume %3 play volume %4 request id %5",
  "MODULE_LLM_TTS_SETUP": "%1 Setup TTS with %2 model %3 input %4 enoutput %5 enkws %6 request id %7",
  "MODULE_LLM_KWS_SETUP": "%1 setup KWS with %2 wake-up keyword %3 model %4 enoutput %5 enaudio %6 request id %7",
  "MODULE_LLM_ASR_SETUP": "%1 Setup ASR with %2 model %3 enoutput %4 enkws %5 wake-up no content timeout %6 ASR no content timeout %7 ASR max recognition timeout %8 request id %9",
  "MODULE_LLM_BEGIN_VOICE_ASSISTANT": "%1 begin voice assistant preset with %2 wake-up keyword %3 system prompt %4 system language %5 (return True or False)",
  "MODULE_LLM_KEYWORD_DETECTED_CALLBACK": "When %1 detected keyword",
  "MODULE_LLM_ASR_DATA_INPUT_CALLBACK": "When %1 ASR data input %2 data %3 finish %4 index %5",
  "MODULE_LLM_DATA_INPUT_CALLBACK": "When %1 LLM data input %2 data %3 finish %4 index %5",
  "MODULE_LLM_GET_LATEST_LLM_WORK_ID": "Get %1 latest llm work id (return string)",
  "MODULE_LLM_GET_LATEST_AUDIO_WORK_ID": "Get %1 latest audio work id (return string)",
  "MODULE_LLM_GET_LATEST_TTS_WORK_ID": "Get %1 latest tts work id (return string)",
  "MODULE_LLM_GET_LATEST_KWS_WORK_ID": "Get %1 latest kws work id (return string)",
  "MODULE_LLM_GET_LATEST_ASR_WORK_ID": "Get %1 latest asr work id (return string)",
  "MODULE_LLM_GET_LATEST_ERROR_CODE": "Get %1 latest error code (return int)",
  "UNIT_PUZZLE": "Puzzle",
  "UNIT_PUZZLE_INIT": "Init %1 nodes quantity is %2 (1 ~ 100)",
  "UNIT_PUZZLE_SET_COLOR": "Set %1 index (1 ~ 64) %2 RGB color %3",
  "UNIT_PUZZLE_SET_BRIGHTNESS": "Set %1 brightness to %2 (0 ~ 100)",
  "UNIT_PUZZLE_SET_COLOR_FROM": "Set %1 from %2 to %3 RGB color %4",
  "UNIT_PUZZLE_SET_COLOR_ALL": "Set %1 all RGB color %2",
  "UNIT_PUZZLE_SET_SHOW_LOCK": "Set %1 show lock %2",
  "UNIT_PUZZLE_SHOW": "Show %1 RGB LED",
  "UNIT_PUZZLE_SET_HEXAGON_MATRIX": "hexagon matrix in",
  "UNIT_ROLLERCAN": "RollerCAN",
  "UNIT_ROLLERCAN_INIT_MSG0": "Init %1",
  "UNIT_ROLLERCAN_INIT_MSG1": "I2C address (0x08 ~ 0x77)",
  "UNIT_ROLLERCAN_INIT_MSG2": "Bus",
  "UNIT_ROLLERCAN_INIT_MSG3": "motor ID (0x00 ~ 0xFF)",
  "UNIT_ROLLERCAN_INIT_MSG4": "CAN obj",
  "UNIT_ROLLERCAN_GET_MOTOR_STATUS_MSG0": "get %1 motor status (return int)",
  "UNIT_ROLLERCAN_GET_MOTOR_OUTPUT_STATUS_MSG0": "get %1 motor output status (return True or False)",
  "UNIT_ROLLERCAN_GET_MOTOR_JAM_PROTECT_STATE_MSG0": "get %1 motor jam protect state (return True or False)",
  "UNIT_ROLLERCAN_GET_MOTOR_MODE_MSG0": "get %1 motor current mode (return int)",
  "UNIT_ROLLERCAN_GET_MOTOR_ERROR_CODE_MSG0": "get %1 motor error code (return int)",
  "UNIT_ROLLERCAN_GET_MOTOR_ID_MSG0": "get %1 motor CAN id (return int)",
  "UNIT_ROLLERCAN_GET_CAN_BAUDRATE_MSG0": "get %1 motor CAN baudrate (return int)",
  "UNIT_ROLLERCAN_GET_RGB_MODE_MSG0": "get %1 RGB mode (return int)",
  "UNIT_ROLLERCAN_GET_RGB_COLOR_MSG0": "get %1 RGB color (return tuple)",
  "UNIT_ROLLERCAN_GET_RGB_BRIGHTNESS_MSG0": "get %1 RGB LED brightness (return 0 ~ 100)",
  "UNIT_ROLLERCAN_GET_VIN_VALUE_MSG0": "get %1 input voltage (mV, return int)",
  "UNIT_ROLLERCAN_GET_TEMPERATURE_VALUE_MSG0": "get %1 temperature (°C, return int)",
  "UNIT_ROLLERCAN_SET_MOTOR_OUTPUT_STATE_MSG0": "Set %1 motor output status to %2",
  "UNIT_ROLLERCAN_SET_MOTOR_MODE_MSG0": "Set %1 motor mode to %2",
  "UNIT_ROLLERCAN_SET_MOTOR_OVER_RANGE_PROTECT_MSG0": "Set %1 motor over range protection to %2",
  "UNIT_ROLLERCAN_SET_BUTTON_CHANGE_MODE_MSG0": "Set %1 motor mode change via button to %2",
  "UNIT_ROLLERCAN_SET_REMOVE_PROTECT_MSG0": "Temporary remove %1 motor jam protect state",
  "UNIT_ROLLERCAN_SET_MOTOR_STALL_PROTECT_MSG0": "Set %1 motor jam protect to %2",
  "UNIT_ROLLERCAN_SET_MOTOR_ID_MSG0": "Set %1 motor CAN id to %2",
  "UNIT_ROLLERCAN_SET_CAN_BAUDRATE_MSG0": "Set %1 motor CAN baudrate to %2",
  "UNIT_ROLLERCAN_SET_RGB_MODE_MSG0": "Set %1 RGB mode to %2",
  "UNIT_ROLLERCAN_SET_RGB_COLOR_MSG0": "Set %1 RGB color to %2",
  "UNIT_ROLLERCAN_SET_RGB_BRIGHTNESS_MSG0": "Set %1 RGB LED brightness to %2 (0 ~ 100)",
  "UNIT_ROLLERCAN_SET_DATA_SAVE_IN_FLASH_MSG0": "Set %1 current setting save in flash",
  "UNIT_ROLLERCAN_GET_MOTOR_SPEED_READBACK_MSG0": "get %1 motor current speed(rpm) readback value(return float)",
  "UNIT_ROLLERCAN_GET_MOTOR_SPEED_PID_MSG0": "get %1 motor speed pid(return tuple)",
  "UNIT_ROLLERCAN_SET_MOTOR_SPEED_MSG0": "Set %1 motor speed %2 rpm",
  "UNIT_ROLLERCAN_SET_SPEED_MAX_CURRENT_MSG0": "Set %1 max current to %2 (mA) in speed mode",
  "UNIT_ROLLERCAN_SET_MOTOR_SPEED_PID_MSG0": "Set %1 motor speed P %2 I %3 D %4",
  "UNIT_ROLLERCAN_GET_MOTOR_POSITION_READBACK_MSG0": "get %1 motor current position readback value (return float)",
  "UNIT_ROLLERCAN_GET_MOTOR_POSITION_PID_MSG0": "get %1 motor position pid (return tuple)",
  "UNIT_ROLLERCAN_SET_MOTOR_POSITION_MSG0": "Set %1 motor position %2 count",
  "UNIT_ROLLERCAN_SET_POSITION_MAX_CURRENT_MSG0": "Set %1 max current to %2 in position mode",
  "UNIT_ROLLERCAN_SET_MOTOR_POSITION_PID_MSG0": "Set %1 motor position P %2 I %3 D %4",
  "UNIT_ROLLERCAN_GET_MOTOR_CURRENT_READBACK_MSG0": "get %1 motor current readback value (return float)",
  "UNIT_ROLLERCAN_SET_MOTOR_MAX_CURRENT_MSG0": "Set %1 motor max current to %2 mA",
  "UNIT_ROLLERCAN_GET_ENCODER_VALUE_MSG0": "get %1 motor encoder count value (return float)",
  "UNIT_ROLLERCAN_SET_ENCODER_VALUE_MSG0": "Set %1 motor encoder count to %2",
  "UNIT_ROLLERCAN_GET_MOTOR_SPEED_SETTING_MSG0": "get %1 motor speed(rpm) (return int)",
  "UNIT_ROLLERCAN_GET_MOTOR_SPEED_MAX_CURRENT_MSG0": "get %1 max current in speed mode (mA, return int)",
  "UNIT_ROLLERCAN_GET_MOTOR_POSITION_SETTING_MSG0": "get %1 motor position (return int)",
  "UNIT_ROLLERCAN_GET_MOTOR_POSITION_MAX_CURRENT_MSG0": "get %1 max current in position mode (mA, return int)",
  "UNIT_ROLLERCAN_GET_MOTOR_MAX_CURRENT_MSG0": "get %1 motor max current setting value (mA, return float)",
  "UNIT_ROLLERCAN_GET_FIRMWARE_VERSION_MSG0": "get %1 firmware version (return int)",
  "UNIT_ROLLERCAN_GET_I2C_ADDRESS_MSG0": "get %1 I2C Address (return int)",
  "UNIT_ROLLERCAN_SET_I2C_ADDRESS_MSG0": "Set %1 I2C address %2 (0x08 ~ 0x77)",
  "UNIT_ROLLERCAN_GET_MOTOR_OVER_RANGE_PROTECT_STATE_MSG0": "get %1 motor over range protect setting (return True or False)",
  "UNIT_ROLLERCAN_GET_BUTTON_CHANGE_MODE_MSG0": "get %1 button switching mode status (return True or False)",
  "UNIT_GPSV11": "GPS V1.1",
  "UNIT_GPSV11_INIT_MSG0": "Init %1 UART %2",
  "UNIT_GPSV11_DEINIT_MSG0": "%1 deinit",
  "UNIT_GPSV11_GET_ANTENNA_STATE_MSG0": "get %1 antenna State (return string)",
  "UNIT_GPSV11_GET_GPS_TIME_MSG0": "get %1 local time (return list [hour, min, second])",
  "UNIT_GPSV11_GET_GPS_DATE_MSG0": "get %1 date (return list [yyyy, mm, dd])",
  "UNIT_GPSV11_GET_GPS_DATE_TIME_MSG0": "get %1 date and local time (return list [yyyy, mm, dd, hour, min, second])",
  "UNIT_GPSV11_GET_TIMESTAMP_MSG0": "get %1 timestamp (return int)",
  "UNIT_GPSV11_GET_LATITUDE_MSG0": "get %1 latitude (return string)",
  "UNIT_GPSV11_GET_LONGITUDE_MSG0": "get %1 longitude (return string)",
  "UNIT_GPSV11_GET_ALTITUDE_MSG0": "get %1 altitude (return string)",
  "UNIT_GPSV11_GET_SATELLITE_NUM_MSG0": "get %1 satellite number (return int)",
  "UNIT_GPSV11_GET_POS_QUALITY_MSG0": "get %1 position quality (return int)",
  "UNIT_GPSV11_GET_CORSE_OVER_GROUND_MSG0": "get %1 course over ground degree (return string)",
  "UNIT_GPSV11_GET_SPEED_OVER_GROUND_MSG0": "get %1 speed over ground knot (return string)",
  "UNIT_GPSV11_GET_WORK_MODE_MSG0": "get %1 work mode (return int)",
  "UNIT_GPSV11_SET_WORK_MODE_MSG0": "Set %1 work mode to %2",
  "UNIT_GPSV11_GET_TIME_ZONE_MSG0": "get %1 current time zone offset (return int)",
  "UNIT_GPSV11_SET_TIME_ZONE_MSG0": "Set %1 time zone offset to %2",
  "UNIT_GPSSMA": "GPS SMA",
  "UNIT_GPSSMA_INIT_MSG0": "Init %1 UART %2",
  "UNIT_GPSSMA_DEINIT_MSG0": "%1 deinit",
  "UNIT_GPSSMA_GET_ANTENNA_STATE_MSG0": "get %1 antenna State (return string)",
  "UNIT_GPSSMA_GET_GPS_TIME_MSG0": "get %1 local time (return list [hour, min, second])",
  "UNIT_GPSSMA_GET_GPS_DATE_MSG0": "get %1 date (return list [yyyy, mm, dd])",
  "UNIT_GPSSMA_GET_GPS_DATE_TIME_MSG0": "get %1 date and local time (return list [yyyy, mm, dd, hour, min, second])",
  "UNIT_GPSSMA_GET_TIMESTAMP_MSG0": "get %1 timestamp (return int)",
  "UNIT_GPSSMA_GET_LATITUDE_MSG0": "get %1 latitude (return string)",
  "UNIT_GPSSMA_GET_LONGITUDE_MSG0": "get %1 longitude (return string)",
  "UNIT_GPSSMA_GET_ALTITUDE_MSG0": "get %1 altitude (return string)",
  "UNIT_GPSSMA_GET_SATELLITE_NUM_MSG0": "get %1 satellite number (return int)",
  "UNIT_GPSSMA_GET_POS_QUALITY_MSG0": "get %1 position quality (return int)",
  "UNIT_GPSSMA_GET_CORSE_OVER_GROUND_MSG0": "get %1 course over ground degree (return string)",
  "UNIT_GPSSMA_GET_SPEED_OVER_GROUND_MSG0": "get %1 speed over ground knot (return string)",
  "UNIT_GPSSMA_GET_WORK_MODE_MSG0": "get %1 work mode (return int)",
  "UNIT_GPSSMA_SET_WORK_MODE_MSG0": "Set %1 work mode to %2",
  "UNIT_GPSSMA_GET_TIME_ZONE_MSG0": "get %1 current time zone offset (return int)",
  "UNIT_GPSSMA_SET_TIME_ZONE_MSG0": "Set %1 time zone offset to %2",
  "UNIT_BYTEBUTTON": "ByteButton",
  "UNIT_BYTEBUTTON_INIT_MSG0": "%1 I2Cアドレス %2 (0x08 ~ 0x77)で初期化",
  "UNIT_BYTEBUTTON_GET_BYTE_BUTTON_STATUS_MSG0": "%1 全てのボタンの状態を取得(return int)",
  "UNIT_BYTEBUTTON_GET_BUTTON_STATE_MSG0": "%1 %2 番目のキーの状態を取得(return True or False)",
  "UNIT_BYTEBUTTON_GET_LED_SHOW_MODE_MSG0": "%1 LEDの表示モードを取得",
  "UNIT_BYTEBUTTON_SET_LED_SHOW_MODE_MSG0": "%1 LEDの表示モードを %2 に設定",
  "UNIT_BYTEBUTTON_SET_LED_BRIGHTNESS_MSG0": "%1 %2 番目のLEDの輝度を %3 (0 ~ 255)に設定",
  "UNIT_BYTEBUTTON_GET_LED_BRIGHTNESS_MSG0": "%1 %2 番目のLEDの輝度を取得(return 0 ~ 255)",
  "UNIT_BYTEBUTTON_GET_FIRMWARE_VERSION_MSG0": "%1 ファームウエアバージョンを取得",
  "UNIT_BYTEBUTTON_GET_I2C_ADDRESS_MSG0": "%1 I2Cアドレスを取得",
  "UNIT_BYTEBUTTON_SET_I2C_ADDRESS_MSG0": "%1 I2Cアドレスを %2 (0x08 ~ 0x77)に設定",
  "UNIT_BYTEBUTTON_SAVE_TO_FLASH_MSG0": "%1 ユーザー設定をフラッシュに保存",
  "UNIT_BYTEBUTTON_GET_INDICATOR_COLOR_MSG0": "%1 インジケーターLEDの色を取得(return RGB888)",
  "UNIT_BYTEBUTTON_SET_INDICATOR_COLOR_MSG0": "%1 インジケーターLEDの色を %2 に設定",
  "UNIT_BYTEBUTTON_GET_INDICATOR_BRIGHTNESS_MSG0": "%1 インジケーターLEDの輝度を取得(return 0 ~ 255)",
  "UNIT_BYTEBUTTON_SET_INDICATOR_BRIGHTNESS_MSG0": "%1 インジケーターLEDの輝度を %2 (0 ~ 255)に設定",
  "UNIT_BYTEBUTTON_GET_USER_MODE_LED_COLOR_MSG0": "%1 %2 番目のLEDの色をユーザーモードで取得",
  "UNIT_BYTEBUTTON_GET_SYS_MODE_LED_COLOR_MSG0": "%1 %2 番目のLED の色を %3 にシステムモードで取得",
  "UNIT_BYTEBUTTON_SET_USER_MODE_LED_COLOR_MSG0": "%1 %2 番目のLEDの色を %3 にユーザーモードで設定",
  "UNIT_BYTEBUTTON_SET_SYS_MODE_LED_COLOR_MSG0": "%1 %2 番目のLEDの色を %3 に %4 の時にシステムモードで設定",
  "UNIT_BYTESWITCH": "ByteSwitch",
  "UNIT_BYTESWITCH_INIT_MSG0": "Init %1 I2C address %2 (0x08 ~ 0x77)",
  "UNIT_BYTESWITCH_GET_BYTE_SWITCH_STATUS_MSG0": "get %1 all switch status (return int)",
  "UNIT_BYTESWITCH_GET_SWITCH_STATE_MSG0": "get %1 the status of %2 key (return True or False)",
  "UNIT_BYTESWITCH_GET_LED_SHOW_MODE_MSG0": "get %1 the LED show mode (return 0 or 1)",
  "UNIT_BYTESWITCH_SET_LED_SHOW_MODE_MSG0": "Set %1 the LED show mode to %2",
  "UNIT_BYTESWITCH_SET_LED_BRIGHTNESS_MSG0": "Set %1 the brightness of %2 LED to %3 (0 ~ 255)",
  "UNIT_BYTESWITCH_GET_LED_BRIGHTNESS_MSG0": "get %1 the brightness of %2 LED (return 0 ~ 255)",
  "UNIT_BYTESWITCH_GET_FIRMWARE_VERSION_MSG0": "get %1 firmware version",
  "UNIT_BYTESWITCH_GET_I2C_ADDRESS_MSG0": "get %1 I2C address",
  "UNIT_BYTESWITCH_SET_I2C_ADDRESS_MSG0": "Set %1 I2C address to %2 (0x08 ~ 0x77)",
  "UNIT_BYTESWITCH_SAVE_TO_FLASH_MSG0": "%1 save user settings to flash",
  "UNIT_BYTESWITCH_GET_INDICATOR_COLOR_MSG0": "get %1 the color of the indicator LED (return RGB888)",
  "UNIT_BYTESWITCH_SET_INDICATOR_COLOR_MSG0": "Set %1 the color of the indicator LED to %2",
  "UNIT_BYTESWITCH_GET_INDICATOR_BRIGHTNESS_MSG0": "get %1 the brightness of the indicator LED (return 0 ~ 255)",
  "UNIT_BYTESWITCH_SET_INDICATOR_BRIGHTNESS_MSG0": "Set %1 the brightness of the indicator LED to %2 (0 ~ 255)",
  "UNIT_BYTESWITCH_GET_USER_MODE_LED_COLOR_MSG0": "get %1 the color of %2 LED in user mode",
  "UNIT_BYTESWITCH_GET_SYS_MODE_LED_COLOR_MSG0": "get %1 the color of %2 LED when it %3 in sys mode",
  "UNIT_BYTESWITCH_SET_USER_MODE_LED_COLOR_MSG0": "Set %1 the color of %2 LED to %3 in user mode",
  "UNIT_BYTESWITCH_SET_SYS_MODE_LED_COLOR_MSG0": "Set %1 the color of %2 LED to %3 when it %4 in sys mode",
  "UNIT_LORAWANCN470": "LoRaWAN CN470",
  "UNIT_LORAWANAS923": "LoRaWAN AS923",
  "UNIT_LORAWANUS915": "LoRaWAN US915",
  "UNIT_LORAWANEU868": "LoRaWAN EU868",
  "UNIT_LORAWANCN470_INIT_MSG0": "Init %1 UART %2",
  "UNIT_LORAWANCN470_GET_ABP_CONFIG_MSG0": "get %1 ABP config (return tuple)",
  "UNIT_LORAWANCN470_GET_OTAA_CONFIG_MSG0": "get %1 OTAA config (return tuple)",
  "UNIT_LORAWANCN470_GET_JOIN_STATE_MSG0": "check %1 join status",
  "UNIT_LORAWANCN470_SET_JOIN_MODE_MSG0": "Set %1 join mode %2",
  "UNIT_LORAWANCN470_CONFIG_MSG0": "Config %1 %2 frequency band mask %3 RX window param: %4 RX1 delay (1~15) %5 RX2 delay (2~16) %6 RX2 datarate %7 class mode %8",
  "UNIT_LORAWANCN470_START_JOIN_NETWORK_MSG0": "Start %1 join LoRaWAN network",
  "UNIT_LORAWANCN470_START_JOIN_NETWORK_RETURN_MSG0": "Start %1 join LoRaWAN network, wait %2 ms for response",
  "UNIT_LORAWANCN470_JOIN_MSG0": "Start %1 join LoRaWAN network %2 %3 %4 reattempt interval (seconds) (7 ~ 255) %5 maximum number of attempts (0 ~ 255) %6 wait (ms) %7",
  "UNIT_LORAWANCN470_CONFIG_MODE_MSG0": "config",
  "UNIT_LORAWANCN470_SEND_DATA_PAYLOAD_MSG0": "%1 send data %2 on port %3 (1 ~ 233)",
  "UNIT_LORAWANCN470_SEND_DATA_PAYLOAD_RETURN_MSG0": "%1 send data %2 on port %3 (1 ~ 233) wait %4 ms to confirm",
  "UNIT_LORAWANCN470_SET_NETWORK_MODE_MSG0": "Set %1 network mode to %2",
  "UNIT_LORAWANCN470_GET_LAST_RECEIVE_MSG0": "get %1 last received data (return tuple, [port, payload])",
  "UNIT_LORAWANCN470_GET_P2P_FREQUENCY_MSG0": "get %1 P2P mode frequency",
  "UNIT_LORAWANCN470_SET_P2P_FREQUENCY_MSG0": "Set %1 P2P mode frequency to %2",
  "UNIT_LORAWANCN470_GET_P2P_SPREADING_FACTOR_MSG0": "get %1 P2P mode spreading factor",
  "UNIT_LORAWANCN470_SET_P2P_SPREADING_FACTOR_MSG0": "Set %1 P2P mode spreading factor to %2 (5 ~ 12)",
  "UNIT_LORAWANCN470_GET_P2P_BANDWIDTH_MSG0": "get %1 P2P mode bandwidth",
  "UNIT_LORAWANCN470_SET_P2P_LORA_BANDWIDTH_MSG0": "Set %1 P2P LORA mode bandwidth to %2",
  "UNIT_LORAWANCN470_SET_P2P_FSK_BANDWIDTH_MSG0": "Set %1 P2P FSK mode bandwidth to %2 (4800 ~ 467000)",
  "UNIT_LORAWANCN470_GET_P2P_TX_POWER_MSG0": "get %1 P2P mode tx power",
  "UNIT_LORAWANCN470_SET_P2P_TX_POWER_MSG0": "Set %1 P2P mode tx power to %2 (5 ~ 22)",
  "UNIT_LORAWANCN470_GET_P2P_FSK_BITRATE_MSG0": "get %1 P2P mode FSK bitrate",
  "UNIT_LORAWANCN470_SET_P2P_FSK_BITRATE_MSG0": "Set %1 P2P mode FSK bitrate to %2 (600 ~ 300000)",
  "UNIT_LORAWANCN470_SEND_P2P_DATA_MSG0": "Send %1 P2P data %2",
  "UNIT_LORAWANCN470_SEND_P2P_DATA_RETURN_MSG0": "Send %1 P2P data %2 wait %3 ms to get send result",
  "UNIT_LORAWANCN470_GET_P2P_RECEIVE_DATA_MSG0": "get %1 P2P mode receive data in %2 ms (return tuple)",
  "UNIT_LORAWANCN470_GET_P2P_SYNC_WORD_MSG0": "get %1 P2P mode sync word",
  "UNIT_LORAWANCN470_SET_P2P_SYNC_WORD_MSG0": "Set %1 P2P mode sync word to %2 (0x0000 ~ 0xffff)",
  "UNIT_LORAWANCN470_RESET_MODULE_TO_DEFAULT_MSG0": "Restore %1 to default parameters",
  "UNIT_LORAWANCN470_GET_P2P_CODE_RATE_MSG0": "get %1 P2P mode code rate",
  "UNIT_LORAWANCN470_SET_P2P_CODE_RATE_MSG0": "Set %1 P2P mode code rate to %2",
  "UNIT_LORAWANCN470_GET_P2P_PREAMBLE_LENGTH_MSG0": "get %1 P2P mode preamble length",
  "UNIT_LORAWANCN470_SET_P2P_PREAMBLE_LENGTH_MSG0": "Set %1 P2P mode preamble length to %2",
  "UNIT_LORAWANEU868_CONFIG_MSG0": "Config %1 %2 RX window param: %3 RX1 delay (1~15) %4 RX2 delay (2~16) %5 RX2 datarate %6 class mode %7",
  "UNIT_ASR": "ASR",
  "UNIT_ASR_INIT_MSG0": "Init %1 UART %2",
  "UNIT_ASR_GET_CURRENT_RAW_MESSAGE_MSG0": "get %1 current raw message (return string)",
  "UNIT_ASR_GET_CURRENT_COMMAND_WORD_MSG0": "get %1 current command word (return string)",
  "UNIT_ASR_GET_CURRENT_COMMAND_NUM_MSG0": "get %1 current command num (return string)",
  "UNIT_ASR_GET_COMMAND_HANDLER_MSG0": "get %1 current command handler state (return True or False)",
  "UNIT_ASR_GET_RECEIVED_STATUS_MSG0": "get %1 status of the receive message (return True or False)",
  "UNIT_ASR_GET_COMMAND_LIST_MSG0": "get %1 current command list",
  "UNIT_ASR_SEND_MESSAGE_MSG0": "Send message to %1 with command number (hex) %2",
  "UNIT_ASR_REMOVE_COMMAND_WORD_MSG0": "Remove %1 command word %2",
  "UNIT_ASR_SEARCH_COMMAND_NUM_MSG0": "search %1 command number of the command word %2 (return int)",
  "UNIT_ASR_SEARCH_COMMAND_WORD_MSG0": "search %1 command word of the command number (hex) %2 (return string)",
  "UNIT_ASR_ADD_COMMAND_WORD_MSG0": "Add %1 command num (hex) %2 and the command word %3",
  "UNIT_ASR_EVENT_MSG0": "When %1 recognizes command word %2",
  "UNIT_ASR_UPDATE_IN_LOOP": "%1 Update in loop",
  "MODULE_FANV11": "Fan V1.1",
  "MODULE_FANV11_INIT_MSG0": "Init Fan v1.1 %1 I2C address %2 (0x08 ~ 0x77)",
  "MODULE_FANV11_GET_I2C_ADDRESS_MSG0": "get %1 current I2C address (return int)",
  "MODULE_FANV11_SET_ADDRESS_MSG0": "Set %1 I2C address %2 (0x08 ~ 0x77)",
  "MODULE_FANV11_GET_FIRMWARE_VERSION_MSG0": "get %1 firmware version (return int)",
  "MODULE_FANV11_GET_FAN_STATE_MSG0": "get %1 current fan state (return True or False)",
  "MODULE_FANV11_SET_FAN_STATE_MSG0": "Set %1 fan state to %2",
  "MODULE_FANV11_GET_PWM_FREQUENCY_MSG0": "get %1 fan PWM frequency (return int)",
  "MODULE_FANV11_SET_PWM_FREQUENCY_MSG0": "Set %1 fan PWM frequency to %2",
  "MODULE_FANV11_GET_PWM_DUTY_CYCLE_MSG0": "get %1 current fan PWM duty cycle (return int)",
  "MODULE_FANV11_SET_PWM_DUTY_CYCLE_MSG0": "Set %1 fan PWM duty cycle to %2",
  "MODULE_FANV11_GET_FAN_RPM_MSG0": "get %1 current fan rpm (return int)",
  "MODULE_FANV11_GET_SINGLE_FREQUENCY_MSG0": "get %1 current fan single frequency (return int)",
  "MODULE_FANV11_WRITE_FLASH_MSG0": "Save %1 current setting to flash",
  "MODULE_BALA2_INIT_MSG0": "Init Bala2 %1 with timer %2 (0~3)",
  "MODULE_BALA2_SET_MOTOR_SPEED_MSG0": "Set %1 left motor speed to %2 (-1023~1023) and right motor speed to %3 (-1023~1023)",
  "MODULE_BALA2_SET_ENCODER_VALUE_MSG0": "Set %1 left encoder value to %2 and right encoder value to %3",
  "MODULE_BALA2_GET_ENCODER_VALUE_MSG0": "get %1 encoder value (return tuple)",
  "MODULE_BALA2_SET_SERVO_ANGLE_MSG0": "Set %1 servo pos to %2 (1~4) and angle to %3 (0~180)",
  "MODULE_BALA2_START_MSG0": "%1 start",
  "MODULE_BALA2_STOP_MSG0": "%1 stop",
  "MODULE_BALA2_GET_ANGLE_MSG0": "get %1 tilt angle",
  "MODULE_BALA2_SET_ANGLE_PID_MSG0": "Set %1 angle PID parameters with %2 proportional gain %3 integral gain %4 derivative gain %5",
  "MODULE_BALA2_GET_ANGLE_PID_MSG0": "get %1 angle PID parameters (return tuple)",
  "MODULE_BALA2_SET_ANGLE_PID_TARGET_MSG0": "Set %1 target angle for angle PID control to %2",
  "MODULE_BALA2_GET_ANGLE_PID_TARGET_MSG0": "get %1 target angle for angle PID control (return float)",
  "MODULE_BALA2_SET_SPEED_PID_MSG0": "Set %1 speed PID parameters with %2 proportional gain %3 integral gain %4 derivative gain %5",
  "MODULE_BALA2_GET_SPEED_PID_MSG0": "get %1 speed PID parameters (return tuple)",
  "MODULE_BALA2_SET_SPEED_PID_TARGET_MSG0": "Set %1 target speed for speed PID control to %2",
  "MODULE_BALA2_GET_SPEED_PID_TARGET_MSG0": "get %1 target speed for speed PID control (return float)",
  "MODULE_BALA2_SET_TURN_SPEED_MSG0": "Set %1 turning speed to %2 (-1023~1023)",
  "MODULE_BALA2_CALIBRATE_MSG0": "%1 sensor calibrate",
  "MODULE_LLM_CAMERA_SETUP_MSG0": "%1 setup camera with %2 input %3 frame width %4 frame height %5 request id %6 enoutput %7",
  "MODULE_LLM_YOLO_SETUP_MSG0": "%1 setup YOLO with %2 model %3 enoutput %4 input %5 request id %6",
  "MODULE_LLM_GET_MODEL_LIST_MSG0": "get %1 model list",
  "MODULE_LLM_REMOVE_MODE_MSG0": "Remove %1 model %2",
  "MODULE_LLM_GET_LATEST_YOLO_WORK_ID_MSG0": "get %1 latest YOLO work id (return string)",
  "MODULE_LLM_GET_LATEST_CAMERA_WORK_ID_MSG0": "get %1 latest camera work id (return string)",
  "CONTROLS_FOR_RANGE_MSG0": "for %1 in range %2",
  "BASE_MOTION_READ_VOLTAGE_MSG0": "Motion read voltage (V, return float)",
  "BASE_MOTION_READ_CURRENT_MSG0": "Motion read current (A, return float)",
  "BASE_MOTION_READ_POWER_MSG0": "Motion read power (W, return float)",
  "MODULE_LLM_GET_LATEST_WHISPER_WORK_ID_MSG0": "get %1 latest whisper work id (return string)",
  "MODULE_LLM_GET_LATEST_VAD_WORK_ID_MSG0": "get %1 latest vad work id (return string)",
  "MODULE_LLM_WHISPER_SETUP_MSG0": "%1 setup whisper with %2 model %3 enoutput %4 enkws %5 envad %6 language %7 request id %8",
  "MODULE_LLM_VAD_SETUP_MSG0": "%1 setup VAD with %2 model %3 enoutput %4 enkws %5 request id %6",
  "MODULE_GPSV2": "GPS v2.0",
  "MODULE_GPSV2_INIT_MSG0": "Init %1 pin TX %2 RX %3",
  "MODULE_GPSV2_SET_UART_MSG0": "set %1 UART ID %2",
  "MODULE_GPSV2_DEINIT_MSG0": "%1 deinit",
  "MODULE_GPSV2_GET_ANTENNA_STATE_MSG0": "get %1 antenna State (return string)",
  "MODULE_GPSV2_GET_GPS_TIME_MSG0": "get %1 local time (return list [hour, min, second])",
  "MODULE_GPSV2_GET_GPS_DATE_MSG0": "get %1 date (return list [yyyy, mm, dd])",
  "MODULE_GPSV2_GET_GPS_DATE_TIME_MSG0": "get %1 date and local time (return list [yyyy, mm, dd, hour, min, second])",
  "MODULE_GPSV2_GET_TIMESTAMP_MSG0": "get %1 timestamp (return int)",
  "MODULE_GPSV2_GET_LATITUDE_MSG0": "get %1 latitude (return string)",
  "MODULE_GPSV2_GET_LONGITUDE_MSG0": "get %1 longitude (return string)",
  "MODULE_GPSV2_GET_ALTITUDE_MSG0": "get %1 altitude (return string)",
  "MODULE_GPSV2_GET_SATELLITE_NUM_MSG0": "get %1 satellite number (return int)",
  "MODULE_GPSV2_GET_POS_QUALITY_MSG0": "get %1 position quality (return int)",
  "MODULE_GPSV2_GET_CORSE_OVER_GROUND_MSG0": "get %1 course over ground degree (return string)",
  "MODULE_GPSV2_GET_SPEED_OVER_GROUND_MSG0": "get %1 speed over ground knot (return string)",
  "MODULE_GPSV2_GET_WORK_MODE_MSG0": "get %1 work mode (return int)",
  "MODULE_GPSV2_SET_WORK_MODE_MSG0": "set %1 work mode to %2",
  "MODULE_GPSV2_GET_TIME_ZONE_MSG0": "get %1 current time zone offset (return int)",
  "MODULE_GPSV2_SET_TIME_ZONE_MSG0": "set %1 time zone offset to %2",
  "BASE_LORAWANCN470": "DTU LoRaWAN-CN470",
  "BASE_LORAWANCN470_TITLE": "LoRaWAN-CN470",
  "BASE_LORAWANCN470_LORAWAN": "LoRaWAN",
  "BASE_LORAWANCN470_P2P": "P2P",
  "BASE_LORAWANCN470_RS485": "RS485",
  "BASE_LORAWANCN470_INIT_MSG0": "Init LoRaWAN-CN470 with %1 %2 RS485",
  "BASE_LORAWANCN470_LORAWAN_CONFIG_MSG0": "Config",
  "BASE_LORAWANCN470_LORAWAN_CONFIG_MSG1": "mode",
  "BASE_LORAWANCN470_LORAWAN_CONFIG_MSG2": "device eui *",
  "BASE_LORAWANCN470_LORAWAN_CONFIG_MSG3": "app key *",
  "BASE_LORAWANCN470_LORAWAN_CONFIG_MSG4": "app eui",
  "BASE_LORAWANCN470_LORAWAN_CONFIG_MSG5": "device address",
  "BASE_LORAWANCN470_LORAWAN_CONFIG_MSG6": "app session key",
  "BASE_LORAWANCN470_LORAWAN_CONFIG_MSG7": "network session key",
  "BASE_LORAWANCN470_LORAWAN_CONFIG_MSG8": "frequency band mask",
  "BASE_LORAWANCN470_LORAWAN_CONFIG_MSG9": "RX window param:",
  "BASE_LORAWANCN470_LORAWAN_CONFIG_MSG10": "RX1 delay (1~15)",
  "BASE_LORAWANCN470_LORAWAN_CONFIG_MSG11": "RX2 delay (2~16)",
  "BASE_LORAWANCN470_LORAWAN_CONFIG_MSG12": "RX2 datarate",
  "BASE_LORAWANCN470_LORAWAN_CONFIG_MSG13": "class mode",
  "BASE_LORAWANCN470_P2P_CONFIG_MSG0": "Config P2P parameters",
  "BASE_LORAWANCN470_P2P_CONFIG_MSG1": "frequency",
  "BASE_LORAWANCN470_P2P_CONFIG_MSG2": "spreading factor (5 ~ 12)",
  "BASE_LORAWANCN470_P2P_CONFIG_MSG3": "bandwidth",
  "BASE_LORAWANCN470_P2P_CONFIG_MSG4": "TX power (5 ~ 22)",
  "BASE_LORAWANCN470_P2P_CONFIG_MSG5": "code rate",
  "BASE_LORAWANCN470_P2P_CONFIG_MSG6": "preamble length",
  "BASE_LORAWANCN470_RS485_CONFIG_MSG0": "",
  "BASE_LORAWANCN470_RS485_CONFIG_MSG1": "Config RS485 with",
  "BASE_LORAWANCN470_RS485_CONFIG_MSG2": "baudrate",
  "BASE_LORAWANCN470_RS485_CONFIG_MSG3": "bits",
  "BASE_LORAWANCN470_RS485_CONFIG_MSG4": "parity",
  "BASE_LORAWANCN470_RS485_CONFIG_MSG5": "stop",
  "BASE_LORAWANCN470_RS485_CONFIG_MSG6": "RTS",
  "BASE_LORAWANCN470_RS485_CONFIG_MSG7": "CTS",
  "BASE_LORAWANCN470_RS485_CONFIG_MSG8": "TX buffer",
  "BASE_LORAWANCN470_RS485_CONFIG_MSG9": "RX buffer",
  "BASE_LORAWANCN470_RS485_CONFIG_MSG10": "timeout",
  "BASE_LORAWANCN470_RS485_CONFIG_MSG11": "timeout char",
  "BASE_LORAWANCN470_RS485_CONFIG_MSG12": "invert",
  "BASE_LORAWANCN470_RS485_CONFIG_MSG13": "flow",
  "BASE_LORAWANCN470_RS485_CONFIG_MSG14": "mode",
  "BASE_LORAWANCN470_GET_RECEIVED_DATA_MSG0": "get LoRaWAN-CN470 received data",
  "BASE_LORAWANCN470_GET_RECEIVED_DATA_STRING_MSG0": "get LoRaWAN-CN470 received data as string",
  "BASE_LORAWANCN470_GET_RECEIVED_DATA_COUNT_MSG0": "get LoRaWAN-CN470 received data count",
  "BASE_LORAWANCN470_SEND_DATA_PAYLOAD_MSG0": "LoRaWAN-CN470 send data %1 on port %2 (1 ~ 233)",
  "BASE_LORAWANCN470_SEND_DATA_PAYLOAD_RETURN_MSG0": "LoRaWAN-CN470 send data %1 on port %2 (1 ~ 233) wait %3 ms to confirm",
  "BASE_LORAWANCN470_START_JOIN_LORAWAN_NETWORK_MSG0": "Start LoRaWAN-CN470 join LoRaWAN network, wait %1 ms for response",
  "BASE_LORAWANCN470_START_JOIN_LORAWAN_NETWORK_MSG1": "Successed %1",
  "BASE_LORAWANCN470_START_JOIN_LORAWAN_NETWORK_MSG2": "Failed %1",
  "BASE_LORAWANCN470_SEND_P2P_DATA_MSG0": "Send LoRaWAN-CN470 P2P data %1 , convert to hex %2",
  "BASE_LORAWANCN470_SEND_P2P_DATA_RETURN_MSG0": "send LoRaWAN-CN470 P2P data %1 wait %2 ms to get send result, convert to hex %3 (return True or False)",
  "BASE_LORAWANCN470_GET_P2P_RECEIVE_DATA_MSG0": "get LoRaWAN-CN470 P2P mode receive data in %1 ms, convert to hex %2 (return tuple)",
  "BASE_LORAWANCN470_RS485_SETUP_MSG0": "LoRaWAN-CN470 RS485 setup %1 baudrate %2 bits %3 parity %4 stop %5 TX %6 RX %7",
  "BASE_LORAWANCN470_RS485_SETUP_MSG1": "RTS",
  "BASE_LORAWANCN470_RS485_SETUP_MSG2": "CTS",
  "BASE_LORAWANCN470_RS485_SETUP_MSG3": "TX buffer",
  "BASE_LORAWANCN470_RS485_SETUP_MSG4": "RX buffer",
  "BASE_LORAWANCN470_RS485_SETUP_MSG5": "timeout",
  "BASE_LORAWANCN470_RS485_SETUP_MSG6": "timeout char",
  "BASE_LORAWANCN470_RS485_SETUP_MSG7": "invert",
  "BASE_LORAWANCN470_RS485_SETUP_MSG8": "flow",
  "BASE_LORAWANCN470_RS485_SETUP_MSG9": "mode",
  "BASE_LORAWANCN470_RS485_DEINIT_MSG0": "LoRaWAN-CN470 RS485 deinit",
  "BASE_LORAWANCN470_RS485_AVAILABLE_CHAR_MSG0": "LoRaWAN-CN470 RS485 count of available",
  "BASE_LORAWANCN470_RS485_READ_ALL_MSG0": "LoRaWAN-CN470 RS485 read all bytes (return bytes)",
  "BASE_LORAWANCN470_RS485_READ_BYTES_MSG0": "LoRaWAN-CN470 RS485 read %1 bytes (return bytes)",
  "BASE_LORAWANCN470_RS485_READ_LINE_MSG0": "LoRaWAN-CN470 RS485 read line (return bytes)",
  "BASE_LORAWANCN470_RS485_READ_RAW_DATA_MSG0": "LoRaWAN-CN470 RS485 read a raw data (return 0 ~ 255)",
  "BASE_LORAWANCN470_RS485_WRITE_MSG0": "LoRaWAN-CN470 RS485 write %1",
  "BASE_LORAWANCN470_RS485_WRITE_LINE_MSG0": "LoRaWAN-CN470 RS485 write line %1",
  "BASE_LORAWANCN470_RS485_WRITE_LIST_MSG0": "LoRaWAN-CN470 RS485 write list or tuple %1",
  "BASE_LORAWANCN470_RS485_WRITE_RAW_DATA_LIST_MSG0": "LoRaWAN-CN470 RS485 write raw data %1",
  "BASE_LORAWANCN470_RS485_WRITE_RAW_DATA_MSG0": "LoRaWAN-CN470 RS485 write raw data %1",
  "BASE_LORAWANCN470_RS485_READ_INTO_BUF_MSG0": "LoRaWAN-CN470 RS485 read into buf %1",
  "BASE_LORAWANCN470_RS485_SEND_BREAK_MSG0": "LoRaWAN-CN470 RS485 send break single",
  "BASE_LORAWANCN470_RS485_FLUSH_MSG0": "LoRaWAN-CN470 RS485 flush",
  "BASE_LORAWANCN470_RS485_TXDONE_MSG0": "LoRaWAN-CN470 RS485 is transfer done (return True or False)",
  "BASE_LORAWANEU868": "DTU LoRaWAN-EU868",
  "BASE_LORAWANEU868_TITLE": "LoRaWAN-EU868",
  "BASE_LORAWANEU868_LORAWAN": "LoRaWAN",
  "BASE_LORAWANEU868_P2P": "P2P",
  "BASE_LORAWANEU868_RS485": "RS485",
  "BASE_LORAWANEU868_INIT_MSG0": "Init LoRaWAN-EU868 with %1 %2 RS485",
  "BASE_LORAWANEU868_LORAWAN_CONFIG_MSG0": "Config",
  "BASE_LORAWANEU868_LORAWAN_CONFIG_MSG1": "mode",
  "BASE_LORAWANEU868_LORAWAN_CONFIG_MSG2": "device eui *",
  "BASE_LORAWANEU868_LORAWAN_CONFIG_MSG3": "app key *",
  "BASE_LORAWANEU868_LORAWAN_CONFIG_MSG4": "app eui",
  "BASE_LORAWANEU868_LORAWAN_CONFIG_MSG5": "device address",
  "BASE_LORAWANEU868_LORAWAN_CONFIG_MSG6": "app session key",
  "BASE_LORAWANEU868_LORAWAN_CONFIG_MSG7": "network session key",
  "BASE_LORAWANEU868_LORAWAN_CONFIG_MSG8": "RX window param:",
  "BASE_LORAWANEU868_LORAWAN_CONFIG_MSG9": "RX1 delay (1~15)",
  "BASE_LORAWANEU868_LORAWAN_CONFIG_MSG10": "RX2 delay (2~16)",
  "BASE_LORAWANEU868_LORAWAN_CONFIG_MSG11": "RX2 datarate",
  "BASE_LORAWANEU868_LORAWAN_CONFIG_MSG12": "class mode",
  "BASE_LORAWANEU868_P2P_CONFIG_MSG0": "Config P2P parameters",
  "BASE_LORAWANEU868_P2P_CONFIG_MSG1": "frequency",
  "BASE_LORAWANEU868_P2P_CONFIG_MSG2": "spreading factor (5 ~ 12)",
  "BASE_LORAWANEU868_P2P_CONFIG_MSG3": "bandwidth",
  "BASE_LORAWANEU868_P2P_CONFIG_MSG4": "TX power (5 ~ 22)",
  "BASE_LORAWANEU868_P2P_CONFIG_MSG5": "code rate",
  "BASE_LORAWANEU868_P2P_CONFIG_MSG6": "preamble length",
  "BASE_LORAWANEU868_RS485_CONFIG_MSG0": "",
  "BASE_LORAWANEU868_RS485_CONFIG_MSG1": "Config RS485 with",
  "BASE_LORAWANEU868_RS485_CONFIG_MSG2": "baudrate",
  "BASE_LORAWANEU868_RS485_CONFIG_MSG3": "bits",
  "BASE_LORAWANEU868_RS485_CONFIG_MSG4": "parity",
  "BASE_LORAWANEU868_RS485_CONFIG_MSG5": "stop",
  "BASE_LORAWANEU868_RS485_CONFIG_MSG6": "RTS",
  "BASE_LORAWANEU868_RS485_CONFIG_MSG7": "CTS",
  "BASE_LORAWANEU868_RS485_CONFIG_MSG8": "TX buffer",
  "BASE_LORAWANEU868_RS485_CONFIG_MSG9": "RX buffer",
  "BASE_LORAWANEU868_RS485_CONFIG_MSG10": "timeout",
  "BASE_LORAWANEU868_RS485_CONFIG_MSG11": "timeout char",
  "BASE_LORAWANEU868_RS485_CONFIG_MSG12": "invert",
  "BASE_LORAWANEU868_RS485_CONFIG_MSG13": "flow",
  "BASE_LORAWANEU868_RS485_CONFIG_MSG14": "mode",
  "BASE_LORAWANEU868_GET_RECEIVED_DATA_MSG0": "get LoRaWAN-EU868 received data",
  "BASE_LORAWANEU868_GET_RECEIVED_DATA_STRING_MSG0": "get LoRaWAN-EU868 received data as string",
  "BASE_LORAWANEU868_GET_RECEIVED_DATA_COUNT_MSG0": "get LoRaWAN-EU868 received data count",
  "BASE_LORAWANEU868_SEND_DATA_PAYLOAD_MSG0": "LoRaWAN-EU868 send data %1 on port %2 (1 ~ 233)",
  "BASE_LORAWANEU868_SEND_DATA_PAYLOAD_RETURN_MSG0": "LoRaWAN-EU868 send data %1 on port %2 (1 ~ 233) wait %3 ms to confirm",
  "BASE_LORAWANEU868_START_JOIN_LORAWAN_NETWORK_MSG0": "Start LoRaWAN-EU868 join LoRaWAN network, wait %1 ms for response",
  "BASE_LORAWANEU868_START_JOIN_LORAWAN_NETWORK_MSG1": "Successed %1",
  "BASE_LORAWANEU868_START_JOIN_LORAWAN_NETWORK_MSG2": "Failed %1",
  "BASE_LORAWANEU868_SEND_P2P_DATA_MSG0": "Send LoRaWAN-EU868 P2P data %1 , convert to hex %2",
  "BASE_LORAWANEU868_SEND_P2P_DATA_RETURN_MSG0": "send LoRaWAN-EU868 P2P data %1 wait %2 ms to get send result, convert to hex %3 (return True or False)",
  "BASE_LORAWANEU868_GET_P2P_RECEIVE_DATA_MSG0": "get LoRaWAN-EU868 P2P mode receive data in %1 ms, convert to hex %2 (return tuple)",
  "BASE_LORAWANEU868_RS485_SETUP_MSG0": "LoRaWAN-EU868 RS485 setup %1 baudrate %2 bits %3 parity %4 stop %5 TX %6 RX %7",
  "BASE_LORAWANEU868_RS485_SETUP_MSG1": "RTS",
  "BASE_LORAWANEU868_RS485_SETUP_MSG2": "CTS",
  "BASE_LORAWANEU868_RS485_SETUP_MSG3": "TX buffer",
  "BASE_LORAWANEU868_RS485_SETUP_MSG4": "RX buffer",
  "BASE_LORAWANEU868_RS485_SETUP_MSG5": "timeout",
  "BASE_LORAWANEU868_RS485_SETUP_MSG6": "timeout char",
  "BASE_LORAWANEU868_RS485_SETUP_MSG7": "invert",
  "BASE_LORAWANEU868_RS485_SETUP_MSG8": "flow",
  "BASE_LORAWANEU868_RS485_SETUP_MSG9": "mode",
  "BASE_LORAWANEU868_RS485_DEINIT_MSG0": "LoRaWAN-EU868 RS485 deinit",
  "BASE_LORAWANEU868_RS485_AVAILABLE_CHAR_MSG0": "LoRaWAN-EU868 RS485 count of available",
  "BASE_LORAWANEU868_RS485_READ_ALL_MSG0": "LoRaWAN-EU868 RS485 read all bytes (return bytes)",
  "BASE_LORAWANEU868_RS485_READ_BYTES_MSG0": "LoRaWAN-EU868 RS485 read %1 bytes (return bytes)",
  "BASE_LORAWANEU868_RS485_READ_LINE_MSG0": "LoRaWAN-EU868 RS485 read line (return bytes)",
  "BASE_LORAWANEU868_RS485_READ_RAW_DATA_MSG0": "LoRaWAN-EU868 RS485 read a raw data (return 0 ~ 255)",
  "BASE_LORAWANEU868_RS485_WRITE_MSG0": "LoRaWAN-EU868 RS485 write %1",
  "BASE_LORAWANEU868_RS485_WRITE_LINE_MSG0": "LoRaWAN-EU868 RS485 write line %1",
  "BASE_LORAWANEU868_RS485_WRITE_LIST_MSG0": "LoRaWAN-EU868 RS485 write list or tuple %1",
  "BASE_LORAWANEU868_RS485_WRITE_RAW_DATA_LIST_MSG0": "LoRaWAN-EU868 RS485 write raw data %1",
  "BASE_LORAWANEU868_RS485_WRITE_RAW_DATA_MSG0": "LoRaWAN-EU868 RS485 write raw data %1",
  "BASE_LORAWANEU868_RS485_READ_INTO_BUF_MSG0": "LoRaWAN-EU868 RS485 read into buf %1",
  "BASE_LORAWANEU868_RS485_SEND_BREAK_MSG0": "LoRaWAN-EU868 RS485 send break single",
  "BASE_LORAWANEU868_RS485_FLUSH_MSG0": "LoRaWAN-EU868 RS485 flush",
  "BASE_LORAWANEU868_RS485_TXDONE_MSG0": "LoRaWAN-EU868 RS485 is transfer done (return True or False)",
  "BASE_LORAWANUS915": "DTU LoRaWAN-US915",
  "BASE_LORAWANUS915_TITLE": "LoRaWAN-US915",
  "BASE_LORAWANUS915_LORAWAN": "LoRaWAN",
  "BASE_LORAWANUS915_P2P": "P2P",
  "BASE_LORAWANUS915_RS485": "RS485",
  "BASE_LORAWANUS915_INIT_MSG0": "Init LoRaWAN-US915 with %1 %2 RS485",
  "BASE_LORAWANUS915_LORAWAN_CONFIG_MSG0": "Config",
  "BASE_LORAWANUS915_LORAWAN_CONFIG_MSG1": "mode",
  "BASE_LORAWANUS915_LORAWAN_CONFIG_MSG2": "device eui *",
  "BASE_LORAWANUS915_LORAWAN_CONFIG_MSG3": "app key *",
  "BASE_LORAWANUS915_LORAWAN_CONFIG_MSG4": "app eui",
  "BASE_LORAWANUS915_LORAWAN_CONFIG_MSG5": "device address",
  "BASE_LORAWANUS915_LORAWAN_CONFIG_MSG6": "app session key",
  "BASE_LORAWANUS915_LORAWAN_CONFIG_MSG7": "network session key",
  "BASE_LORAWANUS915_LORAWAN_CONFIG_MSG8": "frequency band mask",
  "BASE_LORAWANUS915_LORAWAN_CONFIG_MSG9": "RX window param:",
  "BASE_LORAWANUS915_LORAWAN_CONFIG_MSG10": "RX1 delay (1~15)",
  "BASE_LORAWANUS915_LORAWAN_CONFIG_MSG11": "RX2 delay (2~16)",
  "BASE_LORAWANUS915_LORAWAN_CONFIG_MSG12": "RX2 datarate",
  "BASE_LORAWANUS915_LORAWAN_CONFIG_MSG13": "class mode",
  "BASE_LORAWANUS915_P2P_CONFIG_MSG0": "Config P2P parameters",
  "BASE_LORAWANUS915_P2P_CONFIG_MSG1": "frequency",
  "BASE_LORAWANUS915_P2P_CONFIG_MSG2": "spreading factor (5 ~ 12)",
  "BASE_LORAWANUS915_P2P_CONFIG_MSG3": "bandwidth",
  "BASE_LORAWANUS915_P2P_CONFIG_MSG4": "TX power (5 ~ 22)",
  "BASE_LORAWANUS915_P2P_CONFIG_MSG5": "code rate",
  "BASE_LORAWANUS915_P2P_CONFIG_MSG6": "preamble length",
  "BASE_LORAWANUS915_RS485_CONFIG_MSG0": "",
  "BASE_LORAWANUS915_RS485_CONFIG_MSG1": "Config RS485 with",
  "BASE_LORAWANUS915_RS485_CONFIG_MSG2": "baudrate",
  "BASE_LORAWANUS915_RS485_CONFIG_MSG3": "bits",
  "BASE_LORAWANUS915_RS485_CONFIG_MSG4": "parity",
  "BASE_LORAWANUS915_RS485_CONFIG_MSG5": "stop",
  "BASE_LORAWANUS915_RS485_CONFIG_MSG6": "RTS",
  "BASE_LORAWANUS915_RS485_CONFIG_MSG7": "CTS",
  "BASE_LORAWANUS915_RS485_CONFIG_MSG8": "TX buffer",
  "BASE_LORAWANUS915_RS485_CONFIG_MSG9": "RX buffer",
  "BASE_LORAWANUS915_RS485_CONFIG_MSG10": "timeout",
  "BASE_LORAWANUS915_RS485_CONFIG_MSG11": "timeout char",
  "BASE_LORAWANUS915_RS485_CONFIG_MSG12": "invert",
  "BASE_LORAWANUS915_RS485_CONFIG_MSG13": "flow",
  "BASE_LORAWANUS915_RS485_CONFIG_MSG14": "mode",
  "BASE_LORAWANUS915_GET_RECEIVED_DATA_MSG0": "get LoRaWAN-US915 received data",
  "BASE_LORAWANUS915_GET_RECEIVED_DATA_STRING_MSG0": "get LoRaWAN-US915 received data as string",
  "BASE_LORAWANUS915_GET_RECEIVED_DATA_COUNT_MSG0": "get LoRaWAN-US915 received data count",
  "BASE_LORAWANUS915_SEND_DATA_PAYLOAD_MSG0": "LoRaWAN-US915 send data %1 on port %2 (1 ~ 233)",
  "BASE_LORAWANUS915_SEND_DATA_PAYLOAD_RETURN_MSG0": "LoRaWAN-US915 send data %1 on port %2 (1 ~ 233) wait %3 ms to confirm",
  "BASE_LORAWANUS915_START_JOIN_LORAWAN_NETWORK_MSG0": "Start LoRaWAN-US915 join LoRaWAN network, wait %1 ms for response",
  "BASE_LORAWANUS915_START_JOIN_LORAWAN_NETWORK_MSG1": "Successed %1",
  "BASE_LORAWANUS915_START_JOIN_LORAWAN_NETWORK_MSG2": "Failed %1",
  "BASE_LORAWANUS915_SEND_P2P_DATA_MSG0": "Send LoRaWAN-US915 P2P data %1 , convert to hex %2",
  "BASE_LORAWANUS915_SEND_P2P_DATA_RETURN_MSG0": "send LoRaWAN-US915 P2P data %1 wait %2 ms to get send result, convert to hex %3 (return True or False)",
  "BASE_LORAWANUS915_GET_P2P_RECEIVE_DATA_MSG0": "get LoRaWAN-US915 P2P mode receive data in %1 ms, convert to hex %2 (return tuple)",
  "BASE_LORAWANUS915_RS485_SETUP_MSG0": "LoRaWAN-US915 RS485 setup %1 baudrate %2 bits %3 parity %4 stop %5 TX %6 RX %7",
  "BASE_LORAWANUS915_RS485_SETUP_MSG1": "RTS",
  "BASE_LORAWANUS915_RS485_SETUP_MSG2": "CTS",
  "BASE_LORAWANUS915_RS485_SETUP_MSG3": "TX buffer",
  "BASE_LORAWANUS915_RS485_SETUP_MSG4": "RX buffer",
  "BASE_LORAWANUS915_RS485_SETUP_MSG5": "timeout",
  "BASE_LORAWANUS915_RS485_SETUP_MSG6": "timeout char",
  "BASE_LORAWANUS915_RS485_SETUP_MSG7": "invert",
  "BASE_LORAWANUS915_RS485_SETUP_MSG8": "flow",
  "BASE_LORAWANUS915_RS485_SETUP_MSG9": "mode",
  "BASE_LORAWANUS915_RS485_DEINIT_MSG0": "LoRaWAN-US915 RS485 deinit",
  "BASE_LORAWANUS915_RS485_AVAILABLE_CHAR_MSG0": "LoRaWAN-US915 RS485 count of available",
  "BASE_LORAWANUS915_RS485_READ_ALL_MSG0": "LoRaWAN-US915 RS485 read all bytes (return bytes)",
  "BASE_LORAWANUS915_RS485_READ_BYTES_MSG0": "LoRaWAN-US915 RS485 read %1 bytes (return bytes)",
  "BASE_LORAWANUS915_RS485_READ_LINE_MSG0": "LoRaWAN-US915 RS485 read line (return bytes)",
  "BASE_LORAWANUS915_RS485_READ_RAW_DATA_MSG0": "LoRaWAN-US915 RS485 read a raw data (return 0 ~ 255)",
  "BASE_LORAWANUS915_RS485_WRITE_MSG0": "LoRaWAN-US915 RS485 write %1",
  "BASE_LORAWANUS915_RS485_WRITE_LINE_MSG0": "LoRaWAN-US915 RS485 write line %1",
  "BASE_LORAWANUS915_RS485_WRITE_LIST_MSG0": "LoRaWAN-US915 RS485 write list or tuple %1",
  "BASE_LORAWANUS915_RS485_WRITE_RAW_DATA_LIST_MSG0": "LoRaWAN-US915 RS485 write raw data %1",
  "BASE_LORAWANUS915_RS485_WRITE_RAW_DATA_MSG0": "LoRaWAN-US915 RS485 write raw data %1",
  "BASE_LORAWANUS915_RS485_READ_INTO_BUF_MSG0": "LoRaWAN-US915 RS485 read into buf %1",
  "BASE_LORAWANUS915_RS485_SEND_BREAK_MSG0": "LoRaWAN-US915 RS485 send break single",
  "BASE_LORAWANUS915_RS485_FLUSH_MSG0": "LoRaWAN-US915 RS485 flush",
  "BASE_LORAWANUS915_RS485_TXDONE_MSG0": "LoRaWAN-US915 RS485 is transfer done (return True or False)",
  "UNIT_MINITOF90": "Mini Tof-90°",
  "UNIT_MINITOF90_INIT_MSG0": "Init %1 I2C address %2 (0x08 ~ 0x77)",
  "UNIT_MINITOF90_GET_RANGE_MSG0": "get %1 target distance (mm, return int)",
  "UNIT_MINITOF90_GET_RANGE_MSG1": "If Continuous Measurement Mode is not turned on, calling this function will immediately take a ranging measurement and return the result.",
  "UNIT_MINITOF90_GET_DATA_READY_MSG0": "get %1 data ready status (return True or False)",
  "UNIT_MINITOF90_IS_CONTINUOUS_MODE_MSG0": "get %1 continuous measurement mode status (return True or False)",
  "UNIT_MINITOF90_GET_MEASUREMENT_TIMING_BUDGET_MSG0": "get %1 measurement timing budget (us, return int)",
  "UNIT_MINITOF90_SET_MEASUREMENT_TIMING_BUDGET_MSG0": "Set %1 measurement timing budget to %2 us",
  "UNIT_MINITOF90_START_CONTINUOUS_MSG0": "%1 start continuous measurement",
  "UNIT_MINITOF90_STOP_CONTINUOUS_MSG0": "%1 stop continuous measurement",
  "UNIT_MINITOF90_SET_ADDRESS_MSG0": "Set %1 I2C address %2 (0x08 ~ 0x77)",
  "BASE_ECHO": "Echo",
  "BASE_ECHO_INIT_MSG0": "Init Echo with %1 I2S port %2 sample rate %3",
  "BASE_ECHO_SPEAKER_PLAYWAV_FILE_MSG0": "Echo play WAV file %1 %2",
  "BASE_ECHO_SPEAKER_TONE_MSG0": "Echo play tone freq %1 (Hz) millisecond %2",
  "BASE_ECHO_SPEAKER_PLAY_WAV_MSG0": "Echo play WAV (bytearray / bytes) %1 duration (millisecond) %2",
  "BASE_ECHO_SPEAKER_PLAY_RAW_MSG0": "Echo play PCM (bytearray / bytes) %1 sample rate (Hz) %2 channel %3 bit %4 duration (millisecond) %5",
  "BASE_ECHO_SPEAKER_PAUSE_MSG0": "Echo pause play",
  "BASE_ECHO_SPEAKER_RESUME_MSG0": "Echo resume play",
  "BASE_ECHO_SPEAKER_STOP_MSG0": "Echo stop play",
  "BASE_ECHO_SPEAKER_GET_VOLUME_PERCENTAGE_MSG0": "Echo get volume (return int, 0 ~ 100)",
  "BASE_ECHO_SPEAKER_SET_VOLUME_PERCENTAGE_MSG0": "Echo Set volume %1",
  "BASE_ECHO_RECORD_WAV_FILE_MSG0": "Echo record WAV file %1 %2 sample rate %3 channel %4 bit %5 duration (millisecond) %6",
  "BASE_ECHO_RECORD_PCM_MSG0": "Echo record PCM with %1 sample rate %2 channel %3 bit %4 duration (millisecond) %5",
  "BASE_ECHO_MIC_GET_PCM_MSG0": "get Echo PCM buffer (return bytes)",
  "MODULE_LORA868V12": "LoRa868 v1.2",
  "MODULE_LORA868V12_INIT2_MSG0": "Init LoRa868 %1",
  "MODULE_LORA868V12_INIT2_MSG1": "reset pin",
  "MODULE_LORA868V12_INIT2_MSG2": "CS pin",
  "MODULE_LORA868V12_INIT2_MSG3": "interrupt pin",
  "MODULE_LORA868V12_INIT2_MSG4": "busy pin",
  "MODULE_LORA868V12_INIT2_MSG5": "frequency (850000 ~ 930000 kHz)",
  "MODULE_LORA868V12_INIT2_MSG6": "bandwidth",
  "MODULE_LORA868V12_INIT2_MSG7": "spreading factor (7 ~ 12)",
  "MODULE_LORA868V12_INIT2_MSG8": "coding rate (5 ~ 8)",
  "MODULE_LORA868V12_INIT2_MSG9": "preamble length (0 ~ 255)",
  "MODULE_LORA868V12_INIT2_MSG10": "syncword (0 ~ 0xff)",
  "MODULE_LORA868V12_INIT2_MSG11": "output power (-9 ~ 22 dBm)",
  "MODULE_LORA868V12_SEND_RETURN_MSG0": "%1 send packet %2 (return int)",
  "MODULE_LORA868V12_SEND_WITH_TIME_RETURN_MSG0": "%1 send packet %2 at %3 milliseconds (return int)",
  "MODULE_LORA868V12_SEND_MSG0": "%1 send packet %2",
  "MODULE_LORA868V12_START_RECV_MSG0": "%1 start receive data",
  "MODULE_LORA868V12_STANDBY_MSG0": "Set %1 to standby mode",
  "MODULE_LORA868V12_SLEEP_MSG0": "%1 sleep",
  "MODULE_LORA868V12_IRQ_TRIGGERED_MSG0": "%1 check if the IRQ has been triggered (return True or False)",
  "MODULE_LORA868V12_RECV_MSG0": "%1 receive with timeout %2 milliseconds RX length %3 RX packet %4",
  "MODULE_LORA868V12_RECEIVE_DATA_EVENT_MSG0": "When %1 receive data %2",
  "MODULE_LORA868V12_RECV_DATA_PARAM_MSG0": "get %2 in receive data %1",
  "MODULE_LORA868V12_SET_FREQ_MSG0": "%1 set frequency to %2 (850000 ~ 930000 kHz)",
  "MODULE_LORA868V12_SET_SF_MSG0": "%1 set spreading factor to %2 (7 ~ 12)",
  "MODULE_LORA868V12_SET_BW_MSG0": "%1 set bandwidth to %2",
  "MODULE_LORA868V12_SET_CODING_RATE_MSG0": "%1 set coding rate to %2 (5 ~ 8)",
  "MODULE_LORA868V12_SET_SYNCWORD_MSG0": "%1 set syncword to %2 (0 ~ 0xff)",
  "MODULE_LORA868V12_SET_PREAMBLE_LEN_MSG0": "%1 set preamble length to %2 (0 ~ 255)",
  "MODULE_LORA868V12_SET_OUTPUT_POWER_MSG0": "%1 set output power to %2 (-9 ~ 22 dBm)",
  "MODULE_AUDIO": "Audio",
  "MODULE_AUDIO_INIT_MSG0": "Init Audio %1 with %2 sample rate %3",
  "MODULE_AUDIO_INIT_MSG1": "channel",
  "MODULE_AUDIO_INIT_MSG2": "offset",
  "MODULE_AUDIO_INIT_MSG3": "MUX",
  "MODULE_AUDIO_INIT_CORES3_MSG0": "Init Audio %1 with %2 sample rate %3 switch %4",
  "MODULE_AUDIO_SPEAKER_PLAYWAV_FILE_MSG0": "%1 play WAV file %2 %3",
  "MODULE_AUDIO_SPEAKER_TONE_MSG0": "%1 play tone freq %2 (Hz) millisecond %3",
  "MODULE_AUDIO_SPEAKER_PLAY_WAV_MSG0": "%1 play WAV (bytearray / bytes) %2 duration (millisecond) %3",
  "MODULE_AUDIO_SPEAKER_PLAY_RAW_MSG0": "%1 play PCM (bytearray / bytes) %2 sample rate (Hz) %3 channel %4 bit %5 duration (millisecond) %6",
  "MODULE_AUDIO_SPEAKER_PAUSE_MSG0": "%1 pause play",
  "MODULE_AUDIO_SPEAKER_RESUME_MSG0": "%1 resume play",
  "MODULE_AUDIO_SPEAKER_STOP_MSG0": "%1 stop play",
  "MODULE_AUDIO_SPEAKER_GET_VOLUME_PERCENTAGE_MSG0": "get %1 volume (return int, 0 ~ 100)",
  "MODULE_AUDIO_SPEAKER_SET_VOLUME_PERCENTAGE_MSG0": "Set %1 volume %2 %",
  "MODULE_AUDIO_RGB_SET_COLOR_MSG0": "Set %1 LED %2 (0~2) color %3",
  "MODULE_AUDIO_RGB_FILL_COLOR_MSG0": "Fill %1 all LED color %2",
  "MODULE_AUDIO_RGB_SET_BRIGHTNESS_MSG0": "Set %1 LED brightness %2 (0~100)",
  "MODULE_AUDIO_RECORD_WAV_FILE_MSG0": "%1 record WAV file %2 %3 sample rate %4 channel %5 bit %6 duration (millisecond) %7",
  "MODULE_AUDIO_RECORD_PCM_MSG0": "%1 record PCM with %2 sample rate %3 channel %4 bit %5 duration (millisecond) %6",
  "MODULE_AUDIO_MIC_GET_PCM_MSG0": "get %1 PCM buffer (return bytes)",
  "UNIT_AUDIOPLAYER": "AudioPlayer",
  "UNIT_AUDIOPLAYER_INIT_MSG0": "Init %1 %2",
  "UNIT_AUDIOPLAYER_INIT_MSG1": "UART",
  "UNIT_AUDIOPLAYER_CHECK_PLAY_STATUS_MSG0": "get %1 current play status (return int)",
  "UNIT_AUDIOPLAYER_PLAY_AUDIO_MSG0": "%1 play audio",
  "UNIT_AUDIOPLAYER_PAUSE_AUDIO_MSG0": "%1 pause audio",
  "UNIT_AUDIOPLAYER_STOP_AUDIO_MSG0": "%1 stop audio",
  "UNIT_AUDIOPLAYER_NEXT_AUDIO_MSG0": "%1 play next audio",
  "UNIT_AUDIOPLAYER_PREVIOUS_AUDIO_MSG0": "%1 play previous audio",
  "UNIT_AUDIOPLAYER_PLAY_AUDIO_BY_INDEX_MSG0": "%1 play specify audio %2 (1 ~ 65535)",
  "UNIT_AUDIOPLAYER_GET_TOTAL_AUDIO_NUMBER_MSG0": "get %1 total audio number (return int)",
  "UNIT_AUDIOPLAYER_GET_CURRENT_AUDIO_NUMBER_MSG0": "get %1 current audio number (return int)",
  "UNIT_AUDIOPLAYER_SELECT_AUDIO_NUM_MSG0": "%1 select specify audio %2 (1 ~ 65535)",
  "UNIT_AUDIOPLAYER_INCREASE_VOLUME_MSG0": "%1 increase volume",
  "UNIT_AUDIOPLAYER_DECREASE_VOLUME_MSG0": "%1 decrease volume",
  "UNIT_AUDIOPLAYER_SET_VOLUME_MSG0": "Set %1 volume to %2 (0 ~ 30)",
  "UNIT_AUDIOPLAYER_GET_VOLUME_MSG0": "get %1 current volume (return int)",
  "UNIT_AUDIOPLAYER_GET_PLAY_MODE_MSG0": "get %1 play mode (return int)",
  "UNIT_AUDIOPLAYER_SET_PLAY_MODE_MSG0": "Set %1 play mode to %2",
  "UNIT_AUDIOPLAYER_PLAY_STATUS_MSG0": "Stopped",
  "UNIT_AUDIOPLAYER_PLAY_STATUS_MSG1": "Playing",
  "UNIT_AUDIOPLAYER_PLAY_STATUS_MSG2": "Paused",
  "UNIT_AUDIOPLAYER_PLAY_MODE_MSG0": "Repeat All",
  "UNIT_AUDIOPLAYER_PLAY_MODE_MSG1": "Repeat One",
  "UNIT_AUDIOPLAYER_PLAY_MODE_MSG2": "Folder Repeat",
  "UNIT_AUDIOPLAYER_PLAY_MODE_MSG3": "Shuffle Play",
  "UNIT_AUDIOPLAYER_PLAY_MODE_MSG4": "Single Play",
  "UNIT_AUDIOPLAYER_PLAY_MODE_MSG5": "Sequential Play"
}
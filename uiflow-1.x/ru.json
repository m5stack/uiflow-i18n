{
  "EVENT": "События и циклы",
  "UI": "UI",
  "TITLE": "Заголовок",
  "LABEL": "Надпись",
  "RECT": "Rect",
  "CIRCLE": "Круг",
  "IMAGE": "Изображение",
  "TRIANGLE": "Треугольник",
  "LINE": "Отрезок",
  "TOUCH_BUTTON": "Кнопка",
  "SWITCH": "Переключатель",
  "SLIDER": "Ползунок",
  "BAR": "Прогресс",
  "CHECKBOX": "Флажок",
  "HARDWARES": "Аппаратное обеспечение",
  "BASE": "Base",
  "HDRIVER": "H·Driver",
  "MOTION": "Motion",
  "UPDATA": "Журнал обновлений",
  "SPEAKER": "Динамик",
  "TOUCH": "Сенсорный ввод",
  "RGB": "RGB",
  "IMU": "IMU",
  "ENV": "ENV",
  "ANGLE": "ANGLE",
  "PIR": "PIR",
  "NEOPIXEL": "RGB LED",
  "JOYSTICK": "JOYSTICK",
  "LIGHT": "LIGHT",
  "EARTH": "EARTH",
  "MAKEY": "MAKEY",
  "MODULES": "Модули",
  "LIDARBAR": "LidarBOT",
  "STEP_MOTOR": "STEPMOTOR",
  "WEIGHT": "WEIGHT",
  "TRACK": "TRACE",
  "SERVO": "SERVO",
  "SERVO2": "SERVO2",
  "PIN_SERVO": "Pin Servo",
  "NTP": "NTP",
  "BALA": "Bala",
  "BALA_MOTOR": "Bala Motor",
  "LEGO_MOTOR": "DC Motor",
  "VARIABLES": "Переменные",
  "MATH": "Математика",
  "TEXT": "Текст",
  "LOOPS": "Циклы",
  "LOGIC": "Логика",
  "LISTS": "Списки",
  "GRAPHIC": "Графика",
  "EMOJI": "Рисунок по клеточкам",
  "TIMER": "Таймеры",
  "FUNCTIONS": "Функции",
  "ADVANCED": "Расширенные возможности",
  "PIN": "PIN",
  "EASY": "Easy I/O",
  "SD": "SD",
  "GPIO": "GPIO",
  "PWM": "PWM",
  "ADC": "ADC",
  "DAC": "DAC",
  "UART": "UART",
  "IIC": "I2C Master",
  "HEART": "Heart",
  "EXECUTE": "Исполнение",
  "REMOTE": "Удалённый доступ",
  "BUTTON": "BUTTON",
  "DUAL_BUTTON": "Dual-BUTTON",
  "RELAY": "RELAY",
  "SCREEN": "Экран",
  "SCREEN_SET_BGCOLOR": "%1 Окрасить фон %2",
  "SCREEN_SET_SHOW": "Повернуть экран",
  "SCREEN_SET_PARITALSHOW": "Set screen parital show x %1 y %2 w %3 h %4",
  "SCREEN_SET_SETHV": "Set screen HV %1",
  "_OPTION_LEFT": "слева",
  "_OPTION_RIGHT": "справа",
  "_OPTION_TO_LEFT": "влево",
  "_OPTION_TO_RIGHT": "вправо",
  "_OPTION_TO_FORWARD": "вперёд",
  "_OPTION_TO_BACKWARD": "назад",
  "_OPTION_TO_LEFTWHEEL": "левое колесо",
  "_OPTION_TO_RIGHTWHEEL": "правое колесо",
  "_OPTION_TO_CLOCKWISE": "по часовой стрелке",
  "_OPTION_TO_ANTICLOCKWISE": "против часовой стрелки",
  "_OPTION_TO_BORDERCOLOR": "цвет контура",
  "_OPTION_TO_FILLCOLOR": "цвет заливки",
  "_OPTION_TO_UP": "отпущена",
  "_OPTION_TO_DOWN": "нажата",
  "_OPTION_TO_PRESSFOR": "удерживать в течении",
  "_OPTION_DOUBLE": "двойное нажатие",
  "FUNCTION_IN_EVENT": "%1 setup %2",
  "FUNCTION_OUT_EVENT": "%1 Out_enent %2",
  "FUNCTION_MAIN_EVENT": "%1 Loop %2",
  "BUTTONC_CALLBACK": "Button %1 %2  ",
  "BUTTONC_MULITBTNCB": "Button %1 + %2 press ",
  "BUTTONC_STATE": " состояние кнопки %1  %2  %3 ",
  "BUTTONC_ISPRESSED": "  %1 %2 is %3 (return True or False)",
  "BASIC_ON_LOOP": "Loop ",
  "UNIT_BUTTON": "Кнопка %1 %2  ",
  "UNIT_DUAL_BUTTON": " Кнопка %1 %2 %3",
  "UNIT_DUAL_BUTTON_STATE": " %1 состояние кнопки %2  %3 %4",
  "SPEAKER_TONE": "%1 Звук с частотой %2 Гц и длительностью %3 %4 мс ",
  "SPEAKER_VOL": "Установить громкость %1",
  "SPEAKER_SING": "%1 сыграть ноту %2 %3 такт.",
  "SPEAKER_PLAY_WAV": "play local WAV file %1",
  "RGB_INIT": "%1 Настроить RGB-панели",
  "RGB_SET_ALL": "%1 Зажечь все панели %2",
  "RGB_SET_ALL_RGB": "%1 Зажечь все панели R %2 G %3 B %4",
  "RGB_SET_DIR": "%1 Зажечь панель %2 %3",
  "RGB_SET_DIR_RGB": "%1 Зажечь панель %2 R %3 G %4 B %5",
  "RGB_SET": "%1 Зажечь %2 -й светодиод %3",
  "RGB_SET_RGB": "%1 Зажечь %2 -й светодиод R %3 G %4 B %5",
  "RGB_SET_BRIGHTNESS": "%1 Установить яркость всех светодиодов %2",
  "RGB_SET_SHOW_LOCK": "Set show lock %1",
  "RGB_SET_COLOR_FROM_RGB": "Set %1 from %2 to %3 R %4 G %5 B %6",
  "RGB_SET_LED_MATRIX": "Set atom matrix %1",
  "IMU_GET_X": "%1 Получить X",
  "IMU_GET_Y": "%1 Получить Y",
  "IMU_GET_Z": "%1 Получить Z",
  "IMU_GET_ACC_X": "%1 Получить X от акселерометра",
  "IMU_GET_ACC_Y": "%1 Получить Y от акселерометра",
  "IMU_GET_ACC_Z": "%1 Получить Z от акселерометра",
  "IMU_IS_LEVEL": "%1 level",
  "IMU_IS_STAND": "%1 stand",
  "IMU_IS_LEFT_TILT": "%1 left tilt",
  "IMU_IS_RIGHT_TILT": "%1 right tilt",
  "IMU_IS_OTHER_SIDE": "%1 other side",
  "IMU_GET_X_tow": "%1 Получить X",
  "IMU_GET_Y_tow": "%1 Получить Y",
  "IMU_GET_Z_tow": "%1 Получить Z",
  "IMU_GET_ACC_X_tow": "%1 Получить X от акселерометра",
  "IMU_GET_ACC_Y_tow": "%1 Получить Y от акселерометра",
  "IMU_GET_ACC_Z_tow": "%1 Получить Z от акселерометра",
  "IMU_IS_LEVEL_tow": "%1 level",
  "IMU_IS_STAND_tow": "%1 stand",
  "IMU_IS_LEFT_TILT_tow": "%1 left tilt",
  "IMU_IS_RIGHT_TILT_tow": "%1 right tilt",
  "IMU_IS_OTHER_SIDE_tow": "%1 other side",
  "TOUCH_READ": "%1 Получить координаты касания",
  "TOUCH_READ_X": "%1 Получить координату X касания",
  "TOUCH_READ_Y": "%1 Получить координату Y касания",
  "TOUCH_STATUS": "%1 Получить состояние касания",
  "DHT12_INIT": "%1 Setup DHT Module",
  "DHT12_PRESSURE": "%1 Get %2 Pressure (hPa)",
  "DHT12_GET_TEMPERATURE": "%1 Get %2 Temperature (°C)",
  "DHT12_GET_HUMIDITY": "%1 Get %2 Humidity (%)",
  "JOYSTICK_X": "%1 Получить значение X с %2",
  "JOYSTICK_Y": "%1 Получить значение Y с %2",
  "JOYSTICK_REVERSAL_X": "%1 Получить ревер. значение X с %2",
  "JOYSTICK_REVERSAL_Y": "%1 Получить ревер. значение Y с %2",
  "JOYSTICK_PRESS": "%1 Получить состояние нажатия на %2",
  "LIGHT_A_READ": "%1 Получить аналоговое значение с %2",
  "LIGHT_D_READ": "%1 Получить цифровое значение с %2",
  "EARTH_A_READ": "%1 Получить аналоговое значение с %2",
  "EARTH_D_READ": "%1 Получить цифровое значение с %2",
  "MAKEY_VALUE": "%1 Получить значение с %2",
  "MAKEY_PLAY_PIANO": "%1 %2 Start piano mode  %3 beat",
  "MAKEY_ALL_VALUE": "%1 Получить все значения с %2",
  "SERVO_INIT": "%1 set %2 %3  : pin %4",
  "SERVO_ANGLE": "%1 Set %2 servo %3 rotate %4 %5",
  "SERVO_WRITE": "%1 Set %2 servo %3 write %4 %5  μs",
  "SERVO_UNIT_WRITE_US": "%1 Отправить импульс %4 %5 (500 ~ 2500) мкс на %2 %3",
  "SERVO_UNIT_WRITE_ANGLE": "%1 %2 %3 повернуть на %4 (0 ~ 180) °",
  "WEIGH_ZERO": "%1 %2 обнулить >0<-",
  "WEIGH_GET_WEIGHT": "%1 Получить массу с %2",
  "WEIGH_GET_RAWDATA": "%1 Получить RAW-данные с %2",
  "HEART_GET_HEARTRATE": "%1 Получить ЧСС с %2",
  "HEART_SET_MODE": "Установить режим %2 для %1",
  "HEART_GET_SPO2": "%1 Получить концентрацию Sp02 с %2",
  "HEART_SET_LED_CURRENT": "Установить ток светодиодов %2 %3 на %1",
  "M5TRACK_GET_ANALOG": "%1 Get %2 analog value (return int, 0 ~ 1023)",
  "M5TRACK_GET_DIGITAL": "%1 Get %2 digital value (return 0 or 1)",
  "M5TRACK_SET_ANALOG": "%1 set %2 threshold limit value %3 (0 ~ 1023)",
  "RELAY_SET_ON": "%1 Включить реле %2",
  "RELAY_SET_OFF": "%1 Выключить реле %2",
  "NXT_INIT": "%1 %2 %3 : port %4 %5 ",
  "NXT_SET_PWM": "%1 Set %2 %3 rotate %4 speed %5 %6",
  "NXT_RUN_GOTO": "%1 %2 Go To Position %3 %4 MaxSpeed %5",
  "NXT_RUN": "%1 %2 Run %3 %4 %5 Speed %6",
  "NXT_STOP": "%1 Остановить %2",
  "NXT_READ_ENCODER": "%1 Получить значение с энкодера %2",
  "LEGO_REGISTER_MOTOR": "%1 %2  : port %3 %4 ",
  "LEGO_SET_PWM": "%1 Set %2 %3 rotate %4 pwm %5",
  "LEGO_SET_SPEED": "%1 Set %2 %3 rotate %4 speed %5",
  "LEGO_SET_ANGLE": "%1 Set %2 %3 rotate %4 angle %5",
  "LEGO_SET_ANGLE_ZERO": "%1 Set %2 angle to 0 %3",
  "LEGO_STEP": "%1 Stop %2",
  "LEGO_BRAKE": "%1 Brake %2",
  "LEGO_READ_ENCODER": " Read %1 %2 encode",
  "LEGO_CLEAR": "%1 Clear %2 encode",
  "LCD_CLEAR": "%1 Очистить экран",
  "LCD_FILL": "%1 Залить экран %2",
  "LCD_PRINT": " Текст %1 X %2 Y %3 %4 %5 и поворотом %6",
  "LCD_SETFONT": "%1 Шрифт %2",
  "LCD_PIXEL": "%1 Пиксель X %2 Y %3 %4 %5",
  "LCD_LINE": "%1 Отрезок от X %2 Y %3 до X1 %4 Y1 %5 %6 %7",
  "LCD_RECT": "%1 Прямоугольник от X %2 Y %3 длинной %4 и высотой %5 %6 %7 %8",
  "LCD_TRIANGLE": "%1 Треугольник X %2 Y %3 X1 %4 Y1 %5 X2 %6 Y2 %7 %8 %9 %10",
  "LCD_CIRCLE": "%1 Круг в X %2 Y %3 радиусом %4 %5 %6 %7",
  "LCD_ELLIPSE": "%1 Эллипс в X %2 Y %3 RX %4 RY %5 %6 %7 %8",
  "LCD_ARC": "%1 Дуга в X %2 Y %3 с радиусом %4 и толщиной %5 от %6 до %7 %8 %9 %10",
  "LCD_POLYGON": "%1 Многоугольник в X %2 Y %3 с радиусом %4 , %5 сторонами, толщиной %6 %7 %8 %9 %10 и поворотом %11 °",
  "EMOJI_SET_SINGLE": "%1 Окрасить клеточку по линии %3 и ряду %2 %4",
  "EMOJI_SHOW": "Окрасить сетку",
  "EMOJI_CHANGE": "%1 Изменить фон %2",
  "GPIO_PINOUT": "%1 Присвоить %2 %3 -й контакт. Режим %4 Подтягивание %5 ",
  "GPIO_PININ": "%1 Установить ВЫСОКИЙ уровень %2",
  "GPIO_PINOUT_VALUE": "%1 Установить НИЗКИЙ уровень %2",
  "GPIO_PININ_VALUE": "%1 Установить значение %2 на %3",
  "PWM_PIN": "%1 Присвоить %2 %3 -й контакт. Частота %4 Гц. Скважинность %5 мс. Таймер %6  ",
  "PWM_FREQ": "%1 Установить частоту %2 Гц на %3",
  "PWM_DUTY": "%1 Установить скважинность %2 мс на %3 ",
  "PWM_PAUSE": "%1 На паузу %2",
  "PWM_RESUME": "%1 Снять с паузы %2",
  "PWN_HOLD_US": "Установить ВЫСОКИЙ уровень длительностью %2 мкс/цикл на %1",
  "ADC_PIN": "%1 Присвоить %2 %3 -й контакт",
  "ADC_READ": "%1 Получить значение с %2",
  "ADC_WIDTH": "%1 Установить разрешение %3 для %2",
  "ADC_ATTEN": "%1 Установить аттенюацию %3 для %2",
  "DAC_PIN": "%1 Присвоить %2 %3 -й контакт",
  "DAC_WIDTH": "%1 Установить значение %3 на %2",
  "DAC_FREQ": "%1 Установить частоту %3 Гц на %2",
  "DAC_BEEP": "%1 Звук с частотой %3 Гц, длительностью %4 мс, громкостью %5 на %2",
  "DAC_WAVEFROM": "%1 %4 сигнал с частотой %3 Гц, длительностью %5 мс, громкостью %6 , фазой %7 , инверсией %8 на %2",
  "DAC_STOPWAVE": "%1 Остановить сигнал на %2",
  "UART_PIN": "%1 %2 Присвоить %7 контакты TX %3 и RX %4 %5 . Скорость %6 бод",
  "UART_READ": "%1 Получить все данные с %2",
  "UART_READ_CHARACTERS": "%1 Получить %3 символов с %2",
  "UART_READLINE": "Получить строку с %1 %2",
  "UART_READINTO": "%1  %2 read to %3 ",
  "UART_WRITE": "Отправить %1 %2 по %3 ",
  "UART_READANY": "%1 Очистить кэш %2",
  "UART_WRITE_NUMBER": "Отправить число %1 по %2",
  "UART_WRITE_LINE": "Отправить строку %1 по %2",
  "UART_WRITE_RAW_DATA": "Отправить RAW-данные %1 по %2",
  "IIC_WRITE_BYTE": "Отправить в регистр %2 %1 один byte %3",
  "IIC_WRITE_BIG": "Отправить в регистр %2 %1 один short %3. Представление %4",
  "IIC_SCAN": "Поиск I2C-устройств на %1",
  "IIC_SET": "Присвоить %1 %2 и . Частота %3 Гц",
  "IIC_SET_C": "Присвоить %1 контакты SDA %2 SCL %3 , . Частота %4 Гц",
  "IIC_AVAILABLE": "Получить список свободных адресов на %1",
  "IIC_ADDR": " addr %1 is ready",
  "IIC_READ_REQ": "Получить один байт с регистра %2 %1",
  "IIC_READ_READ": "Получить %2 байт. с %1",
  "IIC_READ_RES": "Получить с регистра %2 %1 один short. Представление %3",
  "IIC_READ_REG": "Получить с регистра %2 %1 %3  -й байт",
  "IIC_READ_ADDR_FROM": "  read addr %1 reg %2 count %3",
  "IIC_READ_BYTE": "Получить с %1 один байт",
  "IIC_READ_ADDR_FROM_BYTE": "  Read addr %1 reg %2 one byte",
  "IIC_WRITE_MEM_DATA": "Отправить в память регистра %2 %1 значение %3 . Представление %4",
  "IIC_WRITE_DATA": "Отправить по %1 значение %2 . Представление %3",
  "IIC_READ_MEM_DATA": "Получить с памяти регистра %2 %1 число %3 . Представление %4",
  "IIC_READ_DATA": "Read %1 data num %2 type %3",
  "IIC_GET_DATA_IN_LIST": "Получить данные из %1 по индексу %2",
  "EXECUTE_IN": "%1 Выполнить код %2 ",
  "ANGLE_READ": "%1 Получить значение с %2",
  "ANGLE_READRAW": "%1 Get %2 readraw",
  "PIR_READ": "%1 Получить состояние %2",
  "RGB_MULTI_SET_COLOR": "%1 Зажечь %3 -й светодиод %2 %4 %5",
  "RGB_MULTI_SET_COLOR_FROM": "%1 Зажечь светодиоды %2 с %3 по %4 %5 %6",
  "RGB_MULTI_SET_COLOR_ALL": "%1 Зажечь все свтодиоды %2 %3 %4",
  "RGB_MULTI_SET_BRIGHTNESS": "%1 Установить яркость %3 %2",
  "RGB_MULTI_SET_COLOR_FROM_RGB": "%1 Зажечь светодиоды %2 с %3 по %4 R %5 G %6 B %7",
  "COLOR_GETR": "Получить долю красного с %1",
  "COLOR_GETD": "Получить RAW-данные с %1",
  "COLOR_GETG": "Получить долю зелёноого с %1",
  "COLOR_GETB": "Получить долю синего с %1",
  "FINGER_GET_STATE": "Получить состояние %1",
  "FINGER_REMOVEALL": "Удалить все отпечатки с %1",
  "FINGER_REMOVE_USER": " Удалить отпечаток с %1 под ID %2",
  "FINGER_GET_ID": "Получить ID отпечатка",
  "FINGER_GET_ACCESS": "Получить доступ",
  "FINGER_ADD_USER": "Добавить пользователя под ID %2 с доступом %3 в %1",
  "FINGER_READ": "При получении ID и доступа пользователя с %1",
  "RFID_READSTR": "Получить строку по адресу %2 с %1",
  "RFID_WRITE": "Отправить %2 по адресу %3 на %1",
  "RFID_CARDON": "Рядом ли карта с %1 ?",
  "RFID_UID": "Получить UID карты с %1",
  "LIDARCAR_DRAWMAP": "Lidarbot Draw Map",
  "LIDARCAR_GETDISTANCE": "Lidarbot Get Distance %1",
  "LIDARCAR_SETSERVO": "Lidarbot Set Servo %1 angle %2",
  "LIDARCAR_SETSTEPMOTOR": "Lidarbot Set Motor Speed X (-7~7): %1 Y (-7~7): %2 Z (-7~7): %3 A (-7~7): %4",
  "LIDARCAR_TURNRIGHT": "Lidarbot Turn Right Speed %1",
  "LIDARCAR_TURNLEFT": "Lidarbot Turn Left Speed %1",
  "LIDARCAR_GOBACK": "Lidarbot Go Back Speed %1",
  "LIDARCAR_GOAHEAD": "Lidarbot %2 Speed (0±7)%1",
  "LIDARCAR_SETONERGB": "Lidarbot set number %2 with neopixel %1",
  "LIDARCAR_SETRGB": "Lidarbot set %2 with neopixel %1",
  "LIDARCAR_CONTROL": "Lidarbot X axis speed (0±7) %1 Y axis speed (0±7) %2",
  "LORAWAN_INITTRX": "При получении данных на LoRaWAN",
  "LORAWAN_INITP2P": "Установить частоту P2P %1 МГц",
  "LORAWAN_DATA": "Получить данные",
  "LORAWAN_TXT": "Отправить строку %1",
  "CARDKB_GETKEY": "Получить данные клавиши с %1",
  "CARDKB_GETSTR": "Получить строку с %1",
  "CARDKB_GETPRESSED": "%1 Get pressed",
  "MOTOR_INSTANCE": "Присвоить %1 %2 %3 мотор по адресу %4",
  "MOTOR_MOVE_XYZ": "Установить %1 %2 в X %3 Y %4 Z %5 со скоростью %6 %7 мм/с",
  "MOTOR_G_CODE": "Выполнить G-code %2 %3 на %1",
  "MOTOR_SET_MODE": "Установить режим %2 %3 для %1",
  "MOTOR_LOCK": "Заблокировать %1",
  "MOTOR_UNLOCK": "Разблокировать %1",
  "TIMER_DELAY": "%2 Ждать %1 с",
  "CONVENT_INT": "Преобразовать в int %1",
  "CONVENT_STR": "Преобразовать в str %1",
  "CONVENT_FLOAT": "Преобразовать в float %1",
  "MATH_HEX_NUMBER": "HEX ",
  "M5BALA_MOVE": "%1 Двигаться %2  %3 %4",
  "M5BALA_TURN": "%1 Повернуть %2 на %3 %4 °",
  "M5BALA_ROTATE": "%1 Развернуться %2 на %3 %4 °",
  "M5BALA_GET_ANGLE": "Получить значение угла",
  "M5BALA_SET_OFFSET": "Установить смещение угла %1 °",
  "M5BALA_LOOP": "Сохранять равновесие",
  "BUTTONA_PRESSED_HANDLER": "%1 ButtonA_Pressed %2",
  "BUTTONB_PRESSED_HANDLER": "%1 ButtonB_Pressed %2",
  "BUTTONC_PRESSED_HANDLER": "%1 ButtonC_Pressed %2",
  "PINS_ANALOG_READ": "%1 analog read pin %2",
  "PINS_ANALOG_WRITE": "%1 analog write pin %2 %3 duty %4",
  "PINS_ANALOG_TOGGLE": "%1 digital toggle pin %2",
  "PINS_DIGITAL_READ": "%1 digital read  %2 Value",
  "PINS_DIGITAL_GET": "%1 Получить значение с %2",
  "PINS_DIGITAL_SET": "%1 Установить значение %3 на %2",
  "PINS_DIGITAL_WRITE": "%1 digital write pin %2 %3 value %4",
  "PINS_SET_MODE": "%1 Set pin %2 %3 mode %4 %5 pull %6",
  "PINS_SET_MAP": "map %1 from low %2 from high %3 to low %4 to high %5",
  "TITLE_SET_TEXT": "Присвоить %1 текст %2 %3",
  "TITLE_SHOW": "%1 Показать %2",
  "TITLE_HIDE": "%1 Скрыть %2",
  "TITLE_SET_COLOR": "%1 Установить цвет %2 %3",
  "TITLE_SET_COLOR_RGB": "%1 Установить %2 цвет R %3 G %4 B %5",
  "TITLE_SET_BGCOLOR": "%1 Установить %2 цвет фона %3",
  "TITLE_SET_BGCOLOR_RGB": "%1 Установить %2 цвет фона R %3 G %4 B %5",
  "LABEL_SET_MODE": "%1 Сделать %2 %3",
  "LABEL_SET_TEXT": "%1 Присвоить %2 текст %3",
  "LABEL_SET_POSITION": "%1 Установить положение %2 в X %3 Y %4",
  "LABEL_SET_POSITION_X": "%1 Установить положение %2 по X %3",
  "LABEL_SET_POSITION_Y": "%1 Установить положение %2 по Y %3",
  "LABEL_SET_ROTATE": "%1 Повернуть %2 на %3 °",
  "LABEL_SET_COLOR": "%1 Установить %2 цвет %3",
  "LABEL_SET_COLOR_RGB": "%1 Установить %2 цвет R %3 G %4 B %5",
  "LABEL_SET_FONT": "%1 Установить %2 шрифт %3",
  "RECT_SET_MODE": "%1 Сделать %2 %3",
  "RECT_SET_SIZE": "%1 Установить %2 ширину %3 и высоту %4 пикс.",
  "RECT_SET_SIZE_WIDTH": "%1 Установить %2 ширину %3 пикс.",
  "RECT_SET_SIZE_HEIGHT": "%1 Установить %2 высоту %3",
  "RECT_SET_POSITION": "%1 Установить положение %2 в X %3 Y %4",
  "RECT_SET_POSITION_X": "%1 Установить положение %2 по X %3",
  "RECT_SET_POSITION_Y": "%1 Установить положение %2 по Y %3",
  "RECT_SET_BGCOLOR": "%1 Установить цвет %2 %3",
  "RECT_SET_BGCOLOR_RGB": "%1 Установить цвет %2 R %3 G %4 B %5",
  "RECT_SET_BORDER_COLOR": "%1 Установить цвет контура %2 %3",
  "RECT_SET_BORDERCOLOR_RGB": "%1 Установить цвет контура %2 R %3 G %4 B %5",
  "CIRCLE_SET_MODE": "%1 Сделать %2 %3",
  "CIRCLE_SET_SIZE": "%1 Установить радиус %2 %3 пикс.",
  "CIRCLE_SET_POSITION": "%1 Установить положение %2 в X %3 Y %4",
  "CIRCLE_SET_POSITION_X": "%1 Установить положение %2 по X %3",
  "CIRCLE_SET_POSITION_Y": "%1 Установить положение %2 по Y %3",
  "CIRCLE_SET_BGCOLOR": "%1 Установить цвет фона %2 %3",
  "CIRCLE_SET_BGCOLOR_RGB": "%1 Установить цвет фона %2 R %3 G %4 B %5",
  "CIRCLE_SET_BORDERCOLOR": "%1 Установить цвет контура %2 %3",
  "CIRCLE_SET_BORDERCOLOR_RGB": "%1 Установить цвет контура %2 R %3 G %4 B %5",
  "TRIANGLE_SET_MODE": "%1 Сделать %2 %3",
  "TRIANGLE_SET_SIZE": "%1 Установить %2 в X1 %3 Y1 %4 X2 %5 Y2 %6 X3 %7 Y3 %8",
  "TRIANGLE_SET_BGCOLOR": "%1 Установить цвет %2 %3",
  "TRIANGLE_SET_BGCOLOR_RGB": "%1 Установить цвет %2 R %3 G %4 B %5",
  "TRIANGLE_SET_BORDERCOLOR": "%1 Установить цвет контура %2 %3",
  "TRIANGLE_SET_BORDERCOLOR_RGB": "%1 Установить цвет контура %2 R %3 G %4 B %5",
  "LINE_SET_MODE": "%1 Сделать %2 %3",
  "LINE_SET_POSITION": "%1 Расположить начало %2 в X1 %3 и конец в Y1 %4 X2 %5 Y2 %6",
  "LINE_SET_COLOR": "%1 Установить цвет %2 %3",
  "LINE_SET_COLOR_RGB": "%1 Установить цвет %2 R %3 G %4 B %5",
  "SET_POS": "Расположить %1 в X %2 Y %3",
  "SET_ALIGN": "Расположить %1 по %2 в X %3 Y относительно %4 %5",
  "SET_SIZE": "Установить ширину %1 %2 и высоту %3 пикс.",
  "SET_HIDDEN": "Сделать %1 %2",
  "SET_BGCOLOR": "Установить цвет фона %1 %2",
  "SET_BGCOLOR_RGB": "Установить цвет фона %1 R %2 G %3 B %4",
  "SET_TEXT": "Установить %1 текст %2",
  "SET_TEXTCOLOR": "Установить цвет текста %1 %2",
  "SET_TEXTCOLOR_RGB": "Установить цвет текста %1 R %2 G %3 B %4",
  "SET_TEXT_FONT": "Установить шрифт %1 %2",
  "SET_DELETE": "Удалить %1",
  "SET_OPACITY": "Установить %1 прозрачность %2",
  "LINE_SET_WIDTH": "Установить %1 толщину %2",
  "GET_WIDTH": "Получить длинну %1",
  "SET_CB": "При событии %2 на %2",
  "GET_STATE": "Получить состояние %1",
  "GET_VALUE": "Получить значение %1",
  "SWITCH_SET_BGCOLOR": "Установить цвет %1 в выключенном состоянии %2",
  "SWITCH_SET_BGCOLOR_RGB": "Установить цвет %1 в выключенном состоянии R %2 G %3 B %4",
  "SWITCH_SET_COLOR": "Установить цвет %1 во включённом состоянии %2",
  "SWITCH_SET_COLOR_RGB": "Установить цвет %1 во включённом состоянии R %2 G %3 B %4",
  "SWITCH_SET_ON": "Включить %1",
  "SWITCH_SET_OFF": "Выключить %1",
  "SWITCH_SET_TOGGLE": "Переключить %1",
  "SWITCH_SET_TRACK_COLOR": "Установить активный цвет %1 %2",
  "SWITCH_SET_TRACK_COLOR_RGB": "Установить активный цвет %1 R %2 G %3 B %4",
  "SET_INITIAL_VALUE": "Установить значение по умолчанию %2 для %1",
  "SET_VALUE": "Установить значение %2 для %1",
  "SET_RANGE": "Установить диапазон от %2 до %3 для %1",
  "SLIDER_SET_CB": "При изменении %2 %1",
  "DAC_STATE": "Установить напряжение %1 %2 В на %3 . Сохранение в EEPROM %4",
  "DAC_SETDATA": "Установить напряжение из RAW-данных %1 %2 на %3 . Сохранение в EEPROM %4",
  "ADC_STATE": "Получить значение напряжения с %1 %2",
  "TOF_STATE": "Получить значение расстояния с %2 %1",
  "NCIR_READ": "Получить значение температуры с %1 %2",
  "IR_STATE": "Получить состояние %1 %2",
  "IR_ON": "Зажечь %1 %2",
  "IR_OFF": "Погасить %1 %2",
  "EXTIO_SET_PORT": "Установить направление %1 %2 %3",
  "EXTIO_SET_PIN": "Установить направление контакта %4 %1 %2 на %3 ",
  "EXTIO_GET_DIGIREADPORT": "Получить цифровое значение с порта %2 %1",
  "EXTIO_SET_DIGIWRITEPORT": "Установить цифровое значение %2 на порту %1 %3",
  "EXTIO_SET_DIGIREAD": "Получить цифровое значение с контакта %3 %1 %2",
  "EXTIO_SET_DIGIWRITE": "Установить цифровое значение %4 на контакте %3 %1 %2",
  "MQTT_SET_CLIENT": "ID клиента %1 адрес сервера %2 порт %3  имя пользователя %4       пароль %5 keepalive %6",
  "MQTT_SUB": "При поступлении данных с топика %1",
  "MQTT_START": "Запустить MQTT",
  "MQTT_GET_TOPICDATA": "Получить данные",
  "MQTT_PUBLISH": "publish topic %1 msg %2 Qos %3",
  "MQTT_SET_LAST_WILL": "Set last will topic %1 msg %2",
  "WIFI_CONNECT": "wifi connect (log in lcd %1)",
  "WIFI_RECONNECT": "Переподключиться к Wi-Fi",
  "WIFI_ISCONNECT": "Подключён ли Wi-Fi?",
  "WIFI_doConnect": "%1 Подключиться к Wi-Fi с SSID %2 %3 паролем %4",
  "IMAGE_HIDE": "%1 Скрыть %2",
  "IMAGE_SHOW": "%1 Показать %2",
  "IMAGE_SET_POSITION_X": "%1 Set %2 x %3",
  "IMAGE_SET_POSITION_Y": "%1 Set %2 y %3",
  "IMAGE_SET_POSITION": "%1 Расположить %2 в X %3 Y %4",
  "IMAGE_SET_IMAGE": "%1 Установить изображение %4 на %2 %3",
  "REMOTE_SET_QRCODE": "%1 Расположить QR-код доступа в X %2 Y %3 размером %4 пикс.",
  "REMOTE_ADD_SWITCH": "Добавить удалённый переключатель",
  "REMOTE_ADD_GRAPH": "creat graph %1 2%",
  "ADD_REMOTE_BUTTON": "Добавить удалённую кнопку",
  "ADD_REMOTE_TIMER": "Добавить удалённый таймер",
  "ADD_REMOTE_SLIDER": "Добавить удалённый ползунок",
  "ADD_REMOTE_INPUT": "Добавить удалённое поле ввода",
  "ADD_REMOTE_LABEL": {
    "ADD": "Добавить",
    "LABEL": "надпись"
  },
  "ADD_REMOTE_STATISTICS": {
    "ADD": "Добавить",
    "LABEL": "надпись"
  },
  "RTC_SET_CLIENT": "Установить год: %1 месяц %2 день %3 час %4 минуты %5 секунды %6",
  "RTC_SET_CLIENT_YEAR": "год %1",
  "RTC_SET_CLIENT_MONTH": "месяц %1",
  "RTC_SET_CLIENT_DAY": "день %1",
  "RTC_SET_CLIENT_HOUR": "час %1",
  "RTC_SET_CLIENT_MINUTE": "минуты %1",
  "RTC_SET_CLIENT_SECOUD": "секунды %1",
  "RTC_SET_CLIENT_TIME": "Local Time %1",
  "RTC_DATETIME": "Установить год: %1 месяц %2 день %3 неделю %4 час %5 минуты %6 секунды %7",
  "RTC_SETTIME": "Настроить время по NTP-серверу %1 . Часовая зона GMT %2",
  "RTC_GET_TIME": "Получить время с RTC",
  "RTC_GET_WEEK": "Неделя %1",
  "RTC_GET_PRINTTIME": "Вывести время с RTC",
  "M5_LED_OFF": "Зажечь светодиод",
  "M5_LED_ON": "Погасить светодиод",
  "M5_LED_VALUE": "LED VALUE %1",
  "AXP_SETLCDVOL": "setLCDVol %1",
  "AXP_ISCHARGE": "isCharge",
  "axp_getBatVolt": "get BatVolt",
  "axp_getChargeI": "get ChargeI",
  "axp_getDischargeI": "get DischargeI",
  "AXP": "Питание",
  "AXP_GET_CHARGE_STATE": "Получить состояние зарядки",
  "AXP_GET_BAT_VOLTAGE": "Получить значение напряжения на аккумуляторе",
  "AXP_GET_BAT_CURRENT": "Получить значение тока на аккумуляторе",
  "AXP_GET_VIN_VOLTAGE": "Get Vin voltage",
  "AXP_GET_VIN_CURRENT": "Get Vin current",
  "AXP_GET_VBUS_VOLTAGE": "Получить значение напряжения с контакта VBus",
  "AXP_GET_VBUS_CURRENT": "Get VBus current",
  "AXP_GET_TEMP_IN_AXP192": "Получить значение температуры AXP192",
  "AXP_POWER_OFF": "Выключить",
  "AXP_SET_CHARGE_CURRENT": "Установить ток заряда аккумулятора %1",
  "AXP_SET_LD02_VOLTAGE": "Установить напряжение на ЖК-дисплее %1 В",
  "VIBRATION": "Вибрация",
  "VARIABLES_DEFAULT_NAME": "item",
  "TODAY": "Сегодня",
  "DUPLICATE_BLOCK": "Дубликат",
  "ADD_COMMENT": "Добавить комментарий",
  "REMOVE_COMMENT": "Удалить комментарий",
  "EXTERNAL_INPUTS": "Блоки снаружи",
  "INLINE_INPUTS": "Блоки внутри",
  "DELETE_BLOCK": "Удалить блок",
  "DELETE_X_BLOCKS": "Удалить %1 шт.",
  "DELETE_ALL_BLOCKS": "Удалить все %1 шт.?",
  "CLEAN_UP": "Выстроить",
  "COLLAPSE_BLOCK": "Свернуть блок",
  "COLLAPSE_ALL": "Свернуть все блоки",
  "EXPAND_BLOCK": "Развернуть блок",
  "EXPAND_ALL": "Развернуть все блоки",
  "DISABLE_BLOCK": "Сделать неактивным",
  "ENABLE_BLOCK": "Сделать активным",
  "HELP": "Помощь",
  "UNDO": "Отменить действие",
  "REDO": "Повторить действие",
  "CHANGE_VALUE_TITLE": "Change value:",
  "RENAME_VARIABLE": "Rename variable...",
  "RENAME_VARIABLE_TITLE": "Rename all '%1' variables to:",
  "NEW_VARIABLE": "Создать переменную",
  "NEW_STRING_VARIABLE": "Create string variable...",
  "NEW_NUMBER_VARIABLE": "Create number variable...",
  "NEW_COLOUR_VARIABLE": "Create colour variable...",
  "NEW_VARIABLE_TYPE_TITLE": "New variable type:",
  "NEW_VARIABLE_TITLE": "New variable name:",
  "VARIABLE_ALREADY_EXISTS": "A variable named '%1' already exists.",
  "VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE": "A variable named '%1' already exists for another type: '%2'.",
  "DELETE_VARIABLE_CONFIRMATION": "Delete %1 uses of the '%2' variable?",
  "CANNOT_DELETE_VARIABLE_PROCEDURE": "Can't delete the variable '%1' because it's part of the definition of the function '%2'",
  "DELETE_VARIABLE": "Delete the '%1' variable",
  "COLOUR_PICKER_HELPURL": "https://en.wikipedia.org/wiki/Color",
  "COLOUR_PICKER_TOOLTIP": "Choose a colour from the palette.",
  "COLOUR_RANDOM_HELPURL": "http://randomcolour.com",
  "COLOUR_RANDOM_TITLE": "random colour",
  "COLOUR_RANDOM_TOOLTIP": "Choose a colour at random.",
  "COLOUR_RGB_HELPURL": "http://www.december.com/html/spec/colorper.html",
  "COLOUR_RGB_TITLE": "colour with",
  "COLOUR_RGB_RED": "красный",
  "COLOUR_RGB_GREEN": "зелёный",
  "COLOUR_RGB_BLUE": "синий",
  "COLOUR_RGB_TOOLTIP": "Create a colour with the specified amount of red, green, and blue. All values must be between 0 and 100.",
  "COLOUR_BLEND_HELPURL": "http://meyerweb.com/eric/tools/color-blend/",
  "COLOUR_BLEND_TITLE": "blend",
  "COLOUR_BLEND_COLOUR1": "colour 1",
  "COLOUR_BLEND_COLOUR2": "colour 2",
  "COLOUR_BLEND_RATIO": "ratio",
  "COLOUR_BLEND_TOOLTIP": "Blends two colours together with a given ratio (0.0 - 1.0).",
  "CONTROLS_REPEAT_HELPURL": "https://en.wikipedia.org/wiki/For_loop",
  "CONTROLS_REPEAT_TITLE": "repeat %1 times",
  "CONTROLS_REPEAT_INPUT_DO": "do",
  "CONTROLS_REPEAT_TOOLTIP": "Do some statements several times.",
  "CONTROLS_WHILEUNTIL_HELPURL": "https://github.com/google/blockly/wiki/Loops#repeat",
  "CONTROLS_WHILEUNTIL_OPERATOR_WHILE": "repeat while",
  "CONTROLS_WHILEUNTIL_OPERATOR_UNTIL": "repeat until",
  "CONTROLS_WHILEUNTIL_TOOLTIP_WHILE": "While a value is true, then do some statements.",
  "CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL": "While a value is false, then do some statements.",
  "CONTROLS_FOR_HELPURL": "https://github.com/google/blockly/wiki/Loops#count-with",
  "CONTROLS_FOR_TOOLTIP": "Have the variable '%1' take on the values from the start number to the end number, counting by the specified interval, and do the specified blocks.",
  "CONTROLS_FOR_TITLE": "count with %1 from %2 to %3 by %4",
  "CONTROLS_FOREACH_HELPURL": "https://github.com/google/blockly/wiki/Loops#for-each",
  "CONTROLS_FOREACH_TITLE": "for each item %1 in list %2",
  "CONTROLS_FOREACH_TOOLTIP": "For each item in a list, set the variable '%1' to the item, and then do some statements.",
  "CONTROLS_FLOW_STATEMENTS_HELPURL": "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks",
  "CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK": "break out of loop",
  "CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE": "continue with next iteration of loop",
  "CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK": "Break out of the containing loop.",
  "CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE": "Skip the rest of this loop, and continue with the next iteration.",
  "CONTROLS_FLOW_STATEMENTS_WARNING": "Warning: This block may only be used within a loop.",
  "CONTROLS_IF_HELPURL": "https://github.com/google/blockly/wiki/IfElse",
  "CONTROLS_IF_TOOLTIP_1": "If a value is true, then do some statements.",
  "CONTROLS_IF_TOOLTIP_2": "If a value is true, then do the first block of statements. Otherwise, do the second block of statements.",
  "CONTROLS_IF_TOOLTIP_3": "If the first value is true, then do the first block of statements. Otherwise, if the second value is true, do the second block of statements.",
  "CONTROLS_IF_TOOLTIP_4": "If the first value is true, then do the first block of statements. Otherwise, if the second value is true, do the second block of statements. If none of the values are true, do the last block of statements.",
  "CONTROLS_IF_MSG_IF": "if",
  "CONTROLS_IF_MSG_ELSEIF": "else if",
  "CONTROLS_IF_MSG_ELSE": "else",
  "CONTROLS_IF_IF_TOOLTIP": "Add, remove, or reorder sections to reconfigure this if block.",
  "CONTROLS_IF_ELSEIF_TOOLTIP": "Add a condition to the if block.",
  "CONTROLS_IF_ELSE_TOOLTIP": "Add a final, catch-all condition to the if block.",
  "IOS_OK": "Окей",
  "IOS_CANCEL": "Отмена",
  "IOS_ERROR": "Ошибка",
  "IOS_PROCEDURES_INPUTS": "INPUTS",
  "IOS_PROCEDURES_ADD_INPUT": "+ Add Input",
  "IOS_PROCEDURES_ALLOW_STATEMENTS": "Allow statements",
  "IOS_PROCEDURES_DUPLICATE_INPUTS_ERROR": "This function has duplicate inputs.",
  "IOS_VARIABLES_ADD_VARIABLE": "+ Add Variable",
  "IOS_VARIABLES_ADD_BUTTON": "Add",
  "IOS_VARIABLES_RENAME_BUTTON": "Rename",
  "IOS_VARIABLES_DELETE_BUTTON": "Delete",
  "IOS_VARIABLES_VARIABLE_NAME": "Variable name",
  "IOS_VARIABLES_EMPTY_NAME_ERROR": "You can't use an empty variable name.",
  "LOGIC_COMPARE_HELPURL": "https://en.wikipedia.org/wiki/Inequality_(mathematics)",
  "LOGIC_COMPARE_TOOLTIP_EQ": "Возвращает True, если оба выражения равны.",
  "LOGIC_COMPARE_TOOLTIP_NEQ": "Возвращает True, если выражения НЕ равны.",
  "LOGIC_COMPARE_TOOLTIP_LT": "Возвращает True, если первое выражение меньше второго.",
  "LOGIC_COMPARE_TOOLTIP_LTE": "Возвращает True, если первое выражение меньше, либо равно второму.",
  "LOGIC_COMPARE_TOOLTIP_GT": "Возвращает True, если первое выражение больше второго.",
  "LOGIC_COMPARE_TOOLTIP_GTE": "Возвращает True, если первое выражение больше, либо равно второму.",
  "LOGIC_OPERATION_HELPURL": "https://github.com/google/blockly/wiki/Logic#logical-operations",
  "LOGIC_OPERATION_TOOLTIP_AND": "Возвращает True, если оба выражения True.",
  "LOGIC_OPERATION_AND": "и",
  "LOGIC_OPERATION_TOOLTIP_OR": "Возвращает True, если хотя бы одно выражение True.",
  "LOGIC_OPERATION_OR": "или",
  "LOGIC_NEGATE_HELPURL": "https://github.com/google/blockly/wiki/Logic#not",
  "LOGIC_NEGATE_TITLE": "НЕ %1",
  "LOGIC_NEGATE_TOOLTIP": "Возвращает True, если выражение False и наоборот.",
  "LOGIC_BOOLEAN_HELPURL": "https://github.com/google/blockly/wiki/Logic#values",
  "LOGIC_BOOLEAN_TRUE": "True",
  "LOGIC_BOOLEAN_FALSE": "False",
  "LOGIC_BOOLEAN_TOOLTIP": "Возвращает или True, или False",
  "LOGIC_NULL_HELPURL": "https://en.wikipedia.org/wiki/Nullable_type",
  "LOGIC_NULL": "None",
  "LOGIC_NULL_TOOLTIP": "Возвращает None",
  "LOGIC_TERNARY_HELPURL": "https://en.wikipedia.org/wiki/%3F:",
  "LOGIC_TERNARY_CONDITION": "test",
  "LOGIC_TERNARY_IF_TRUE": "если True",
  "LOGIC_TERNARY_IF_FALSE": "если False",
  "LOGIC_TERNARY_TOOLTIP": "Проверяет условие и переходит в соответстующую ветку.",
  "MATH_NUMBER_HELPURL": "https://en.wikipedia.org/wiki/Number",
  "MATH_NUMBER_TOOLTIP": "Число(You can using binary (0b) or hexadecimal (0x) representations).",
  "MATH_ADDITION_SYMBOL": "+",
  "MATH_SUBTRACTION_SYMBOL": "-",
  "MATH_DIVISION_SYMBOL": "÷",
  "MATH_MULTIPLICATION_SYMBOL": "×",
  "MATH_POWER_SYMBOL": "^",
  "MATH_TRIG_SIN": "sin",
  "MATH_TRIG_COS": "cos",
  "MATH_TRIG_TAN": "tan",
  "MATH_TRIG_ASIN": "asin",
  "MATH_TRIG_ACOS": "acos",
  "MATH_TRIG_ATAN": "atan",
  "MATH_ARITHMETIC_HELPURL": "https://en.wikipedia.org/wiki/Arithmetic",
  "MATH_ARITHMETIC_TOOLTIP_ADD": "Возвращает сумму двух чисел.",
  "MATH_ARITHMETIC_TOOLTIP_MINUS": "Возвращает разность двух чисел.",
  "MATH_ARITHMETIC_TOOLTIP_MULTIPLY": "Возвращает произведение двух чисел.",
  "MATH_ARITHMETIC_TOOLTIP_DIVIDE": "Возвращает частное двух чисел.",
  "MATH_ARITHMETIC_TOOLTIP_POWER": "Возвращает первое число, возведённое в степень значения второго.",
  "MATH_SINGLE_HELPURL": "https://en.wikipedia.org/wiki/Square_root",
  "MATH_SINGLE_OP_ROOT": "квадратный корень",
  "MATH_SINGLE_TOOLTIP_ROOT": "Возвращает квадратный корень числа.",
  "MATH_SINGLE_OP_ABSOLUTE": "модуль",
  "MATH_SINGLE_TOOLTIP_ABS": "Возвращает модуль числа.",
  "MATH_SINGLE_TOOLTIP_NEG": "Возвращает отрицательное значение числа.",
  "MATH_SINGLE_TOOLTIP_LN": "Возвращает натуральный логарифм числа.",
  "MATH_SINGLE_TOOLTIP_LOG10": "Возвращает десятичный логарифм числа.",
  "MATH_SINGLE_TOOLTIP_EXP": "Возвращает e в степень числа.",
  "MATH_SINGLE_TOOLTIP_POW10": "Возвращает 10 в степени числа.",
  "MATH_TRIG_HELPURL": "https://en.wikipedia.org/wiki/Trigonometric_functions",
  "MATH_TRIG_TOOLTIP_SIN": "Возвращает sin в градусах.",
  "MATH_TRIG_TOOLTIP_COS": "Возвращает cos в градусах.",
  "MATH_TRIG_TOOLTIP_TAN": "Возвращает tan в градусах.",
  "MATH_TRIG_TOOLTIP_ASIN": "Возвращает asin в градусах.",
  "MATH_TRIG_TOOLTIP_ACOS": "Возвращает acos в градусах.",
  "MATH_TRIG_TOOLTIP_ATAN": "Возвращает atan в градусах.",
  "MATH_CONSTANT_HELPURL": "https://en.wikipedia.org/wiki/Mathematical_constant",
  "MATH_CONSTANT_TOOLTIP": "Возвращает одну из констант: π (3.141…), e (2.718…), φ (1.618…), кв. корень из 2 (1.414…), кв. корень из (1 / 2) (0.707…) и ∞ (бесконечность).",
  "MATH_IS_EVEN": "чётное",
  "MATH_IS_ODD": "нечётное",
  "MATH_IS_PRIME": "простое",
  "MATH_IS_WHOLE": "целое",
  "MATH_IS_POSITIVE": "положительное",
  "MATH_IS_NEGATIVE": "отрицательное",
  "MATH_IS_DIVISIBLE_BY": "делится на",
  "MATH_IS_TOOLTIP": "Проверяет, является ли число чётным, нечётным, простым, целым, положительным, отрицательным, делиться ли на. Если да, то возвращает True, иначе False.",
  "MATH_CHANGE_HELPURL": "https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter",
  "MATH_CHANGE_TITLE": "change %1 by %2",
  "MATH_CHANGE_TOOLTIP": "Add a number to variable '%1'.",
  "MATH_ROUND_HELPURL": "https://en.wikipedia.org/wiki/Rounding",
  "MATH_ROUND_TOOLTIP": "Округляет число в большую или меньшую сторону.",
  "MATH_ROUND_OPERATOR_ROUND": "округлить",
  "MATH_ROUND_OPERATOR_ROUNDUP": "в большую сторону",
  "MATH_ROUND_OPERATOR_ROUNDDOWN": "в меньшую сторону",
  "MATH_ONLIST_HELPURL": "",
  "MATH_ONLIST_OPERATOR_SUM": "сумма списка",
  "MATH_ONLIST_TOOLTIP_SUM": "Возвращает сумму всех элементов списка.",
  "MATH_ONLIST_OPERATOR_MIN": "наименьшее число",
  "MATH_ONLIST_TOOLTIP_MIN": "Возвращает наименьшее число из списка.",
  "MATH_ONLIST_OPERATOR_MAX": "наибольшее число",
  "MATH_ONLIST_TOOLTIP_MAX": "Возвращает наибольшее число из списка.",
  "MATH_ONLIST_OPERATOR_AVERAGE": "среднее",
  "MATH_ONLIST_TOOLTIP_AVERAGE": "Возвращает среднее арифметическое число списка.",
  "MATH_ONLIST_OPERATOR_MEDIAN": "медиана",
  "MATH_ONLIST_TOOLTIP_MEDIAN": "Возвращает среднее медианное число списка.",
  "MATH_ONLIST_OPERATOR_MODE": "распространённые",
  "MATH_ONLIST_TOOLTIP_MODE": "Возвращает список наиболее часто распространённых чисел в исходном списке.",
  "MATH_ONLIST_OPERATOR_STD_DEV": "среднеквадратическое отклонение",
  "MATH_ONLIST_TOOLTIP_STD_DEV": "Возвращает среднеквадратическое отклонение списка.",
  "MATH_ONLIST_OPERATOR_RANDOM": "случайный элемент",
  "MATH_ONLIST_TOOLTIP_RANDOM": "Возвращает случайный элемент из списка.",
  "MATH_MODULO_HELPURL": "https://en.wikipedia.org/wiki/Modulo_operation",
  "MATH_MODULO_TITLE": "remainder of %1 ÷ %2",
  "MATH_MODULO_TOOLTIP": "Return the remainder from dividing the two numbers.",
  "MATH_CONSTRAIN_HELPURL": "https://en.wikipedia.org/wiki/Clamping_(graphics)",
  "MATH_CONSTRAIN_TITLE": "constrain %1 low %2 high %3",
  "MATH_CONSTRAIN_TOOLTIP": "Constrain a number to be between the specified limits (inclusive).",
  "MATH_RANDOM_INT_HELPURL": "https://en.wikipedia.org/wiki/Random_number_generation",
  "MATH_RANDOM_INT_TITLE": "random integer from %1 to %2",
  "MATH_RANDOM_INT_TOOLTIP": "Return a random integer between the two specified limits, inclusive.",
  "MATH_RANDOM_FLOAT_HELPURL": "https://en.wikipedia.org/wiki/Random_number_generation",
  "MATH_RANDOM_FLOAT_TITLE_RANDOM": "random fraction",
  "MATH_RANDOM_FLOAT_TOOLTIP": "Return a random fraction between 0.0 (inclusive) and 1.0 (exclusive).",
  "MATH_GET_BIT": "Get %1 bit %2",
  "MATH_SET_BIT": "Set %1 bit %2",
  "MATH_CLEAR_BIT": "Clear %1 bit %2",
  "MATH_REVERSE_BIT": "Reverse %1 bit %2",
  "MATH_BIT_OPERATION": "%1 %2 %3",
  "MATH_INT_FROM_BYTES": "int from bytes %1 %2",
  "TEXT_TEXT_HELPURL": "https://en.wikipedia.org/wiki/String_(computer_science)",
  "TEXT_TEXT_TOOLTIP": "A letter, word, or line of text.",
  "TEXT_JOIN_HELPURL": "https://github.com/google/blockly/wiki/Text#text-creation",
  "TEXT_JOIN_TITLE_CREATEWITH": "create text with",
  "TEXT_JOIN_TOOLTIP": "Create a piece of text by joining together any number of items.",
  "TEXT_CREATE_JOIN_TITLE_JOIN": "join",
  "TEXT_CREATE_JOIN_TOOLTIP": "Add, remove, or reorder sections to reconfigure this text block.",
  "TEXT_CREATE_JOIN_ITEM_TOOLTIP": "Add an item to the text.",
  "TEXT_APPEND_HELPURL": "https://github.com/google/blockly/wiki/Text#text-modification",
  "TEXT_APPEND_TITLE": "to %1 append text %2",
  "TEXT_APPEND_TOOLTIP": "Append some text to variable '%1'.",
  "TEXT_LENGTH_HELPURL": "https://github.com/google/blockly/wiki/Text#text-modification",
  "TEXT_LENGTH_TITLE": "length of %1",
  "TEXT_LENGTH_TOOLTIP": "Returns the number of letters (including spaces) in the provided text.",
  "TEXT_ISEMPTY_HELPURL": "https://github.com/google/blockly/wiki/Text#checking-for-empty-text",
  "TEXT_ISEMPTY_TITLE": "%1 is empty",
  "TEXT_ISEMPTY_TOOLTIP": "Returns true if the provided text is empty.",
  "TEXT_INDEXOF_HELPURL": "https://github.com/google/blockly/wiki/Text#finding-text",
  "TEXT_INDEXOF_TOOLTIP": "Returns the index of the first/last occurrence of the first text in the second text. Returns %1 if text is not found.",
  "TEXT_INDEXOF_TITLE": "in text %1 %2 %3",
  "TEXT_INDEXOF_OPERATOR_FIRST": "find first occurrence of text",
  "TEXT_INDEXOF_OPERATOR_LAST": "find last occurrence of text",
  "TEXT_CHARAT_HELPURL": "https://github.com/google/blockly/wiki/Text#extracting-text",
  "TEXT_CHARAT_TITLE": "in text %1 %2",
  "TEXT_CHARAT_FROM_START": "get letter #",
  "TEXT_CHARAT_FROM_END": "get letter # from end",
  "TEXT_CHARAT_FIRST": "get first letter",
  "TEXT_CHARAT_LAST": "get last letter",
  "TEXT_CHARAT_RANDOM": "get random letter",
  "TEXT_CHARAT_TAIL": "",
  "TEXT_CHARAT_TOOLTIP": "Returns the letter at the specified position.",
  "TEXT_GET_SUBSTRING_TOOLTIP": "Returns a specified portion of the text.",
  "TEXT_GET_SUBSTRING_HELPURL": "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text",
  "TEXT_GET_SUBSTRING_INPUT_IN_TEXT": "in text",
  "TEXT_GET_SUBSTRING_START_FROM_START": "get substring from letter #",
  "TEXT_GET_SUBSTRING_START_FROM_END": "get substring from letter # from end",
  "TEXT_GET_SUBSTRING_START_FIRST": "get substring from first letter",
  "TEXT_GET_SUBSTRING_END_FROM_START": "to letter #",
  "TEXT_GET_SUBSTRING_END_FROM_END": "to letter # from end",
  "TEXT_GET_SUBSTRING_END_LAST": "to last letter",
  "TEXT_GET_SUBSTRING_TAIL": "",
  "TEXT_CHANGECASE_HELPURL": "https://github.com/google/blockly/wiki/Text#adjusting-text-case",
  "TEXT_CHANGECASE_TOOLTIP": "Return a copy of the text in a different case.",
  "TEXT_CHANGECASE_OPERATOR_UPPERCASE": "to UPPER CASE",
  "TEXT_CHANGECASE_OPERATOR_LOWERCASE": "to lower case",
  "TEXT_CHANGECASE_OPERATOR_TITLECASE": "to Title Case",
  "TEXT_TRIM_HELPURL": "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces",
  "TEXT_TRIM_TOOLTIP": "Return a copy of the text with spaces removed from one or both ends.",
  "TEXT_TRIM_OPERATOR_BOTH": "trim spaces from both sides of",
  "TEXT_TRIM_OPERATOR_LEFT": "trim spaces from left side of",
  "TEXT_TRIM_OPERATOR_RIGHT": "trim spaces from right side of",
  "TEXT_PRINT_HELPURL": "https://github.com/google/blockly/wiki/Text#printing-text",
  "TEXT_PRINT_TITLE": "print %1",
  "TEXT_PRINT_TOOLTIP": "Print the specified text, number or other value.",
  "TEXT_PROMPT_HELPURL": "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user",
  "TEXT_PROMPT_TYPE_TEXT": "prompt for text with message",
  "TEXT_PROMPT_TYPE_NUMBER": "prompt for number with message",
  "TEXT_PROMPT_TOOLTIP_NUMBER": "Prompt for user for a number.",
  "TEXT_PROMPT_TOOLTIP_TEXT": "Prompt for user for some text.",
  "TEXT_COUNT_MESSAGE0": "count %1 in %2",
  "TEXT_COUNT_HELPURL": "https://github.com/google/blockly/wiki/Text#counting-substrings",
  "TEXT_COUNT_TOOLTIP": "Count how many times some text occurs within some other text.",
  "TEXT_REPLACE_MESSAGE0": "replace %1 with %2 in %3",
  "TEXT_REPLACE_HELPURL": "https://github.com/google/blockly/wiki/Text#replacing-substrings",
  "TEXT_REPLACE_TOOLTIP": "Replace all occurrence of some text within some other text.",
  "TEXT_REVERSE_MESSAGE0": "reverse %1",
  "TEXT_REVERSE_HELPURL": "https://github.com/google/blockly/wiki/Text#reversing-text",
  "TEXT_REVERSE_TOOLTIP": "Reverses the order of the characters in the text.",
  "LISTS_CREATE_EMPTY_HELPURL": "https://github.com/google/blockly/wiki/Lists#create-empty-list",
  "LISTS_CREATE_EMPTY_TITLE": "create empty list",
  "LISTS_CREATE_EMPTY_TOOLTIP": "Returns a list, of length 0, containing no data records",
  "LISTS_CREATE_WITH_HELPURL": "https://github.com/google/blockly/wiki/Lists#create-list-with",
  "LISTS_CREATE_WITH_TOOLTIP": "Create a list with any number of items.",
  "LISTS_CREATE_WITH_INPUT_WITH": "create list with",
  "MAP_CREATE_WITH_INPUT_WITH": "create map",
  "LISTS_CREATE_WITH_CONTAINER_TITLE_ADD": "list",
  "LISTS_CREATE_WITH_CONTAINER_TOOLTIP": "Add, remove, or reorder sections to reconfigure this list block.",
  "LISTS_CREATE_WITH_ITEM_TOOLTIP": "Add an item to the list.",
  "LISTS_REPEAT_HELPURL": "https://github.com/google/blockly/wiki/Lists#create-list-with",
  "LISTS_REPEAT_TOOLTIP": "Creates a list consisting of the given value repeated the specified number of times.",
  "LISTS_REPEAT_TITLE": "create list with item %1 repeated %2 times",
  "LISTS_LENGTH_HELPURL": "https://github.com/google/blockly/wiki/Lists#length-of",
  "LISTS_LENGTH_TITLE": "length of %1",
  "LISTS_LENGTH_TOOLTIP": "Returns the length of a list.",
  "LISTS_ISEMPTY_HELPURL": "https://github.com/google/blockly/wiki/Lists#is-empty",
  "LISTS_ISEMPTY_TITLE": "%1 is empty",
  "LISTS_ISEMPTY_TOOLTIP": "Returns true if the list is empty.",
  "LISTS_INLIST": "in list",
  "LISTS_INDEX_OF_HELPURL": "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list",
  "LISTS_INDEX_OF_FIRST": "find first occurrence of item",
  "LISTS_INDEX_OF_LAST": "find last occurrence of item",
  "LISTS_INDEX_OF_TOOLTIP": "Returns the index of the first/last occurrence of the item in the list. Returns %1 if item is not found.",
  "LISTS_GET_INDEX_GET": "get",
  "LISTS_GET_INDEX_GET_REMOVE": "get and remove",
  "LISTS_GET_INDEX_REMOVE": "remove",
  "LISTS_GET_INDEX_FROM_START": "#",
  "LISTS_GET_INDEX_FROM_END": "# from end",
  "LISTS_GET_INDEX_FIRST": "first",
  "LISTS_GET_INDEX_LAST": "last",
  "LISTS_GET_INDEX_RANDOM": "random",
  "LISTS_GET_INDEX_TAIL": "",
  "LISTS_INDEX_FROM_START_TOOLTIP": "%1 is the first item.",
  "LISTS_INDEX_FROM_END_TOOLTIP": "%1 is the last item.",
  "LISTS_GET_INDEX_TOOLTIP_GET_FROM": "Returns the item at the specified position in a list.",
  "LISTS_GET_INDEX_TOOLTIP_GET_FIRST": "Returns the first item in a list.",
  "LISTS_GET_INDEX_TOOLTIP_GET_LAST": "Returns the last item in a list.",
  "LISTS_GET_INDEX_TOOLTIP_GET_RANDOM": "Returns a random item in a list.",
  "LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM": "Removes and returns the item at the specified position in a list.",
  "LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST": "Removes and returns the first item in a list.",
  "LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST": "Removes and returns the last item in a list.",
  "LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM": "Removes and returns a random item in a list.",
  "LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM": "Removes the item at the specified position in a list.",
  "LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST": "Removes the first item in a list.",
  "LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST": "Removes the last item in a list.",
  "LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM": "Removes a random item in a list.",
  "LISTS_SET_INDEX_HELPURL": "https://github.com/google/blockly/wiki/Lists#in-list--set",
  "LISTS_SET_INDEX_SET": "set",
  "LISTS_SET_INDEX_INSERT": "insert at",
  "LISTS_SET_INDEX_INPUT_TO": "as",
  "LISTS_SET_INDEX_TOOLTIP_SET_FROM": "Sets the item at the specified position in a list.",
  "LISTS_SET_INDEX_TOOLTIP_SET_FIRST": "Sets the first item in a list.",
  "LISTS_SET_INDEX_TOOLTIP_SET_LAST": "Sets the last item in a list.",
  "LISTS_SET_INDEX_TOOLTIP_SET_RANDOM": "Sets a random item in a list.",
  "LISTS_SET_INDEX_TOOLTIP_INSERT_FROM": "Inserts the item at the specified position in a list.",
  "LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST": "Inserts the item at the start of a list.",
  "LISTS_SET_INDEX_TOOLTIP_INSERT_LAST": "Append the item to the end of a list.",
  "LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM": "Inserts the item randomly in a list.",
  "LISTS_GET_SUBLIST_HELPURL": "https://github.com/google/blockly/wiki/Lists#getting-a-sublist",
  "LISTS_GET_SUBLIST_START_FROM_START": "get sub-list from #",
  "LISTS_GET_SUBLIST_START_FROM_END": "get sub-list from # from end",
  "LISTS_GET_SUBLIST_START_FIRST": "get sub-list from first",
  "LISTS_GET_SUBLIST_END_FROM_START": "to #",
  "LISTS_GET_SUBLIST_END_FROM_END": "to # from end",
  "LISTS_GET_SUBLIST_END_LAST": "to last",
  "LISTS_GET_SUBLIST_TAIL": "",
  "LISTS_GET_SUBLIST_TOOLTIP": "Creates a copy of the specified portion of a list.",
  "LISTS_SORT_HELPURL": "https://github.com/google/blockly/wiki/Lists#sorting-a-list",
  "LISTS_SORT_TITLE": "sort %1 %2 %3",
  "LISTS_SORT_TOOLTIP": "Sort a copy of a list.",
  "LISTS_SORT_ORDER_ASCENDING": "ascending",
  "LISTS_SORT_ORDER_DESCENDING": "descending",
  "LISTS_SORT_TYPE_NUMERIC": "numeric",
  "LISTS_SORT_TYPE_TEXT": "alphabetic",
  "LISTS_SORT_TYPE_IGNORECASE": "alphabetic, ignore case",
  "LISTS_SPLIT_HELPURL": "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists",
  "LISTS_SPLIT_LIST_FROM_TEXT": "make list from text",
  "LISTS_SPLIT_TEXT_FROM_LIST": "make text from list",
  "LISTS_SPLIT_WITH_DELIMITER": "with delimiter",
  "LISTS_SPLIT_TOOLTIP_SPLIT": "Split text into a list of texts, breaking at each delimiter.",
  "LISTS_SPLIT_TOOLTIP_JOIN": "Join a list of texts into one text, separated by a delimiter.",
  "LISTS_REVERSE_HELPURL": "https://github.com/google/blockly/wiki/Lists#reversing-a-list",
  "LISTS_REVERSE_MESSAGE0": "reverse %1",
  "LISTS_REVERSE_TOOLTIP": "Reverse a copy of a list.",
  "ORDINAL_NUMBER_SUFFIX": "",
  "VARIABLES_GET_HELPURL": "https://github.com/google/blockly/wiki/Variables#get",
  "VARIABLES_GET_TOOLTIP": "Returns the value of this variable.",
  "VARIABLES_GET_CREATE_SET": "Create 'set %1'",
  "VARIABLES_SET_HELPURL": "https://github.com/google/blockly/wiki/Variables#set",
  "VARIABLES_SET": "set %1 to %2",
  "VARIABLES_SET_TOOLTIP": "Sets this variable to be equal to the input.",
  "VARIABLES_SET_CREATE_GET": "Create 'get %1'",
  "PROCEDURES_DEFNORETURN_HELPURL": "https://en.wikipedia.org/wiki/Subroutine",
  "PROCEDURES_DEFNORETURN_TITLE": "to",
  "PROCEDURES_DEFNORETURN_PROCEDURE": "dosomething",
  "PROCEDURES_BEFORE_PARAMS": "with:",
  "PROCEDURES_CALL_BEFORE_PARAMS": "",
  "PROCEDURES_DEFNORETURN_DO": "",
  "PROCEDURES_DEFNORETURN_TOOLTIP": "Creates a function with no output.",
  "PROCEDURES_DEFNORETURN_COMMENT": "Describe this function...",
  "PROCEDURES_DEFRETURN_HELPURL": "https://en.wikipedia.org/wiki/Subroutine",
  "PROCEDURES_DEFRETURN_RETURN": "return",
  "PROCEDURES_DEFRETURN_TOOLTIP": "Creates a function with an output.",
  "PROCEDURES_ALLOW_STATEMENTS": "allow statements",
  "PROCEDURES_DEF_DUPLICATE_WARNING": "Warning: This function has duplicate parameters.",
  "PROCEDURES_CALLNORETURN_HELPURL": "https://en.wikipedia.org/wiki/Subroutine",
  "PROCEDURES_CALLNORETURN_TOOLTIP": "Run the user-defined function '%1'.",
  "PROCEDURES_CALLRETURN_HELPURL": "https://en.wikipedia.org/wiki/Subroutine",
  "PROCEDURES_CALLRETURN_TOOLTIP": "Run the user-defined function '%1' and use its output.",
  "PROCEDURES_MUTATORCONTAINER_TITLE": "inputs",
  "PROCEDURES_MUTATORCONTAINER_TOOLTIP": "Add, remove, or reorder inputs to this function.",
  "PROCEDURES_MUTATORARG_TITLE": "input name:",
  "PROCEDURES_MUTATORARG_TOOLTIP": "Add an input to the function.",
  "PROCEDURES_HIGHLIGHT_DEF": "Highlight function definition",
  "PROCEDURES_CREATE_DO": "Create '%1'",
  "PROCEDURES_IFRETURN_TOOLTIP": "If a value is true, then return a second value.",
  "PROCEDURES_IFRETURN_HELPURL": "http://c2.com/cgi/wiki?GuardClause",
  "PROCEDURES_IFRETURN_WARNING": "Warning: This block may be used only within a function definition.",
  "PROCEDURES_DEFRETURN_TITLE": "to",
  "CONTROLS_IF_IF_TITLE_IF": "if",
  "CONTROLS_WHILEUNTIL_INPUT_DO": "do",
  "CONTROLS_IF_MSG_THEN": "do",
  "CONTROLS_IF_ELSE_TITLE_ELSE": "else",
  "PROCEDURES_DEFRETURN_PROCEDURE": "dosomething",
  "LISTS_GET_SUBLIST_INPUT_IN_LIST": "in list",
  "LISTS_GET_INDEX_INPUT_IN_LIST": "in list",
  "MATH_CHANGE_TITLE_ITEM": "item",
  "PROCEDURES_DEFRETURN_DO": "",
  "CONTROLS_IF_ELSEIF_TITLE_ELSEIF": "else if",
  "LISTS_GET_INDEX_HELPURL": "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list",
  "CONTROLS_FOREACH_INPUT_DO": "do",
  "LISTS_SET_INDEX_INPUT_IN_LIST": "in list",
  "CONTROLS_FOR_INPUT_DO": "do",
  "LISTS_CREATE_WITH_ITEM_TITLE": "item",
  "TEXT_APPEND_VARIABLE": "item",
  "TEXT_CREATE_JOIN_ITEM_TITLE_ITEM": "item",
  "LISTS_INDEX_OF_INPUT_IN_LIST": "in list",
  "PROCEDURES_DEFRETURN_COMMENT": "Describe this function...",
  "UNITS": "Units",
  "HATS": "Hat",
  "IOTCLOUD": "IoTCloud",
  "SETTING": "Setting",
  "VIDEO": "video :",
  "VIDEO_GET": "Get Started Videos",
  "VIDEO-ERROR": "Your browser is temporarily unplayable. Please try another browser",
  "SETTING_first": "Welcome to UIFlow",
  "OPEN": "Open",
  "SAVE": "Save",
  "DOWNLOAD": "Download",
  "DOC": "Docs",
  "EXAMPLE": "Example",
  "MANAGER": "Manager",
  "API_KEY": "Api key :",
  "LANGUAGE": "Language :",
  "FIRMWARE": "M5Burner :",
  "CATEGORY": "Device :",
  "DOCS": "User Manual :",
  "HIDEUI": "Hide UI",
  "SHOWUI": "Show UI",
  "CANCEL": "Cancel",
  "OK": "OK",
  "PORT": "port",
  "COUNT": "Number",
  "PROJECT": "Project",
  "LOADING": "loading....",
  "EXAMPLES": "Examples",
  "THEME": "Theme :",
  "ADDIMG": "Add Image",
  "ADDKEY": "Add Certificate",
  "BLOCKLYS": "blocklys",
  "IMAGES": "Images",
  "CERTIFICATE": "Certificate",
  "NODATA": "No Data",
  "DELETE": "Delete",
  "UPLOAD": "Uploading",
  "RELOAD": "Reload",
  "RESOURCEMANAGER": "Device File Manager",
  "VERSION": "version :",
  "DISCONNECTED": "Disconnected",
  "CONNECTED": "Connected",
  "CONNECTING": "Connecting",
  "EXECUTECODE_ERROR": "Upload code failed, maybe your device is offline check it and retry",
  "APIKRY_ERROR": "Execute code or upload code failed.Check your api key and filename.",
  "REQUEST_ERROR": "Request failed, maybe your device is offline check it and retry.",
  "LOGIN_EXPIRED": "Login time limit has expired, please login again.",
  "NO_PERMISSION": "No permission. The device has been bound!",
  "CONNECT_LOADING": "Connecting M5 ....",
  "FIRMWARE_WARNING": "The lastest firmware version is {{ value}}, please update for a better experience.",
  "FILE_SIZE_ERROR": "File must be less than 50KB.",
  "FILE_NAME_EROR": "Filename must be less than 30 letters.",
  "FILE_NAME_EMPTY": "Filename cannot be empty.",
  "EXECUTCODE_SUCCESS": "Execute code successfully.",
  "KEY_ISNULL_ERROR": "Your api key is null.",
  "NAME_ISNULL_ERROR": "Your project name is null.",
  "UPLOADING_LOADING": "Uploading, please wait a minute.",
  "UPLOADING_SUCCESS": "Upload code successfully, M5 is resetting.",
  "REMOTE_ERROR": "no remote data",
  "id": "id",
  "name": "Name",
  "color": "Color",
  "borderColor": "Border Color",
  "backgroundColor": "Background Color",
  "text": "Text",
  "textOffset": "Text Offset",
  "layer": "Layer",
  "createTime": "createTime",
  "rotation": "Rotation",
  "type": "type",
  "x": "X",
  "y": "Y",
  "x1": "X1",
  "y1": "Y1",
  "x2": "X2",
  "y2": "Y2",
  "x3": "X3",
  "y3": "Y3",
  "font": "Font",
  "width": "Width",
  "height": "Height",
  "radius": "Radius",
  "imagePath": "Image Path",
  "imageWidth": "Image Width",
  "imageHeight": "Image Height",
  "imageInvert": "Color Invert",
  "imageThreshold": "Threshold",
  "lineWidth": "Line Width",
  "selectedColor": "Selected Color",
  "unselectedColor": "Unselected Color",
  "trackColor": "Track Color",
  "visibility": "Visibility",
  "backgroundImage": "Background Image",
  "UPDATARECORD": "UpdataRecord",
  "NET_P2P": "%1 P2P Send To APIKey  %2  %3 Msg %4",
  "NET_GETP2P": "%1 P2P Read",
  "SD_READ": "SD read file %1  from pos %2 read %3 bytes",
  "SD_WRITE": "SD write file %1 data %2 with mode %3",
  "SD_LIST": "SD list attr from %1",
  "TEXT_ADD": "%1 + %2",
  "DECODE_STR": "decode %1 ",
  "ENCODE_STR": "encode %1 ",
  "LOGIC_TRY": "try  %1",
  "LOGIC_EXCEPT": "except %1",
  "LOGIC_SWITCH": "switch %1",
  "LOGIC_CASE": "case",
  "LOGIC_DEFAULT": "default",
  "TIMER_DELAY_MS": "%2 Ждать %1 мс",
  "TIMER_GET_MS": "%1 Получить количество мс от начала работы",
  "FINGER_GET_UNKNOWN": "При неизвестном отпечатке на %1",
  "IMU_GET_GYR_X": "%1 Получить X от гироскопа",
  "IMU_GET_GYR_Y": "%1 Получить Y от гироскопа",
  "IMU_GET_GYR_Z": "%1 Получить Z от гироскопа",
  "PB_HUB": "PbHUB",
  "PA_HUB": "PaHUB",
  "THERMAL": "THERMAL",
  "PAHUB_SELECT": "%1 %2 set channel %3 port %4",
  "PAHUB_ONLY_ON": "%1 %2 set channel %3 port open",
  "PAHUB_PORT": "%1 %2 set port value %3 ",
  "FACES": "FACES",
  "FACES_CALCULATOR": "Calculator",
  "FACES_ENCODE": "Encoder",
  "FACES_FINGER": "FINGER",
  "FACES_GAMEBOY": "GameBoy",
  "FACES_JOYSTICK": "Joystick",
  "FACES_KEYBOARD": "KeyBoard",
  "FACES_RFID": "RFID",
  "FACES_CALC_READSTR": "%1 Get press string",
  "FACES_CALC_READKEY": "%1 Get press button int value",
  "FACES_CALC_CLEARSTR": "Clear press string",
  "FACES_CALC_DELETESTRLAST": "Delete press string last byte",
  "FACES_CALC_ISNEWKEYPRESS": "%1 Is new button pressed",
  "FACES_ENCODE_SETLED": "Set LED pos %1 color %2",
  "FACES_ENCODE_CLEARVALUE": "%1 Clear encode value to zero",
  "FACES_ENCODE_GETVALUE": "%1 Get encode value",
  "FACES_ENCODE_GETDIR": "%1 Get encode direction",
  "FACES_ENCODE_GETPRESS": "%1 Is encode press",
  "FACES_FINGER_GET_STATE": "%1 get state",
  "FACES_FINGER_REMOVEALL": "%1 remove All",
  "FACES_FINGER_REMOVE_USER": "remove faces_finger id %1",
  "FACES_FINGER_GET_ID": "get id",
  "FACES_FINGER_GET_ACCESS": "get access",
  "FACES_FINGER_ADD_USER": "faces_finger add user id %1 access %2",
  "FACES_FINGER_READ": "%1 faces_finger read user with id access ",
  "FACES_FINGER_GET_UNKNOWN": "%1 faces_finger getUnknown",
  "FACES_GAMEBOY_GETSTATUS": "Get %1 is press",
  "FACES_GAMEBOY_GETPRESSED": "Get %1 was %2",
  "FACES_JOYSTICK_X": "%1 %2 Get X value",
  "FACES_JOYSTICK_Y": "%1 %2 Get Y value",
  "FACES_JOYSTICK_INVERT_X": "%1 %2 Get reverse X value ",
  "FACES_JOYSTICK_INVERT_Y": "%1 %2 Get reverse Y value",
  "FACES_JOYSTICK_PRESS": "%1 %2 Is pressed",
  "FACES_JOYSTICK_SETLED": "Set LED pos %1 color %2 ",
  "FACES_KEYBOARD_READSTR": "Get press string %1 ",
  "FACES_KEYBOARD_CLEARSTR": "%1 Clear press string",
  "FACES_KEYBOARD_DELETESTRLAST": "%1 Delete press string last byte",
  "FACES_KEYBOARD_GETDIR": "%1 Get press button int value",
  "FACES_KEYBOARD_GETPRESS": "%1 Is new button pressed",
  "FACES_RFID_READSTR": "%1 read string from addr %2",
  "FACES_RFID_WRITE": "%1 write %2 to addr %3",
  "FACES_RFID_CARDON": "%1 card near",
  "FACES_RFID_UID": "%1 card uid",
  "PM_2_5": "PM2.5",
  "PW2_5_get_pm_factory": "%1 PM2.5 (SHT20) get %2 value in %3 (μg/m³, return int)",
  "PW2_5_get_num_above": "%1 PM2.5 (SHT20) get number of particles above %2 μm (in 0.1L of air) (return int)",
  "HAT": "C-HAT",
  "HAT_PIR": "PIR",
  "HAT_PIR_READ": "%1 Get %2 status ",
  "HAT_ENV": "ENV",
  "HAT_ENV2": "ENV II",
  "HAT_ENV_PRESSURE": "%1 Get %2 Pressure (hPa, return float) ",
  "HAT_ENV_GET_TEMPERATURE": "%1 Get %2 Temperature (°C, return float)",
  "HAT_ENV_GET_HUMIDITY": "%1 Get %2 Humidity (%, return float)",
  "HAT_SPK": "Speaker",
  "HAT_SPEAKER_TONE": "%1 Speaker.beep freq: %2  duration: %3  %4 ms ",
  "HAT_SPEAKER_VOL": "%1 Speaker.volume %2",
  "HAT_SPEAKER_SING": "%1 play tone %2 for %3 beat",
  "HAT_NCIR": "NCIR",
  "HAT_NCIR_READ": "ncir %1 %2 read",
  "HAT_ADC": "ADC",
  "HAT_ADC_STATE": " read %1 %2 voltage",
  "HAT_DAC": "DAC",
  "HAT_DAC_STATE": " %3 output voltage %1 %2 save: %4",
  "HAT_DAC_SETDATA": "%3 output voltage with raw data %1 %2 save: %4",
  "THERMAL_GETTMP": "%1 getTmp %2 x %3 y %4",
  "THERMAL_GETCENTERTMP": "%1 %2 getCenterTmp",
  "THERMAL_GETMAXTMP": "%1 %2 getMaxTmp",
  "THERMAL_GETMINTMP": "%1 %2 getMinTmp",
  "THERMAL_SETCOLORMAXTMP": "%1 %2 setColorMaxTmp tmp %3",
  "THERMAL_SETCOLORMINTMP": "%1 %2 setColorMinTmp tmp %3",
  "THERMAL_UPDATE": "%1 %2 update x %3 y %4 show %5 showCenter %6",
  "DUMPS_JSON": "Convert %1 to JSON (string)",
  "LOADS_JSON": "Load from JSON (string) %1",
  "MAP": "Map",
  "JSON": "JSON",
  "MAP_ON_LOOP": "create map",
  "MAP_ON_func": "%1",
  "MAP_CLEAR": " map clear %1",
  "GET_MAP_IN": "map %1 contain key %2",
  "CREATE_MAP_KEY": "key %1 value %2",
  "GET_MAP_KEY": "get key %1 in map %2",
  "ADD_MAP_KEY": "in map %1 add key %2 value %3",
  "SET_MAP_KEY": "in map %1 set key %2 value %3",
  "DELETE_MAP_KEY": "in map %1 delete key %2",
  "CELLULAR": "Cellular",
  "Cellular_writeAT": "Cellular write AT %1",
  "Cellular_waitResponse": "Cellular wait %1 Response",
  "Cellular_getResponse": "Cellular get Response",
  "Cellular_testAT": "Cellular test AT ",
  "Cellular_restart": "Cellular restart",
  "Cellular_getSimState": "Cellular get SimState",
  "Cellular_init": "Cellular init",
  "Cellular_gprsConnect": "Cellular gprsConnect apn %1 user %2 password %3",
  "Cellular_connect": "Cellular connect host %1 port %2 ssl %3",
  "Cellular_send": "Cellular send data %1",
  "Cellular_send_line": "Cellular sendline data %1",
  "Cellular_getAvailable": "Cellular get Available ",
  "Cellular_read": "Cellular read",
  "Cellular_connected": "Cellular connected",
  "Cellular_getLocalIP": "Cellular get Local IP",
  "Cellular_gprsDisconect": "Cellular gprs Disconect",
  "Cellular_getNetworkState": "Cellular get Network State",
  "POWER": "Power",
  "power_isCharging": "isCharging",
  "power_isChargeFull": "isChargeFull",
  "power_setCharge": "setCharge %1",
  "power_getBatteryLevel": "get Battery Level",
  "POWER_SET_VIBRATION_ENABLE": "Включить вибрацию %1",
  "POWER_SET_LED": "Set LED %1",
  "POWER_SET_VIBRATION_INTENSITY": "Установить интенсивность вибрации %1",
  "POWER_ON": "Power on",
  "POWER_SET_RESTART": "Restart after seconds %1",
  "POWER_RESTART_ON": "Restart on %1 set minute %2 set hour %3 set date %4 set weekday %5",
  "POWER_SET_BUS_MODE": "Set bus power mode %1",
  "timer_callback": "timer callback %1",
  "timer_setTimerAttr": "Set %1 period %2 ms mode %3",
  "timer_setStart": "Start %1 period %2 ms mode %3",
  "timer_setStop": "Stop %1",
  "text_math_split": "Reduce %1 to %2 decimal places",
  "ESPNOW_GET_MAC_ADDR": "Get mac addr",
  "ESPNOW_SET_CHANNEL": "Set communication channel %1 (1 ~ 13)",
  "ESPNOW_ADD_PEER": "Add peer %1 as id %2",
  "ESPNOW_SET_PMK": "Set pmk %1",
  "ESPNOW_RECV_CB": "Receive mac_addr %1 data %2",
  "ESPNOW_SEND_CB": "After send message (flag %1)",
  "ESPNOW_BROADCAST": "Broadcast data %1",
  "ESPOW_SEND": "Send message id %1 with data %2",
  "RGB_MULTI_SET_SHOW_LOCK": "Set %1 show lock %2",
  "RGB_MULTI_SHOW": "Show %1 RGB LED",
  "SCREEN_SET_ROTATION": "Set screen rotate mode %1",
  "SCREEN_SET_BRIGHTNESS": "Установить яркость экрана %1",
  "SCREEN_CLEAN": "Очистить экран",
  "HAT_YUN": "YUN",
  "HAT_YUN_GET_TEMPERATURE": "Get hat yun temperature",
  "HAT_YUN_GET_HUMIDITY": "Get hat yun humidity",
  "HAT_YUN_GET_PRESURE": "Get hat yun Pressure %1",
  "HAT_YUN_GET_BRIGHTNESS": "Get hat yun Brightness %1",
  "HAT_YUN_SET_COLOR": "%1 Set hat yun index %2 %3 RGB color %4",
  "HAT_YUN_SET_ALL_COLOR": "%1 Set hat yun %2 all RGB color %3",
  "HAT_SERVO": "SERVO",
  "HAT_SERVO_SET_ANGLE": "Set %1 %2 %3 rotate to degree %4",
  "HAT_SERVO_WRITE": "%1 %2 %3 write %4 %5 μs",
  "HAT_SERVOS": "SERVOS",
  "HAT_SERVOS_SET_ANGLE": "%1 Set %2 servos %3 rotate %4 %5",
  "HAT_SERVOS_WRITE": "%1 Set %2 servos %3 write %4 %5 μs",
  "HAT_SERVOS_SET_COLOR": "%1 Set RGB Bar color %2",
  "HAT_SERVOS_SET_RGB_COLOR": "%1 Set RGB Bar color R %2 G %3 B %4",
  "HAT_PUPPY": "PuppyC",
  "HAT_PUPPY_SET_ANGLE": "%1 Set %2 servo %3 rotate %4 %5",
  "HAT_PUPPY_SET_ALL_ANGLE": "set servo angle 0: %1 1:%2 2:%3 3:%4",
  "HAT_JOYSTICK": "Joystick",
  "HAT_JOYSTICK_GET_X": "%1 Get %2 X",
  "HAT_JOYSTICK_GET_Y": "%1 Get %2 Y",
  "HAT_JOYSTICK_GET_PRESSED": "%1 Get %2 is pressed",
  "HAT_JOYSTICK_GET_REVERSE_X": "%1 Get %2 Reverse X",
  "HAT_JOYSTICK_GET_REVERSE_Y": "%1 Get %2 Reverse Y",
  "HAT_BUGC": "BugC",
  "HAT_BUGC_SET_PULSE": "SetPulse %1 %2",
  "HAT_BUGC_SET_ALL_PULSE": "SetAllPulse %1 %2 %3 %4",
  "HAT_BUGC_SET_COLOR": "%1 Set RGB Bar color %2 %3",
  "HAT_BUGC_SET_RGB_COLOR": "%1 Set RGB Bar color %2 R %3 G %4 B %5",
  "HAT_BUGC_SET_ALL_RGB_COLOR": "%1 Set RGB Bar color R %2 G %3 B %4",
  "HAT_FINGER": "FINGER",
  "HAT_FINGER_GET_STATE": "%1 get state",
  "HAT_FINGER_GET_ACCESS": "get access",
  "HAT_FINGER_GET_ID": "get id",
  "HAT_FINGER_REMOVE_ALL": "%1 removeAll",
  "HAT_FINGER_REMOVE_USER": "remove %1 id %2",
  "HAT_FINGER_ADD_USER": "%1 add user id %2 access %3",
  "HAT_FINGER_READ": "%1 read user with id access",
  "HAT_FINGER_GET_UNKNOWN": "%1 getUnknown",
  "HAT_BEETLEC": "BeetleC",
  "HAT_BEETLEC_SET_WHEEL_SPEED": "Set BeetleC %1 wheel speed %2",
  "HAT_BEETLEC_SET_COLOR": "%1 Set BeetleC index %2 %3 RGB color %4",
  "HAT_BEETLEC_SET_ALL_COLOR": "%1 Set BeetleC %2 all RGB color %3",
  "HAT_JOYC": "JoyC",
  "HAT_JOYC_SET_LED_COLOR": "Set led color R %1 G %2 B %3",
  "HAT_JOYC_GET_X": "Get %1 stick X value",
  "HAT_JOYC_GET_Y": "Get %1 stick Y value",
  "HAT_JOYC_GET_ANGLE": "Get %1 stick angle",
  "HAT_JOYC_GET_DISTANCE": "Get %1 stick distance",
  "HAT_JOYC_GET_PRESS": "Get %1 stick press state",
  "HAT_ROVERC": "RoverC",
  "HAT_ROVERC_SET_PULSE": "Set the %1 wheel pulse to %2",
  "HAT_ROVERC_SET_ALL_PULSE": "Set wheels pulse front-left %1 front-right %2 rear-left %3 rear-right %4",
  "HAT_ROVERC_SET_SPEED": "Set RoverC speed X %1 Y %2 Z %3",
  "HAT_TOF": "TOF",
  "HAT_TOF_GET_DISTANCE": "Get distance",
  "HAT_THERMAL": "Thermal",
  "HAT_THERMAL_GET_TEMP": "Get temperature X %1 Y %2",
  "HAT_THERMAL_GET_CENTER_TEMP": "Get center temperature",
  "HAT_THERMAL_GET_MAX_TEMP": "Get max temperature",
  "HAT_THERMAL_GET_MIN_TEMP": "Get min temperature",
  "HAT_THERMAL_SET_COLOR_MAX_TEMP": "Set the max visible temperature %1",
  "HAT_THERMAL_SET_COLOR_MIN_TEMP": "Set the min visible temperature %1",
  "HAT_THERMAL_UPDATE": "Update X %1 Y %2 show %3 show in center %4",
  "BASEX": "BaseX",
  "BASEX_SET_MODE": "Set %1 to %2",
  "BASEX_GET_ENCODER": "Get %1 encoder value",
  "BASEX_SET_ENCODER": "Set %1 encoder %2",
  "BASEX_SET_MOTOR_SPEED": "Set %1 speed %2",
  "BASEX_GET_MOTOR_SPEED": "Get %1 speed",
  "BASEX_GET_SPEED_20MS": "Get %1 speed in 20ms",
  "BASEX_SET_POSITION_POINT": "Set %1 position point to %2",
  "BASEX_SET_POSITION_PID_MAX_SPEED": "Set %1 position PID max speed to %2",
  "BASEX_SET_SPEED_POINT": "Set %1 speed point to %2",
  "BASEX_SET_SERVO_ANGLE": "Set %1 angle to %2",
  "BASEX_SET_SERVO_PULSE": "Set %1 pulse to %2",
  "BASEX_RUN_AHEAD": "%1 Run ahead %2",
  "UNIT_ACCEL": "Accel",
  "UNIT_ACCEL_GET_X_ACC": "Get %1 X ACC",
  "UNIT_ACCEL_GET_Y_ACC": "Get %1 Y ACC",
  "UNIT_ACCEL_GET_Z_ACC": "Get %1 Z ACC",
  "PLUS": "Plus",
  "PLUS_GET_ENCODE": "Get encode",
  "PLUS_CLEAN_ENCODE": "Clean encode",
  "PLUS_GET_PRESS": "Get press",
  "GO_PLUS": "GoPlus",
  "GO_PLUS2": "GoPlus2",
  "GO_PLUS_SET_SERVO": "Set servo %1 angle %2",
  "GO_PLUS_SET_MOTOR_SPEED": "Set motor %1 speed %2",
  "GO_PLUS_DIGITAL_READ": "Digital read %1 pos %2",
  "GO_PLUS_ANALOG_READ": "Analog read %1",
  "GO_PLUS2_SET_SERVO_PLUS": "Set servo %1 plus %2",
  "GO_PLUS2_DIGITAL_READ": "Digital read %1",
  "GO_PLUS2_DIGITAL_WRITE": "Digital write %1 %2",
  "HAT_CARDKB": "CardKb",
  "HAT_CARDKB_GET_KEY": "Get key",
  "HAT_CARDKB_GET_STRING": "Get string",
  "HAT_CARDKB_GET_PRESSED": "Get pressed",
  "UNIT_GPS_SET_TIME_ZONE": "set %1 time zone %2",
  "UNIT_GPS_GET_SPEED": "get %1 speed %2",
  "UNIT_GPS_GET_COURSE": "get %1 course",
  "GPS": "GPS",
  "GPS_GET_STATE": "Get time (return string)",
  "GPS_GET_LATITUDE": "Get latitude (return string: ddmm.mmmmm<W/E>)",
  "GPS_GET_LONGITUDE": "Get longitude (return string: dddmm.mmmmm<S/N>)",
  "GPS_GET_SATELLITE_NUM": "Get satellite num (return string)",
  "GPS_GET_POSTITIONING_QUALITY": "Get positioning quality (return string)",
  "GPS_SET_TIME_ZONE": "Set time zone %1 (-12 ~ 12)",
  "GPS_GET_SPEED": "Get speed %1 (return string)",
  "GPS_GET_COURSE": "Get course (return string)",
  "GPS_SET_CUSTOM": "Init with custom pin TX %1 RX %2",
  "MODBUS_MASTER": "Modbus Master",
  "MODBUS_MASTER_INIT": "Init baud %1 tx %2 rx %3 in uart %4 crc %5",
  "MODBUS_MASTER_SEND": "Send addr %1 function %2 reg addr %3 value %4",
  "MODBUS_MASTER_ANY": "Rx buffer cache number",
  "MODBUS_MASTER_READ": "Read rx data",
  "MODBUS_MASTER_RECV_CB": "Get rx addr %1 function %2 data %3 %4",
  "MODBUS_SLAVE": "Modbus Slave",
  "MODBUS_SLAVE_INIT": "Init addr %1 baud %2 tx %3 rx %4 in uart %5",
  "MODBUS_SLAVE_INIT_FUNC": "Init function %1 reg addr %2 value %3 method %4",
  "MODBUS_SLAVE_UPDATE_FUNC": "Update function %1 reg addr %2 value %3",
  "MODBUS_SLAVE_READ": "Get rx buffer data",
  "MODBUS_SLAVE_WRITE_CB": "Get reg write function %1 reg addr %2 value %3 %4",
  "MODBUS_SLAVE_GET_FUNC": "Get function %1 reg addr %2 value",
  "MODBUS_SLAVE_SEND": "Send addr %1 function %2 reg addr %3 value %4",
  "EEPROM": "EEPROM",
  "EEPROM_WRITE_STR": "EEPROM write key %1 value %2",
  "EEPROM_READ_STR": "EEPROM read key %1",
  "EEPROM_READ_INT": "EEPROM read key %1 to int",
  "BLYNK": "Blynk",
  "BLYNK_INIT": "Init blynk name %1 token %2 type %3",
  "BLYNK_VIRTUAL_WRITE": "Virtual write number %1 data %2",
  "BLYNK_NOTIFY": "Notify message %1",
  "BLYNK_TWEET": "Tweet message %1",
  "BLYNK_EVENT_WRITE": "On event write %1 get number %2 message %3 %4",
  "BLYNK_EVENT_READ": "On event read %1 get number %2 %3",
  "BLYNK_ON_EVENT": "On event %1 %2 %3",
  "BLE_UART": "BLE UART",
  "BLE_UART_INIT": "Init ble uart name %1",
  "BLE_UART_WRITE": "BLE UART write %1",
  "BLE_UART_ANY": "BLE UART remain cache",
  "BLE_UART_READ": "BLE UART read all",
  "BLE_UART_READ_NUMBER": "BLE UART read %1 characters",
  "BLE_UART_ON_RECV": "BLE UART on recv %1 %2",
  "ECHO_STT": "Echo STT",
  "ECHO_STT_INIT": "Init echo speech recognition token %1",
  "ECHO_STT_RECV_DATA": "Recv echo data %1 %2",
  "ECHO_STT_GET_TEXT": "Get recv text",
  "SERVO_INIT_ADVANCE": "%1 %2 Init Pin %3 freq %4 min %5 us, max %6 us, angle range %7",
  "SERVO_WRITE_ANGLE": "%1 %2 rotate to degree %3",
  "SERVO_WRITE_US": "%1 %2 write %3 us",
  "UNIT_ACSOCKET": "AC Socket",
  "UNIT_ACSOCKET_SET_VALUE": "%1 Set %2 value %3",
  "UNIT_V": "V Function",
  "UNIT_V_MOTION_DETECT": "Motion Detect",
  "UNIT_V_TARGET_TRACK": "Target Track",
  "UNIT_V_COLOR_TRACK": "Color Track",
  "UNIT_V_FACE_DETECT": "Face Detect",
  "UNIT_V_QR_CODE": "QR Code",
  "UNIT_V_APRILTAG": "Apriltag Code",
  "UNIT_V_BAR_CODE": "Bar Code",
  "UNIT_V_DATAMATRIX_CODE": "Datamatrix Code",
  "UNIT_V_LINE_TRACKER": "Line Tracker",
  "UNIT_V_TAG_READER": "Tag Reader",
  "UNIT_IMU": "IMU",
  "UNIT_BPS": "BPS",
  "UNIT_TVOC": "TVOC/eCO2",
  "UNIT_VMETER": "VMeter",
  "UNIT_AMETER": "AMeter",
  "UNIT_OP": "OP",
  "UNIT_HALL": "Hall",
  "UNIT_FAN": "FAN",
  "UNIT_VIBRATOR": "Vibrator Motor",
  "UNIT_LASERTX": "LASER.TX",
  "UNIT_LASERRX": "LASER.RX",
  "UNIT_ULTRASONIC": "Ultrasonic",
  "UNIT_WATERING": "Watering",
  "UNIT_RELAY4": "Relay4",
  "V_INIT": "%1 init",
  "V_SET_DETECT_THRESHOLD": "Set detect threshold %1",
  "V_SET_DETECT_MODE": "Set detect %1 mode",
  "V_GET_RATE_DIFFERENCE": "Get rate of difference",
  "V_GET_MAX_DIFFERENCE": "Get max difference",
  "V_SET_TRACK_COORDINATE": "Set coordinate with x %1 y %2 width %3 height %4",
  "V_GET_TARGET_TRACK_BOX_DETAIL": "Get track box detail ",
  "V_SET_TRACK_COLOR": "Set color by L min %1 L max %2 A min %3 A max %4 B min %5 B max %6",
  "V_SET_SCAN_INTERVAL": "Set scan interval x %1 y %2",
  "V_SET_MERGE_THRESHOLD": "Set box merge threshold %1",
  "V_SET_THRESHOLD": "Set box threshold width %1 height %2",
  "V_GET_TRACK_BOX_NUMBER": "Get box numbers",
  "V_GET_TRACK_BOX_DETAIL": "Get number %1 box detail ",
  "V_GET_FACE_NUMBER": "Get face numbers",
  "V_GET_FACE_DETAIL": "Get number %1 face detail ",
  "V_GET_QR_TEXT": "Get QR code text",
  "V_GET_QR_VERSION": "Get QR code version",
  "V_GET_APRILTAG_ROTATION": "Get AprilTag rotation",
  "V_GET_APRILTAG_LOCATION": "Get AprilTag location",
  "V_GET_APRILTAG_TRANSLATION": "Get AprilTag Translation",
  "V_GET_BAR_TEXT": "Get bar code text",
  "V_GET_BAR_ROTATION": "Get bar code rotation",
  "V_GET_BAR_TYPE": "Get bar code type",
  "V_GET_BAR_LOCATION": "Get bar code location",
  "V_GET_DATAMATRIX_TEXT": "Get Datamatrix code text",
  "V_GET_DATAMATRIX_ROTATION": "Get Datamatrix code rotation",
  "V_GET_DATAMATRIX_LOCATION": "Get Datamatrix code location",
  "V_GET_ANGLE": "Get angle",
  "V_SET_LINE_AREA_WEIGHT": "Set line area weight0 %1 weight1 %2 weight2 %3",
  "V_GET_TOTAL_NUMBER": "Get total number",
  "V_GET_BINSTR": "Get binstr %1",
  "V_GET_CODE": "Get code %1",
  "V_GET_TAG_LOCATION": "Get tag location %1",
  "NTP_INIT": "Init ntptime with host %1 and timezone %2",
  "NTP_INIT_DROPDOWN": "Init ntptime with host %1 and timezone %2",
  "NTP_GET_TIMESTAMP": "Get timestamp",
  "NTP_GET_DATE_FORMAT": "Get date format with %1",
  "NTP_GET_TIME_FORMAT": "Get time format with %1",
  "NTP_GET_DATE_TIME_FORMAT": "Get date format with %1 and time format with %2",
  "NTP_GET_YEAR": "Get year",
  "NTP_GET_MONTH": "Get month",
  "NTP_GET_DAY": "Get day",
  "NTP_GET_WEEKDAY": "Get weekday",
  "NTP_GET_HOUR": "Get hour",
  "NTP_GET_MINUTE": "Get minute",
  "NTP_GET_SECOND": "Get second",
  "SDCARD_ISFILE": "isFile %1",
  "SDCARD_ISDIRECTORY": "isDirectory %1",
  "SDCARD_ISEXIST": "%1 isExist in %2",
  "UNIT_IMU_GET_ACC_X": "Get %1 X ACC",
  "UNIT_IMU_GET_ACC_Y": "Get %1 Y ACC",
  "UNIT_IMU_GET_ACC_Z": "Get %1 Z ACC",
  "UNIT_IMU_GET_GYR_X": "Get %1 X Gyro",
  "UNIT_IMU_GET_GYR_Y": "Get %1 Y Gyro",
  "UNIT_IMU_GET_GYR_Z": "Get %1 Z Gyro",
  "BPS_GET_TEMPERATURE": "Get %1 temperature",
  "BPS_GET_PRESSURE": "Get %1 pressure",
  "MEDIATRANS": "MediaTrans",
  "MIC_RECORD": "Microphone Record",
  "TIMER_CAM": "Timer Camera",
  "AUDIO_PLAY": "Audio Play",
  "MIC_RECORD_SECOND": "Mic record init",
  "MIC_RECORD_SERVER": "Mic record to server second %1 token %2 ",
  "MIC_RECORD_FILE": "Mic record to file second %1 file %2",
  "TIMERCAM_INIT": "Init token %1 x %2 y %3 width %4 height %5",
  "TIMERCAM_SHOW": "Timer Camera show",
  "TIMERCAM_HIDE": "Timer Camera hide",
  "TIMERCAM_DELETE": "Timer Camera delete",
  "TIMERCAM_DEINIT": "Timer Camera deinit",
  "AUDIO_INIT": "Init token %1 autoplay %2",
  "AUDIO_SET_PLAY": "Audio play",
  "AUDIO_GET_STATE": "Get audio state",
  "AUDIO_DEINIT": "Audio deinit",
  "TVOC_SET_IAQ_BASELINE": "Set %1 iaq baseline eCO2 %2 TVOC %3",
  "TVOC_GET_IAQ_BASELINE": "Get %1 iaq baseline",
  "TVOC_GET_TVOC": "Get %1 TVOC",
  "TVOC_BASELINE_TVOC": "Get %1 baseline TVOC",
  "TVOC_GET_ECO2": "Get %1 eCO2",
  "TVOC_GET_BASELINE_ECO2": "Get %1 baseline eCO2",
  "TVOC_GET_H2": "Get %1 H2",
  "TVOC_GET_ETHANOL": "Get %1 Ethanol",
  "VMETER_SET_MODE": "Set %1 mode %2",
  "VMETER_SET_RATE": "%1 Set %2 samples per second",
  "VMETER_SET_GAIN": "Set %1 gain %2",
  "VMETER_VOLTAGE": "Get %1 voltage",
  "VMETER_RAW": "Get %1 raw",
  "AMETER_CURRENT": "Get %1 current",
  "SET_OFF": "Set %1 off",
  "SET_ON": "Set %1 on",
  "SET_ON_DUTY": "Set %1 on by duty %2",
  "ULTRASONIC_DISTANCE": "%1 distance",
  "BATTERY": "Battery",
  "BATTERY_VOLTAGE": "Get battery voltage",
  "THIRDPARTY": "Third Party",
  "MYCOBOT": "MyCobot",
  "MYCOBOT_PRO": "MyCobot Pro",
  "MYCOBOT_SET_SERVO_ANGLE": "Set servo pos %1 angle %2 speed %3",
  "MYCOBOT_SET_SERVOS_ANGLE": "Set servos angle1 %1 angle2 %2 angle3 %3 angle4 %4 angle5 %5 angle6 %6 speed %7",
  "MYCOBOT_SET_ALL_SERVO_ANGLE": "Set all servo angle %1 speed %2",
  "MYCOBOT_RELEASE_SERVOS": "Release servos",
  "MYCOBOT_GET_SERVO_ANGLE": "Get servo %1 angle",
  "MYCOBOT_GET_ALL_SERVO_ANGLE": "Get all servos angle",
  "SERVO2_POSITION": "Set %1 servo position %2",
  "SERVO2_RELEASE": "Set %1 servo release",
  "HDRIVER_SET_SPEED": "Set speed %1",
  "HDRIVER_GET_VOLTAGE": "Get voltage",
  "HDRIVER_GET_STATUS": "Get status",
  "MYCOBOT_POWER_ON": "Power on",
  "MYCOBOT_POWER_OFF": "Power off",
  "MYCOBOT_GET_STATUS": "Is power on",
  "MYCOBOT_SET_FREE_MODE": "Set free mode",
  "MYCOBOT_GET_ANGLES": "Get all angles",
  "MYCOBOT_SEND_ANGLE": "Set id %1 angle %2 speed %3",
  "MYCOBOT_SEND_ALL_ANGLES": "Set all angles %1 speed %2",
  "MYCOBOT_SEND_ALL_ANGLES_DEGREE": "Set all angles 1 %1 2 %2 3 %3 4 %4 5 %5 6 %6 speed %7",
  "MYCOBOT_GET_COORDS": "Get coords",
  "MYCOBOT_SEND_COORD": "Set id %1 coord %2 speed %3",
  "MYCOBOT_SEND_COORDS": "Set all coords %1 speed %2 mode %3",
  "MYCOBOT_SEND_COORDS_LIST": "Set all coords x %1 y %2 z %3 rx %4 ry %5 rz %6 speed %7 mode %8",
  "MYCOBOT_JOG_ANGLE": "Set joint angle id %1 direction %2 speed %3",
  "MYCOBOT_JOG_STOP": "Set joint stop",
  "MYCOBOT_SET_ATOM_COLOR": "Set atom color R %1 G %2 B %3",
  "MYCOBOT_ISMOVING": "Get is moving",
  "MYCOBOT_PAUSE": "Set pause",
  "MYCOBOT_RESUME": "Set resume",
  "MYCOBOT_STOP": "Set stop",
  "MYCOBOT_IS_IN_POSITION": "Get is in position data 1 %1 2 %2 3 %3 4 %4 5 %5 6 %6 id %7",
  "MYCOBOT_GET_SPEED": "Get speed",
  "MYCOBOT_SET_SPEED": "Set speed %1",
  "MYCOBOT_GET_RADIANS": "Get radians",
  "MYCOBOT_SEND_RADIANS": "Set radians %1 speed %2",
  "MYCOBOT_SEND_RADIANS_COPY": "Set radians 1 %1 2 %2 3 %3 4 %4 5 %5 6 %6 speed %7",
  "MYCOBOT_ISPAUSE": "Get is pause",
  "MYCOBOT_JOG_COORD": "Set joint coord id %1 direction %2 speed %3",
  "MYCOBOT_GET_JOINT_MIN_ANGLE": "Get joint id %1 min angle",
  "MYCOBOT_GET_JOINT_MAX_ANGLE": "Get joint id %1 max angle",
  "MYCOBOT_IS_SERVO_ENABLE": "Get is servo id %1 enable",
  "MYCOBOT_IS_ALLSERVO_ENABLE": "Get is all servo enable",
  "MYCOBOT_RELEASE_SERVO": "Release servo id %1",
  "MYCOBOT_FOCUS_SERVO": "Focus servo id %1",
  "MYCOBOT_SET_PIN_MODE": "Set pin number %1 mode %2",
  "MYCOBOT_SET_DIGITAL_OUTPUT": "Set digital output pin number %1 pin signal %2",
  "MYCOBOT_GET_DIGITAL_INPUT": "Get digital input pin number %1",
  "MYCOBOT_SET_PWM_MODE": "Set pwm mode pin number %1 channel %2",
  "MYCOBOT_SET_PWM_OUTPUT": "Set pwm output channel %1 freq %2 value %3",
  "MYCOBOT_GET_GRIPPER_VALUE": "Get gripper value",
  "MYCOBOT_SET_GRIPPER_VALUE": "Set gripper value %1 speed %2",
  "MYCOBOT_SET_GRIPPER_STATE": "Set gripper state flag %1 speed %2",
  "MYCOBOT_SET_GRIPPER_INI": "Set gripper ini",
  "MYCOBOT_IS_GRIPPER_MOVING": "Get is gripper moving",
  "MYCOBOT_INIT": "Init myCobot",
  "MYCOBOTPRO_INIT": "Init myCobot Pro",
  "MYCOBOTPRO_GET_JOINT_CURRENT": "Get joint current id %1",
  "MYCOBOTPRO_SET_JOINT_CURRENT": "Set joint current id %1 value %2",
  "MYCOBOTPRO_SET_CURRENT_STATE": "Set current state %1",
  "MOTION_GET_SERVO_ANGLE": "Get servo %1 angle",
  "MOTION_SET_SERVO_ANGLE": "Set servo %1 angle %2",
  "MOTION_GET_SERVO_PULSE": "Get servo %1 pulse",
  "MOTION_SET_SERVO_PULSE": "Set servo %1 pulse %2",
  "MOTION_GET_MOTOR_SPEED": "Get motor %1 speed",
  "MOTION_SET_MOTOR_SPEED": "Set motor %1 speed %2",
  "LORAWAN_NETWORK_RESET": "Reset",
  "LORAWAN_NETWORK_RESET_DEFAULT": "Reset module to default",
  "LORAWAN_NETWORK_GET_DEVADDR": "Get device address",
  "LORAWAN_NETWORK_SET_DEVADDR": "Set device address %1",
  "LORAWAN_NETWORK_GET_DEVEUI": "Get device eui",
  "LORAWAN_NETWORK_SET_DEVEUI": "Set device eui %1",
  "LORAWAN_NETWORK_GET_APPEUI": "Get app eui",
  "LORAWAN_NETWORK_SET_APPEUI": "Set app eui %1",
  "LORAWAN_NETWORK_SET_APPKEY": "Set app key %1",
  "LORAWAN_NETWORK_SET_APPSESSIONKEY": "Set app session key %1",
  "LORAWAN_NETWORK_SET_NWKSKEY": "Set network session key %1",
  "LORAWAN_NETWORK_SET_MODE": "Set mode %1",
  "LORAWAN_NETWORK_GET_BAND_PLAN": "Get band plan",
  "LORAWAN_NETWORK_SET_BAND_PLAN": "Set band plan %1",
  "LORAWAN_NETWORK_GET_DATARATE": "Get datarate",
  "LORAWAN_NETWORK_SET_DATARATE": "Set datarate %1",
  "LORAWAN_NETWORK_SET_DEFAULT_DATARATE": "Set defalut datarate %1",
  "LORAWAN_NETWORK_GET_CHANNEL_FREQUENCY": "Get channel %1 frequency",
  "LORAWAN_NETWORK_SET_CHANNEL_FREQUENCY": "Set channel %1 frequency %2 dr min %3 dr max %4",
  "LORAWAN_NETWORK_DEL_CHANNEL_FREQUENCY": "Delete channel %1 frequency",
  "LORAWAN_NETWORK_GET_ENABLE_CHANNELS": "Get enable channels",
  "LORAWAN_NETWORK_ENABLE_CHANNELS": "Enable channels %1",
  "LORAWAN_NETWORK_GET_ADAPTIVE_STATUS": "Get adaptive datarate status",
  "LORAWAN_NETWORK_SET_ADAPTIVE_STATUS": "Set adaptive datarate status %1",
  "LORAWAN_NETWORK_GET_CLASS_MODE": "Get class mode",
  "LORAWAN_NETWORK_SET_CLASS_MODE": "Set class mode %1",
  "LORAWAN_NETWORK_SET_TX_POWER": "Set tx power %1",
  "LORAWAN_NETWORK_JOIN": "Join LoRaWAN network",
  "LORAWAN_NETWORK_GET_PORT": "Get port",
  "LORAWAN_NETWORK_SET_PORT": "Set port %1",
  "LORAWAN_NETWORK_SEND_CONFIRM_MSG": "Send confirm msg %1",
  "LORAWAN_NETWORK_SEND_UNCONFIRM_MSG": "Send unconfirm msg %1",
  "LORAWAN_NETWORK_SEND_CONFIRM_HEX_MSG": "Send confirm hex msg %1",
  "LORAWAN_NETWORK_SEND_UNCONFIRM_HEX_MSG": "Send unconfirm hex msg %1",
  "LORAWAN_NETWORK_GET_DOWNLINK_MSG": "Get downlink msg",
  "LORAWAN_NETWORK_GET_DOWNLINK_STATUS": "Get downlink status",
  "LORAWAN_NETWORK_SET_UNCONFIRMED_REPEAT_TIME": "Set unconfirmed repeat time %1",
  "LORAWAN_NETWORK_SET_CONFIRMED_REPEAT_TIME": "Set confirmed repeat time %1",
  "LORAWAN_NETWORK_GET_RXWIN2_CONFIG": "Get RXWIN2 config",
  "LORAWAN_NETWORK_SET_RXWIN2_DATERATE": "Set RXWIN2 freq %1 daterate %2",
  "LORAWAN_NETWORK_SET_RXWIN2_SPREADFACTOR": "Set RXWIN2 freq %1 spreadfactor %2 bandwidth %3",
  "LORAWAN_NETWORK_GET_RXWIN1_CONFIG": "Get RXWIN1 config",
  "LORAWAN_NETWORK_SET_RXWIN1_CHANNEL_FREQUENCY": "Set RXWIN1 channel %1 frequency %2",
  "LORAWAN_NETWORK_GO_TO_SLEEP": "Go to sleep",
  "LORAWAN_NETWORK_WAKEUP": "Wakeup",
  "WATERING_GET_ADC_VALUE": "Get %1 adc value",
  "WATERING_SET_PUMP_STATUS": "Set %1 pump status %2",
  "RELAY4_GET_MODE": "Get %1 mode",
  "RELAY4_SET_MODE": "Set %1 mode %2",
  "RELAY4_GET_LED_STATUS": "Get %1 led %2 status",
  "RELAY4_SET_LED_STATUS": "Set %1 led %2 status %3",
  "RELAY4_GET_STATUS": "Get %1 relay %2 status",
  "RELAY4_SET_STATUS": "Set %1 relay %2 status %3",
  "POWER_MAIN_ON": "Set main power on",
  "POWER_MAIN_OFF": "Set main power off",
  "POWER_EPD_ON": "Set epd power on",
  "POWER_EPD_OFF": "Set epd power off",
  "POWER_EXT_ON": "Set extern port power on",
  "POWER_EXT_OFF": "Set extern port power off",
  "SHT30": "SHT30",
  "SHT30_GET_HUMIDITY": "Get humidity",
  "SHT30_GET_TEMPERATURE": "Get temperature",
  "TENCENT": "Tencent",
  "TENCENT_INIT": "Init product id %1 device name %2 device sceret %3 keepalive %4",
  "TENCENT_SUB": "Tencent subscribe %1 with topic_data",
  "TENCENT_PUBLISH": "Publish topic %1 msg %2",
  "TENCENT_SUBSCRIBE_PROPERTY_MSG": "Tencent subscribe with property_data",
  "TENCENT_PUBLISH_PROPERTY_MSG": "Publish property msg",
  "TENCENT_PUBLISH_RAW_MSG": "Publish raw msg %1",
  "TENCENT_PUBLISH_DATA_MSG": "Publish data msg %1",
  "TENCENT_PUBLISH_EVENT_MSG": "Publish event msg %1",
  "TENCENT_GET_PROPERTY_TOPICDATA": "Get property_data",
  "AWS": "AWS",
  "AWS_INIT": "Init things name %1 host %2 port %3 keepalive %4",
  "AWS_SUB": "AWS subscribe %1 with topic_data",
  "AWS_PUBLISH": "Publish topic %1 msg %2",
  "AZURE": "Azure",
  "AZURE_SUB": "Subscribe C2D message %1",
  "AZURE_PUBLISH": "Publish D2C message %1 to IoT Hub",
  "AZURE_GET_TOPIC_DATA": "Get C2D message",
  "GET_TOPICDATA": "Get topic_data",
  "QRCODE": "QRCode",
  "BASE_GPS_INIT": "Init timezone %1 formatting %2",
  "BASE_GPS_TIMESTAMP": "Get timestamp",
  "BASE_GPS_DATE": "Get date",
  "BASE_GPS_LATITUDE": "Get latitude",
  "BASE_GPS_LONGITUDE": "Get longitude",
  "BASE_GPS_SPEED": "Get speed",
  "BASE_GPS_COURSE": "Get course",
  "BASE_GPS_ALTITUDE": "Get altitude",
  "BASE_GPS_GEOID_HEIGHT": "Get geoid height",
  "BASE_GPS_SATELLITES_IN_VIEW": "Get satellites in view",
  "BASE_GPS_SATELLITES_IN_USE": "Get satellites in use",
  "BASE_GPS_SATELLITES_USED": "Get satellites used",
  "BASE_GPS_LAST_SV_SENTENCE": "Get last sv sentence",
  "BASE_GPS_TOTAL_SV_SENTENCE": "Get total sv sentences",
  "BASE_GPS_SATELLITE_DATA": "Get satellite data",
  "BASE_GPS_HDOP": "Get hdop",
  "BASE_GPS_PDOP": "Get pdop",
  "BASE_GPS_VDOP": "Get vdop",
  "BASE_GPS_DEINIT": "Deinit",
  "BASE_QRCODE_INIT": "Init QRCode",
  "BASE_QRCODE_READ": "Get read",
  "BASE_QRCODE_STATUS": "Get status",
  "BASE_STEPMOTOR_INIT": "Init step type %1",
  "BASE_STEPMOTOR_MOVE_STEPS": "Set move steps %1 clockwise %2",
  "BASE_STEPMOTOR_MOVE_CIRCLES": "Set move circle %1 clockwise %2",
  "BASE_STEPMOTOR_ENABLE": "Enable",
  "BASE_STEPMOTOR_DISBALE": "Disbale",
  "BASE_STEPMOTOR_RESET": "Reset",
  "BASE_STEPMOTOR_GET_VOLTAGE": "Get voltage",
  "BASE_STEPMOTOR_GET_STATUS": "Get status",
  "INIT": "Init",
  "TENCENT_START": "Tencent start",
  "AWS_START": "AWS start",
  "AZURE_START": "Start azure",
  "AXP_GET_BAT_VOLTAGE_PERCENT": "Get battery percentage",
  "HAT_ROVERC_SET_SERVO_ANGLE": "Set servo pos %1 angle %2",
  "HAT_ROVERC_SET_SERVO_PULSE": "Set servo pos %1 pulse %2",
  "UNIT_DDS": "DDS",
  "UNIT_UHF_RFID": "UHF-RFID",
  "DDS_SET_FREQ": "Set %1 reg %2 freq %3",
  "DDS_SET_PHASE": "Set %1 reg %2 phase %3",
  "DDS_SET_FREQ_PHASE": "Set %1 %2 freq CH %3  HZ %4 phase CH %5  ∅ %6",
  "DDS_SET_MODE": "Set %1 mode %2",
  "DDS_SET_CTRL": "Set %1 ctrl %2",
  "DDS_SELECT_FREQ_REG": "Select %1 freq reg num %2",
  "DDS_SELECT_PHASE_REG": "Select %1 phase reg num %2",
  "DDS_QUICK_OUTPUT": "%1 quick output mode %2 freq %3 phase %4",
  "DDS_OUTPUT": "%1 output freq %2 phase %3",
  "DDS_SET_SLEEP": "Set %1 sleep level %2",
  "DDS_RESET": "%1 reset",
  "UHF_RFID_HARDWARE_VERSION": "Get %1 hardware version",
  "UHF_RFID_SOFTWARE_VERSION": "Get %1 software version",
  "UHF_RFID_MANUFACTURER": "Get %1 manufacturer",
  "UHF_RFID_SINGLE_POLLING": "Get %1 single reading",
  "UHF_RFID_MULTIPLE_POLLING_START": "Set %1 multiple polling start counts %2",
  "UHF_RFID_MULTIPLE_POLLING_READ": "Get %1 multiple polling read",
  "UHF_RFID_MULTIPLE_POLLING_STOP": "Get %1 multiple polling stop",
  "UHF_RFID_SELECT_TAG_PARAM": "Set %1 select tag param %2 target bit %3 %4 action bit %5 %6 membank bit %7 %8 pointer (int type, unit in bit) %9 epc (HEX format string) %10 truncate %11",
  "UHF_RFID_GET_SELECT_TAG_PARAM": "Get %1 select tag param",
  "UHF_RFID_SET_SELECT_MODE": "Set %1 select mode %2",
  "UHF_RFID_READ_MEMORY_BANK": "%1 read memory bank sa %2 data len %3 mem bank %4 access password %5",
  "UHF_RFID_WRITE_MEMORY_BANK": "%1 write memory bank data %2 sa %3 mem bank %4 access password %5",
  "UHF_RFID_INACTIVATED_TAG": "Set %1 inactivated tag kill by password %2",
  "UHF_RFID_SET_REGION": "Set %1 region code %2",
  "UHF_RFID_GET_REGION": "Get %1 region code",
  "UHF_RFID_SET_CHANNEL_FREQ": "Set %1 channel freq %2 MHZ",
  "UHF_RFID_GET_CHANNEL_FREQ": "Get %1 channel freq",
  "UHF_RFID_ENABLE_AUTOMATIC_FREQ_HOPPING": "%1 enable automatic freq hopping",
  "UHF_RFID_DISABEL_AUTOMATIC_FREQ_HOPPING": "%1 disabel automatic freq hopping",
  "UHF_RFID_GET_TX_POWER": "Get %1 tx power",
  "UHF_RFID_SET_TX_POWER": "Set %1 tx power %2",
  "UHF_RFID_ENABLE_CONTINUOUS_CARRIER": "%1 enable continuous carrier",
  "UHF_RFID_DISABLE_CONTINUOUS_CARRIER": "%1 disable continuous carrier",
  "UHF_RFID_SLEEP": "%1 sleep",
  "UHF_RFID_WAKEUP": "%1 wakeup",
  "UHF_RFID_WRITE_CUSTOM_COMMAND": "%1 write customer command list %2 reply %3",
  "IOT_BLYNK": "Legacy Blynk (V1)",
  "IOT_BLYNK_INIT": "Init with token %1",
  "IOT_BLYNK_DISCONNECT": "Disconnect",
  "IOT_BLYNK_VIRTUAL_WRITE": "Virtual pin number %1 data %2",
  "IOT_BLYNK_VIRTUAL_SYNC": "Virtual sync pin number %1",
  "IOT_BLYNK_EMAIL": "Email to %1 subject %2 body %3",
  "IOT_BLYNK_TWEET": "Tweet message %1",
  "IOT_BLYNK_NOTIFY": "Notify message %1",
  "IOT_BLYNK_SET_PROPERTY": "Set property pin number %1 property name %2 data %3",
  "IOT_BLYNK_EVENT_WRITE": "On event write %1 get pin number %2 value message %3 %4",
  "IOT_BLYNK_EVENT_READ": "On event read %1 get pin number %2 %3",
  "IOT_BLYNK_RUN": "Run in loop",
  "IOT_BLYNK_INIT_CUSTOMER": "Init with customer server %1 port %2 token %3 heartbeat %4 seconds",
  "GRBL": "GRBL",
  "GRBL_TURN": "Run motor x %1 y %2 z %3 speed %4",
  "GRBL_G_CODE": "Write G-code %1",
  "GRBL_SET_MODE": "Set GRBL mode %1",
  "GRBL_READ_CLEAN": "Clean GRBL return message",
  "GRBL_READ_LINE": "Read GRBL return message",
  "GRBL_READ_IDLE": "Is not in running",
  "GRBL_IN_LOCK": "Limit is in lock",
  "GRBL_WAIT_IDLE": "Wait motor stop run",
  "GRBL_UNLOCK": "Unlock limit",
  "GRBL_LOCK_MOTOR": "Lock motor after stop",
  "GRBL_UNLOCK_MOTOR": "Unlock motor after stop",
  "SOCKET": "Socket",
  "SOCKET_UDP_SERVER_START": "UDP server start %1 set ip address %2 port %3",
  "SOCKET_UDP_CLIENT_START": "UDP client start %1 set ip address %2 port %3",
  "SOCKET_UDP_SENDTO": "Send data %1 to ip address %2 port %3",
  "SOCKET_WRITE": "Write data %1",
  "SOCKET_SEND_MSG": "Send data %1",
  "SOCKET_CLOSE": "Close",
  "SOCKET_RECV": "Receive data by %1 bytes",
  "SOCKET_READ": "Read %1 bytes",
  "AZURE_INIT_IOTHUB": "IoT Hub Auth",
  "AZURE_INIT_CENTRAL": "Init IoT Central scope id %1 device id %2 device key %3",
  "AZURE_SUB_DIRECT": "Subscribe direct method %1 %2",
  "AZURE_SUB_DIRECT_RESPONSE": "%1 response status %2",
  "AZURE_UPDATE_PROPERTY": "Update twin reported properties",
  "AZURE_RETRIEVE_TWIN_PROPERTY": "Retrieve twin properties",
  "COMX": "COM.X",
  "LORAWAN470": "LoRaWAN 470",
  "LORAWAN915": "LoRaWAN 915",
  "LORAWAN470_INIT": "Init LoRaWAN 470 TX %1 RX %2",
  "LORAWAN470_CONFIG_ABP": "Config ABP mode %1 device address %2 app session key %3 network session key %4",
  "LORAWAN470_GET_ABP_CONFIG": "Get ABP config",
  "LORAWAN470_CONFIG_OTAA": "Config OTAA mode %1 device eui * %2 app key * %3 app eui %4",
  "LORAWAN470_GET_OTAA_CONFIG": "Get OTAA config",
  "LORAWAN470_CHECK_JOIN_STATUS": "Check join status",
  "LORAWAN470_CHECK_SENT_STATUS": "Check uplink data status",
  "LORAWAN470_CHECK_DOWNLINK_DATA": "Check and receive downlink data",
  "LORAWAN470_FREQUENCY_BAND_MASK": "Set frequency band mask %1 channels",
  "LORAWAN470_SET_RX_WINDOW_PARAM": "Config RX window param %1 RX1 offset %2 RX2 datarate %3 %4 RX2 freq (Hz) %5",
  "LORAWAN470_SET_CLASS_MODE": "Set class mode %1",
  "LORAWAN470_SEND_DATA": "Send data payload %1",
  "LORAWAN470_SET_UPLINK_APP_PORT": "Set uplink app port %1 (1 ~ 233)",
  "LORAWAN470_JOIN": "Join LoRaWAN network %1 %2 %3 %4 %5 period (seconds) %6 maximum number of attempts %7",
  "LORAWAN470_SET_UPLINK_MODE": "Set uplink downlink %1",
  "LORAWAN915_INIT": "Init LoRaWAN 915 TX %1 RX %2",
  "WDT": "Watch Dog Timer",
  "WDT_INIT": "Init WDT timeout %1 milliseconds",
  "WDT_FEED": "WDT feed",
  "CAN": "CAN",
  "CAN_INIT": "Init bus %1 extframe %2 mode %3 baudrate %4 TX %5 RX %6",
  "CAN_SET_FILTER": "Set filter bank %1 mode %2 message %3",
  "CAN_SEND": "Send message %1 with id %2",
  "CAN_RECV": "Receive message",
  "CAN_RESTART": "Restart",
  "CAN_CLEARFILTER": "Clear filter",
  "CAN_CLEAR_TX_QUEUE": "Clear TX queue",
  "CAN_CLEAR_RX_QUEUE": "Clear RX queue",
  "CAN_STATE": " Get state of the controller",
  "CAN_ANY": "If any message waiting on the FIFO",
  "CAN_DEINIT": "Deinit",
  "AZURE_SUB_TWIN_DESIRED": "Subscribe twin desired payload %1",
  "RGB_MULTI_SET_HEXAGON_MATRIX": "neopixel hexagon matrix in",
  "SET": "Set",
  "RED": "red",
  "GREEN": "green",
  "BLUE": "blue",
  "UNIT_GPS_GET_STATE": "get %1 time",
  "UNIT_GPS_GET_SATELLITE_NUM": "get %1 satellite num",
  "UNIT_GPS_GET_POSITIONING_QUALITY": "get %1 positioning quality",
  "SPEAKER_PLAY_CLOUD_WAV": "Play cloud WAV file (URL) %1 volume %2",
  "IMAGE_SET_IMAGE_NETWORK": "%1 Set %2 network image %3",
  "ADDWAV": "Add WAV",
  "WAV": "WAV",
  "WAVFILE_SIZE_ERROR": "File must be less than 500KB.",
  "LABEL_SET_WIDTH": "Set %1 width %2",
  "LABEL_SET_TEXT_MODE": "Set %1 long text mode %2",
  "UNIT_CAM": "UNITCAM",
  "UNIT_CAM_SET_SHOW": "Set %1 image %2 in screen",
  "UNIT_CAM_SET_POSITION": "Set %1 image position x %2 y %3",
  "UNIT_CAM_SET_SIZE": "Set %1 image size %2",
  "UNIT_CAM_SET_BRIGHTNESS": "Set %1 led brightness %2",
  "UNIT_CAM_SET_MODE": "Switch %1 mode to %2",
  "UNIT_CAM_SET_WIFI": "Set %1 connect wifi ssid %2 pwd %3",
  "UNIT_CAM_SET_UPLOAD_TIME": "Set %1 upload time %2 seconds in cloud mode",
  "UNIT_CAM_GET_TOKEN": "Get %1 cloud token",
  "UNIT_CAM_GET_QRCODEURL": "Get qrcode url token %1",
  "LCD_QRCODE": "Lcd.qrcode text %1 x %2 y %3 width %4 version %5",
  "COMLTE": "LTE",
  "COMLTE_INIT": "Init LTE TX %1 RX %2",
  "COMLTE_CHECK_STATUS": "Check module status",
  "COMLTE_POWER_DOWN_MODULE": "Power down module",
  "COMLTE_RESET_MODULE": "Reset module",
  "COMLTE_CHECK_SINGLE_QUALITY": "Check signal quality",
  "COMLTE_CHECK_NETWORK_REGISTRATION": "Check network registration",
  "COMLTE_CHECK_GPRS_NETWORK_REGISTRATION": "Check GPRS network registration",
  "COMLTE_ENABLE_PDP_CONTEXT": "Enable PDP context",
  "COMLTE_HTTP_TERMINATE": "HTTP(S) terminate",
  "COMLTE_HTTP_GET": "HTTP(S) GET url %1",
  "COMLTE_HTTP_POST": "HTTP(S) POST url %1 type %2 data %3",
  "AZURE_INIT_IOTHUB_CONNECTION": "Primary connection string",
  "OPEN_SDCARD_FILE": "open sdcard file %1 mode %2",
  "FILE_READ_ALL": "file read all %1",
  "FILE_READ_BYTES": "file read %1 bytes %2",
  "FILE_READ_LINE": "file read line %1",
  "FILE_WRITE": "file write %1",
  "FILE_SET_SEEK": "file set seek %1",
  "FILE_GET_SEEK": "file get seek %1",
  "SDCARD_LISTDIR": "sdcard listdir %1",
  "SDCARD_MKDIR": "sdcard mkdir %1",
  "SDCARD_REMOVE": "sdcard remove %1",
  "SDCARD_RMDIR": "sdcard rmdir %1",
  "SDCARD_RENAME": "sdcard rename %1 to %2",
  "GET_KEYBOARD_CHARACTER": "Get keyboard character",
  "GET_KEYBOARD_ASIIC": "Get keyboard ASIIC value",
  "CLEAR_CHARACTERS": "Clear input characters",
  "DELETE_BYTE": "Delete the last byte entered",
  "GET_BTN_STATUS": "Get button press status",
  "SET_LED_COLOR": "Set the specified LED color",
  "RESET_ENCODER": "Reset encoder value to 0",
  "GET_ENCODER": "Get encoder value",
  "GET_DIRECTION_ROTATION": "Get the direction of rotation",
  "RETURN_ENCODER": "Return True when the encoder knob is pressed",
  "KEYFILE": "keyFile",
  "CERTFILE": "certFile",
  "HTTP_REQUEST": "Http Request %1 Method %2 %3 URL %4 Headers %5 Data %6",
  "TELLO_INITTELLO": "InitTello",
  "TELLO_CONNECTDRONE": "ConnectDrone",
  "TELLO_TAKEOFFDRONE": "takeoffDrone",
  "TELLO_LANDDRONE": "landDrone",
  "TELLO_ROTATECW": "rotateCW",
  "TELLO_ROTATECCW": "rotateCCW",
  "TELLO_DEGREE": "degree",
  "TELLO_FLIPRIGHT": "flipRight",
  "TELLO_FLIPLEFT": "flipLeft",
  "TELLO_MOVE_UP": "move_UP",
  "TELLO_CM": "cm",
  "TELLO_MOVE_DOWN": "move_Down",
  "TELLO_MOVE_FORWARD": "move_Forward",
  "TELLO_MOVE_BACKWARD": "move_Backward",
  "TELLO_MOVE_LEFT": "move_Left",
  "TELLO_MOVE_RIGHT": "move_Right",
  "REMOTE_SET_TITLE": "Set Title %1",
  "CUSTOM": "Custom",
  "CUSTOM_CREATE": "Create *.m5b file",
  "CUSTOM_OPEN": "Open *.m5b file",
  "CUSTOM_USER": "User Manual",
  "DEMO": "Demo",
  "SINE_SIGNAL": "Sine signal",
  "GET_CARD_EPC": "Get card EPC",
  "BTN_CONTROL_CLOUD_MODE": "ButtonA control cloud mode",
  "BTN_CONTROL_SHOW_QRCODE": "ButtonB control show qrcode (cloud mode)",
  "BTN_CONTROL_UART_MODE": "ButtonC control UART mode",
  "GPS_TIME": "Time",
  "GPS_POSITION": "Position/Motion",
  "GPS_INFO": "GPS Info",
  "READ_FILE": "Read file",
  "WRITE_FILE": "Write file",
  "PWM_SETUP": "Setup",
  "INCREMENTAL_PWM": "Incremental PWM",
  "PWM_CONTROL": "Control the rotating of servo to 0°",
  "PWM_CONTROL180": "Control the rotating of servo to 180°",
  "ADC_SET_PIN": "Set the sampling channel pin",
  "ADC_SET_WIDTH": "Set the sampling width",
  "ADC_SET_GAIN": "Set gain",
  "ADC_DEMO_READ": "Read ADC",
  "DAC_SET_CHANNEL": "Set conversion channel",
  "DAC_WRITE_VALUE": "Write DA value",
  "DAC_SET_FREQ": "Set the buzzer frequency, time and range",
  "DAC_SET_OUTPUT": "Set the output waveform frequency amplitude offset",
  "UART_READ_DATA": "Read the data from serial port",
  "IIC_DEMO_SCAN": "Scan I2C",
  "IIC_CHECK": "Check if the initial address exists",
  "IIC_DEMO_READ_DATA": "Read mem data",
  "IIC_DEMO_WRITE_DATA": "Write mem data",
  "ESP_NOW_INIT": "Init Esp Now",
  "ESP_NOW_RECEIVE": "Receive data",
  "ESP_NOW_CHECK": "Check whether the message was sent successfully",
  "ESP_NOW_BROADCAST": "Broadcast",
  "ESP_NOW_SEND": "Send by ID",
  "HTTP_CONVERT_DATA": "Convert Json Data",
  "HTTP_CHECK_CODE": "Check Status Code",
  "UDP_RECEIVE_DATA": "Receive data",
  "MODBUS_MASTER_DEMO_INIT": "Init master",
  "MODBUS_MASTER_DEMO_SEND": "Send",
  "MODBUS_MASTER_DEMO_CHECK": "Check if data is received",
  "ESPNOW": "EspNow",
  "HTTP": "Http",
  "UDP_SERVER": "UDP Server",
  "UDP_CLIENT": "UDP Client",
  "MODBUS_MASTER_DEMO_RECEIVE": "Receive callback (Recommend)",
  "MODBUS_SLAVE_DEMO_INIT": "Init",
  "MODBUS_SLAVE_DEMO_WRITE": "Init function (Write)",
  "MODBUS_SLAVE_DEMO_READ": "Init function (Read)",
  "MODBUS_SLAVE_DEMO_RECEIVE": "Receive callback",
  "EEPROM_DEMO_CREATE": "Create a key-value pair to save data in EEPROM",
  "EEPROM_DEMO_READ_STRING": "Read string value by key",
  "EEPROM_DEMO_READ_INT": "Read int value by key",
  "": "",
  "PIN_SERVO_INIT": "Init pin servo",
  "PIN_SERVO_SET_DEGREE": "Set degree",
  "PIN_SERVO_SET_DURATION": "Set high level duration",
  "MQTT_DEMO_PUBLISH": "Publish",
  "MQTT_DEMO_SUBSCRIBE": "Subscribe",
  "LORAWAN_SET_FREQUENCY": "Set frequency",
  "LORAWAN_SEND_DATA": "Send data",
  "LORAWAN_RECEIVE_DATA": "Receive data callback",
  "STEP_MOTOR_SET_ADDRESS": "Set I2C address",
  "STEP_MOTOR_SET_MOTOR": "Set the stepping motor X-axis Y-axis Z-axis rotation steps and speed",
  "LORAWAN": "LoRaWAN",
  "STEP_MOTOR_RUN_CODE": "Run G code",
  "STEP_MOTOR_SET_MODE": "Set the motor into operating mode, distance mode or relative value mode",
  "STEP_MOTOR_LOCK_MOTOR": "Lock motor",
  "STEP_MOTOR_UNLOCK_MOTOR": "Unlock motor",
  "DAC_STOP_OUTPUT": "Stop output",
  "DAC_SET_FREQUENCY": "Set frequency",
  "BALA_SET_MOTOR": "Set the motor rotation direction and speed",
  "BALA_SET_NUMBER": "Set the number of turning pulses",
  "BALA_SET_DEGREE": "Set the turning degree",
  "BALA_RETURN_ANGLE": "Return current angle",
  "BALA_SET_OFFSET": "Set the angular offset",
  "BALA_AUTO_BALANCE": "Auto balance",
  "GRBL_CONTROL_MOTOR": "Control motor",
  "COMLTE_SET_HTTP_GET": "Set HTTP GET",
  "COMLTE_SET_HTTP_POST": "Set HTTP POST",
  "HTTP_GET_DATA": "Get Data %1",
  "HTTP_GET_STATUS_CODE": "Get Status Code (return int) %1",
  "HTTP_SUCCESS": "Success %1",
  "HTTP_Fail": "Fail %1",
  "HAT_ENV_READ_VALUE": "Read value",
  "HAT_PIR_RETURN_STATUS": "Return PIR status",
  "HAT_SPK_OUTPUT": "Output sounds",
  "HAT_NCIR_READ_VALUE": "Read value",
  "HAT_DAC_OUTPUT": "Output voltage",
  "HAT_ADC_READ": "Read voltage",
  "HAT_SERVO_RUN": "Run servo",
  "HAT_PUPPYC_MOVE": "Move PuppyC",
  "HAT_JOYSTICK_READ": "Read value",
  "HAT_BUGC_SETUP": "Setup",
  "HAT_BEETLEC_SETUP": "Setup",
  "HAT_YUN_READ_VALUE": "Read value",
  "HAT_JOYC_READ": "Read left value",
  "HAT_ROVERC_RUN": "Run RoverC",
  "HAT_TOF_READ": "Read distance",
  "HAT_THERMAL_READ": "Read center, max and min temperature",
  "HAT_CARDKB_READ_VALUE": "Read key value and string",
  "HAT_EVN2_READ_VALUE": "Read value",
  "UNIT_ANGLE_READ": "Read angle",
  "UNIT_ENV_READ": "Read temp humid and pressure",
  "UNIT_NEOPIXEL_FLASH_LED": "Flash the LED in a random color",
  "UNIT_PIR_DEMO_READ": "Read PIR detection status",
  "UNIT_JOYSTICK_DEMO_READ": "Read the X Y and the status of Joystick",
  "UNIT_MAKEY_DEMO_READ": "Read makey value",
  "UNIT_SERVO_DEMO_CONTROL": "Control to rotate 90 degrees",
  "UNIT_WEIGHT_DEMO_READ": "Read weight",
  "UNIT_TRACE_DEMO_READ": "Read digital value of 4 sensors",
  "UNIT_BUTTON_DEMO_READ": "Read button state",
  "UNIT_RGB_DEMO_SET": "Set LED color",
  "UNIT_RELAY_DEMO_SET": "Set RELAY status",
  "UNIT_ADC_DEMO_READ": "Read ADC value",
  "UNIT_DAC_DEMO_SET": "Set output voltage",
  "UNIT_NCIR_DEMO_GET": "Get NCIR read temperature",
  "UNIT_IR_DEMO_READ": "Read IR state",
  "UNIT_EXTIO_DEMO_SET": "Set ext_IO pin mode",
  "UNIT_LIGHT_DEMO_READ": "Read light value",
  "UNIT_EARTH_DEMO_READ": "Read earth value",
  "UNIT_TOF_DEMO_READ": "Read ToF distance value",
  "UNIT_COLOR_DEMO_READ": "Read the detected RGB value",
  "UNIT_RFID_DEMO_READ": "Detecte card and read card ID",
  "UNIT_FINGER_DEMO_ENTER": "Enter the fingerprint",
  "UNIT_CARKB_DEMO_READ_VALUE": "Read key value and key name",
  "UNIT_PBHUB_DEMO_SET": "Set RGB brightness and color",
  "UNIT_PAHUB_DEMO_OPEN": "Open port",
  "UNIT_GPS_DEMO_GET_VALUE": "Get gps value",
  "UNIT_HEART_DEMO_READ": "Read heart rate and SpO2",
  "UNIT_ACCEL_DEMO_READ_VALUE": "Read ACC value",
  "UNIT_ACSOCKET_DEMO_SET_VALUE": "Set AC Socket value",
  "SPEAKER_PLAY_WAV_RATE": "Play local WAV file %1 samplerate %2 data format %3 channel %4 volume %5",
  "UNIT_V_MOTION_DEMO": "Judge whether the target is moving",
  "UNIT_V_TRACK_DEMO": "Set and track targets",
  "UNIT_V_COLOR_DEMO": "Get number of pixels and coordinate of the tracked color",
  "UNIT_V_FACE_DEMO": "Get values of face",
  "UNIT_V_QR_DEMO": "Read QR code information and version numbers",
  "UNIT_V_APRILTAG_DEMO": "Read the AprilTag code rotation, the number of moving units, and detailed location information",
  "UNIT_V_BAR_DEMO": "Read the barcode information",
  "UNIT_V_DM_DEMO": "Read DM code information, rotation angle, and location information",
  "UNIT_V_LINE_DEMO": "Read the line offset angle",
  "UNIT_V_TAG_DEMO": "Read the tag information",
  "UNIT_BPS_DEMO_READ": "Read pressure and temperature",
  "UNIT_TVOC_DEMO_READ": "Read value",
  "UNIT_VMETER_DEMO_READ": "Read voltage value",
  "UNIT_AMETER_DEMO_READ": "Read current value",
  "UNIT_OP_DEMO_READ": "Read OP value",
  "UNIT_HALL_DEMO_READ": "Read HALL value",
  "UNIT_FAN_DEMO_SET": "Set the duty",
  "UNIT_VIBRATOR_DEMO_SET": "Set the duty",
  "UNIT_LASERRX_DEMO_RETURN": "Return received data",
  "UNIT_ULTRA_DEMO_READ": "Read distance",
  "UNIT_WATERING_DEMO_READ": "Read water value and run pump",
  "UNIT_DDS_DEMO_OUTPUT": "Output sine wave",
  "GAMEBOY_DEMO_GET": "Get the button status",
  "JOYSTICK_DEMO_READ": "Read joystick data",
  "KEYBOARD_DEMO_RETURN": "Return the input string",
  "RFID_DEMO_RETURN": "Return RFID card data",
  "SERVO_DEMO_SET": "Set servo",
  "SERVO2_DEMO_SET": "Set servo",
  "BALAMOTOR_DEMO_SET": "Move forward 500 pulses at 255 speed",
  "PM25_DEMO_READ": "Read amount of PM2.5",
  "BASEX_DEMO_SET": "Set motor to 1000 at 50 speed",
  "PLUS_DEMO_READ": "Read encoder status",
  "GOPLUS_DEMO_READ": "Read digital, analog",
  "GPS_DEMO_READ": "Read GPS related information",
  "MICROPHONE": "Microphone",
  "MICROPHONE_RECORDFILE": "Record to file seconds %1 filename %2 (example: '/flash/test.wav' or '/sd/test.wav')",
  "HAT_FINGER_DEMO_READ": "Read fingerprint id and permissions",
  "UNIT_FINGER_DEMO_READ": "Read fingerprint id and permissions",
  "UNIT_LASERTX_DEMO_CONTROL": "Control Tx on and off",
  "UNIT_DUAL_BUTTON_DEMO_READ": "Read button state",
  "FACES_FINGER_DEMO_GET": "Get the fingerprint read status",
  "MODE": "Mode",
  "UNIT_V2": "V2 Function",
  "UNIT_V2_FACE_DETECTOR": "Face Detector",
  "UNIT_V2_OBJECT_RECOGNITION": "Object Recognition",
  "UNIT_V2_CODE_DETECTOR": "Code Detector",
  "V2_FACE_INIT": "Init %1 Face Detector",
  "V2_FACE_GET_NUMBER": "Get the number of faces",
  "V2_FACE_GET_DETAIL": "Get number %1 face detail",
  "V2_OBJECT_INIT": "Init %1 Object Recognition",
  "V2_OBJECT_GET_NUMBER": "Get the number of objects",
  "V2_OBJECT_GET_DETAIL": "Get number %1 object detail",
  "V2_CODE_INIT": "Init %1 Code Detector",
  "V2_CODE_GET_NUMBER": "Get the number of codes",
  "V2_CODE_GET_DETAIL": "Get number %1 code detail",
  "IR_GPIO_MODE": "GPIO Mode",
  "IR_NEC_MODE": "NEC Mode",
  "IR_NEC_MODE_TIPS": "Recommended download to the device for use NEC mode",
  "UNIT_IR_NEC_TX": "%1 send addr %2 data %3",
  "UNIT_IR_NEC_CB": "%1 receive data %2 addr %3",
  "NBIOT": "NB-IoT",
  "NBIOT_DEMO_SET": "CoAP test",
  "NBIOT_COAP_TITLE": "CoAP",
  "NBIOT_INIT": "Init NB-IoT TX %1 RX %2",
  "NBIOT_COAP_CONNECT": "CoAP connect ip %1 port %2",
  "NBIOT_COAP_GET": "CoAP GET url %1 security",
  "NBIOT_COAP_POST": "CoAP POST url %1 payload %2 content format %3 security",
  "NBIOT_COAP_PUT": "CoAP PUT url %1 payload %2 content format %3 security",
  "NBIOT_COAP_DESTROY": "CoAP destroy",
  "NBIOT_MQTT_TITLE": "MQTT",
  "NBIOT_MQTT_CONNECT": "MQTT connect server %1 port %2 client id %3 username %4 password %5 keepalive %6",
  "NBIOT_MQTT_CONNECT_TO_ALIBABA": "MQTT connect to alibaba",
  "NBIOT_MQTT_CONNECT_TO_AZURE": "MQTT connect to azure",
  "NBIOT_MQTT_DISCONNECT": "MQTT disconnect",
  "NBIOT_MQTT_SUB": "MQTT subscribe topic %1 QoS %2",
  "NBIOT_MQTT_SUB_CB": "MQTT subscribe callback topic %1 payload %2",
  "NBIOT_MQTT_UNSUBSCRIBE": "MQTT unsubscribe topic %1",
  "NBIOT_MQTT_PUBLISH": "MQTT publish topic %1 payload %2 QoS %3",
  "NBIOT_MQTT_CHECK_CONNECTION": "MQTT check connection",
  "NBIOT_MQTT_POLL": "MQTT poll downlink message",
  "POWER_SET_LDO2_VOLTAGE": "Set LCD voltage to %1",
  "IR_SEND_ADDR": "IR(NEC) send addr %1 data %2",
  "UNIT_NBIOT_ENABLE_PDP_CONTEXT": "%1 Enable PDP context",
  "UNIT_OLED": "OLED",
  "OLED_FILL": "%1 fill %2",
  "OLED_FILL_RECT": "%1 fill rect x: %2 y: %3 w: %4 h: %5 color: %6",
  "OLED_LINE": "%1 draw line x1: %2 y1: %3 x2: %4 y2: %5 color: %6",
  "OLED_HLINE": "%1 draw horizontal line x: %2 y: %3 w: %4 color: %5",
  "OLED_VLINE": "%1 draw vertical line x: %2 y: %3 h: %4 color: %5",
  "OLED_RECT": "%1 draw rect x: %2 y: %3 w: %4 h: %5 color: %6",
  "OLED_TEXT": "%1 draw text %2 x: %3 y: %4 color: %5",
  "OLED_PIXEL": "%1 draw pixel x: %2 y: %3 color: %4",
  "OLED_SCROLL": "%1 scroll xstep %2 ystep %3",
  "OLED_POWERON": "%1 power on",
  "OLED_POWEROFF": "%1 power off",
  "OLED_SHOW": "%1 show",
  "OLED_INVERT": "%1 invert %2",
  "OLED_IMAGE": "%1 draw image %2 x: %3 y: %4",
  "ALI_IOT": "AliIoT",
  "ALIIOT_INIT": "Init product key %1 device name %2 device secret %3 device id (customize) %4 region id %5",
  "ALIIOT_START": "Start AliIoT",
  "ALIIOT_SUB_USER": "Subscribe user down msg %1",
  "ALIIOT_PUBLISH_USER": "Publish user update msg %1",
  "ALIIOT_SUB_RAW": "Subscribe raw down msg %1",
  "ALIIOT_PUBLISH_RAW": "Publish raw up msg %1",
  "ALIIOT_SUB_SHADOW": "Subscribe shadow down msg %1",
  "ALIIOT_PUBLISH_SHADOW": "Publish shadow update msg",
  "UNIT_NBIOT": "NBIoT",
  "UNIT_NBIOT_CHECK_STATUS": "%1 check module status",
  "UNIT_NBIOT_POWER_DOWN_MODULE": "%1 power down module",
  "UNIT_NBIOT_RESET_MODULE": "%1 reset module",
  "UNIT_NBIOT_CHECK_SINGLE_QUALITY": "%1 check single quality",
  "UNIT_NBIOT_CHECK_NETWORK_REGISTRATION": "%1 check network registration",
  "UNIT_NBIOT_CHECK_GPRS_NETWORK_REGISTRATION": "%1 check GPRS network registration",
  "UNIT_NBIOT_COAP_CONNECT": "%1 CoAP connect ip %2 port %3",
  "UNIT_NBIOT_COAP_GET": "%1 CoAP GET url %2 security",
  "UNIT_NBIOT_COAP_POST": "%1 CoAP POST url %2 payload %3 content format %4 security",
  "UNIT_NBIOT_COAP_PUT": "%1 CoAP PUT url %2 payload %3 content format %4 security",
  "UNIT_NBIOT_COAP_DESTROY": "%1 CoAP destroy",
  "UNIT_NBIOT_MQTT_CONNECT": "%1 MQTT connect server %2 port %3 client id %4 username %5 password %6 keepalive %7",
  "UNIT_NBIOT_MQTT_DISCONNECT": "%1 MQTT disconnect",
  "UNIT_NBIOT_MQTT_SUB": "%1 MQTT subscribe topic %2 QoS %3",
  "UNIT_NBIOT_MQTT_SUB_CB": "MQTT subscribe callback topic %1 msg %2",
  "UNIT_NBIOT_MQTT_UNSUBSCRIBE": "%1 MQTT unsubscribe topic %2",
  "UNIT_NBIOT_MQTT_PUBLISH": "%1 MQTT publish topic %2 payload %3 QoS %4",
  "UNIT_NBIOT_MQTT_CHECK_CONNECTION": "%1 MQTT check connection",
  "UNIT_NBIOT_MQTT_POLL": "%1 MQTT poll downlink message",
  "UNIT_NBIOT_MQTT_DEMO_PUBLISH": "MQTT publish",
  "UNIT_NBIOT_MQTT_DEMO_SUBSCRIBE": "MQTT subscribe",
  "HAT_RS485": "RS485",
  "UNIT_RS485": "RS485",
  "UNIT_ISO485": "ISO RS485",
  "UNIT_RS485_WRITE": "%1 write %2",
  "UNIT_RS485_WRITE_LINE": "%1 write a line %2",
  "UNIT_RS485_WRITE_RAW_DATA": "%1 write raw data %2",
  "UNIT_RS485_READ_COILS": "%1 read coils slave address %2 starting address %3 coil qty %4",
  "UNIT_RS485_READ_DISCRETE_INPUTS": "%1 read discrete inputs slave address %2 starting address %3 input qty %4",
  "UNIT_RS485_READ_HOLDING_REGISTERS": "%1 read holding registers slave address %2 starting address %3 register qty %4 signed %5",
  "UNIT_RS485_READ_INPUT_REGISTERS": "%1 read input registers slave address %2 starting address %3 register qty %4 signed %5",
  "UNIT_RS485_WRITE_SINGLE_COIL": "%1 write single coil slave address %2 output address %3 output value %4",
  "UNIT_RS485_WRITE_SINGLE_REGISTER": "%1 write single register slave address %2 register address %3 register value %4 signed %5",
  "UNIT_RS485_WRITE_MULTIPLE_COILS": "%1 write multiple coils slave address %2 starting address %3 output value %4",
  "UNIT_RS485_WRITE_MULTIPLE_REGISTERS": "%1 write multiple register slave address %2 starting address %3 register value %4 signed %5",
  "LORAWAN868": "LoRaWAN 868",
  "UNIT_LORAWAN470_CONFIG_ABP": "%1 Config ABP mode %2 device address %3 app session key %4 network session key %5",
  "UNIT_LORAWAN470_GET_ABP_CONFIG": "%1 Get ABP config",
  "UNIT_LORAWAN470_CONFIG_OTAA": "%1 Config OTAA mode %2 device eui * %3 app key * %4 app eui %5",
  "UNIT_LORAWAN470_GET_OTAA_CONFIG": "%1 Get OTAA config",
  "UNIT_LORAWAN470_CHECK_JOIN_STATUS": "%1 Check join status",
  "UNIT_LORAWAN470_CHECK_SENT_STATUS": "%1 Check uplink data status",
  "UNIT_LORAWAN470_CHECK_DOWNLINK_DATA": "%1 Check and receive downlink data",
  "UNIT_LORAWAN470_FREQUENCY_BAND_MASK": "%1 Set frequency band mask %2 channels",
  "UNIT_LORAWAN470_SET_RX_WINDOW_PARAM": "%1 Config RX window param %2 RX1 offset %3 RX2 datarate %4 %5 RX2 freq (Hz) %6",
  "UNIT_LORAWAN470_SET_CLASS_MODE": "%1 Set class mode %2",
  "UNIT_LORAWAN470_SEND_DATA": "%1 Send data payload %2",
  "UNIT_LORAWAN470_SET_UPLINK_APP_PORT": "%1 Set uplink app port %2 (1 ~ 233)",
  "UNIT_LORAWAN470_JOIN": "%1 Join LoRaWAN network %2 %3 %4 %5 %6 period (seconds) %7 maximum number of attempts %8",
  "UNIT_LORAWAN470_SET_UPLINK_MODE": "%1 Set uplink downlink %2",
  "DTU_NB": "NB-IoT",
  "BASE_DTUNB_INIT": "Init NB-IoT DTU",
  "BASE_DTUNB_READ": "RS485 read all",
  "BASE_DTUNB_READ_CHARACTERS": "RS485 read %1 characters",
  "BASE_DTUNB_READLINE": "RS485 read line",
  "BASE_DTUNB_ANY": "Remain cache ",
  "BASE_DTUNB_WRITE_LINE": "RS485 write a line %1",
  "BASE_DTUNB_WRITE": "RS485 write %1",
  "BASE_DTUNB_WRITE_RAW_DATA": "RS485 write raw data %1",
  "BASE_DTUNB_READ_COILS": "Read coils slave address %1 starting address %2 coil qty %3",
  "BASE_DTUNB_READ_DISCRETE_INPUTS": "Read discrete inputs slave address %1 starting address %2 input qty %3",
  "BASE_DTUNB_READ_HOLDING_REGISTERS": "Read holding registers slave address %1 starting address %2 register qty %3 signed %4",
  "BASE_DTUNB_READ_INPUT_REGISTERS": "Read input registers slave address %1 starting address %2 register qty %3 signed %4",
  "BASE_DTUNB_WRITE_SINGLE_COIL": "Write single coil slave address %1 output address %2 output value %3",
  "BASE_DTUNB_WRITE_SINGLE_REGISTER": "Write single register slave address %1 register address %2 register value %3 signed %4",
  "BASE_DTUNB_WRITE_MULTIPLE_COILS": "Write multiple coils slave address %1 starting address %2 output value %3",
  "BASE_DTUNB_WRITE_MULTIPLE_REGISTERS": "Write multiple register slave address %1 starting address %2 register value %3 signed %4",
  "DTU": "DTU",
  "BASE_LORAWAN470_INIT": "Init LoRaWAN 470 DTU",
  "BASE_LORAWAN868_INIT": "Init LoRaWAN 868 DTU",
  "BASE_LORAWAN915_INIT": "Init LoRaWAN 915 DTU",
  "BASE_DTUNB_SET_ECHO_MODE": "Set command echo mode %1",
  "UNIT_NBIOT_SET_ECHO_MODE": "%1 Set command echo mode %2",
  "SCREEN_SET_BGCOLOR_RGB": "Set Screen backgroundColor R %1 G %2 B %3",
  "FACES_ENCODE_SETLED_RGB": "Set LED pos %1 color R %2 G %3 B %4",
  "remoteName": "Name",
  "remoteColor": "Color",
  "showTitle": "Show Title",
  "showValue": "Show Value",
  "offLabel": "Off Label",
  "onLabel": "On Label",
  "offColor": "Off Color",
  "onColor": "On Color",
  "offBG": "Off Background",
  "onBG": "On Background",
  "label": "Label",
  "bgColor": "Background",
  "minValue": "Min Value",
  "maxValue": "Max Value",
  "edges": "Edges",
  "style": "Style",
  "fontsize": "Font Size",
  "interval": "Interval(ms)",
  "hint": "Hint",
  "characterLimit": "Character Limit",
  "LORAWAN470_SET_JOIN_MODE": "Set join mode %1",
  "UNIT_LORAWAN470_SET_JOIN_MODE": "%1 Set join mode %2",
  "align": "Align",
  "fallbackUrl": "Backup Url",
  "SYSTEM": "System",
  "SYSTEM_RESET": "Reset system",
  "BASE_QRCODE_TRIGGER": "Trigger %1",
  "HDRIVER_INIT": "Init H·Driver",
  "MOTION_INIT": "Init Motion",
  "MODBUS_MASTER_READ_COILS": "Read coils slave address %1 starting address %2 coil qty %3",
  "MODBUS_MASTER_READ_DISCRETE_INPUTS": "Read discrete inputs slave address %1 starting address %2 input qty %3",
  "MODBUS_MASTER_READ_HOLDING_REGISTERS": "Read holding registers slave address %1 starting address %2 register qty %3 signed %4",
  "MODBUS_MASTER_READ_INPUT_REGISTERS": "Read input registers slave address %1 starting address %2 register qty %3 signed %4",
  "MODBUS_MASTER_WRITE_SINGLE_COIL": "Write single coil slave address %1 output address %2 output value %3",
  "MODBUS_MASTER_WRITE_SINGLE_REGISTER": "Write single register slave address %1 register address %2 register value %3 signed %4",
  "MODBUS_MASTER_WRITE_MULTIPLE_COILS": "Write multiple coils slave address %1 starting address %2 output value %3",
  "MODBUS_MASTER_WRITE_MULTIPLE_REGISTERS": "Write multiple register slave address %1 starting address %2 register value %3 signed %4",
  "MODBUS_MASTER_U_INIT": "Init UART id %1 TX %2 RX %3 baudrate %4 data bits %5 stop bits %6 parity %7",
  "HAT_ENV3": "ENV III",
  "UNIT_THERMAL_GET_MAX_TEMPERATURE": "Get %1 max temperature",
  "UNIT_THERMAL_GET_MIN_TEMPERATURE": "Get %1 min temperature",
  "UNIT_THERMAL_GET_CENTER_TEMPERATURE": "Get %1 center temperature",
  "UNIT_THERMAL_GET_PIXEL_TEMPERATURE": "Get %1 pixel x %2 y %3 temperature",
  "UNIT_THERMAL_GET_TEMPERATURE": "Get %1 temperature",
  "UNIT_THERMAL_GET_REFRESH_RATE": "Get %1 refresh rate",
  "UNIT_THERMAL_UPDATE_TEMPERATURE": "%1 update temperature",
  "UNIT_THERMAL_SET_REFRESH_RATE": "Set %1 refresh rate %2",
  "UNIT_RS485_INIT": "%1 init UART id %2 baudrate %3 data bits %4 stop bits %5 parity %6",
  "MAC_ADDR": "MAC :",
  "UNIT_V2_COLOR_TRACKER": "Color Tracker",
  "UNIT_V2_FACE_RECOGNITION": "Face Recognition",
  "UNIT_V2_LANE_LINE_TRACKER": "Lane Line Tracker",
  "UNIT_V2_MOTION_TRACKER": "Motion Tracker",
  "UNIT_V2_ONLINE_CLASSIFIER": "Online Classifier",
  "UNIT_V2_SHAPE_DETECTOR": "Shape Detector",
  "UNIT_V2_TARGET_TRACKER": "Target Tracker",
  "V2_COLOR_INIT": "Init %1 Color Tracker",
  "V2_COLOR_CONFIG_LAB_THRESHOLD": "Config LAB threshold by L min %1 L max %2 A min %3 A max %4 B min %5 B max %6",
  "V2_COLOR_CONFIG_ROI": "Config ROI x %1 y %2 w %3 h %4",
  "V2_COLOR_GET_DETAIL": "Get color tracker detail",
  "V2_FACE_RE_INIT": "Init %1 Face Recognition",
  "V2_FACE_RE_TRAIN": "Train face id %1 name %2",
  "V2_FACE_RE_STOP_TRAIN": "Stop train",
  "V2_FACE_RE_SAVE_RUN": "Save and run",
  "V2_FACE_RE_RESET": "Reset",
  "V2_FACE_RE_GET_NUMBER": "Get the number of faces",
  "V2_FACE_RE_GET_DETAIL": "Get number %1 face detail",
  "V2_FACE_RE_GET_TRAINING_DETAIL": "Get training detail",
  "V2_LANE_LINE_INIT": "Init %1 Lane Line Tracker",
  "V2_LANE_LINE_GET_DETAIL": "Get lane line tracker detail",
  "V2_MOTION_INIT": "Init %1  Motion Tracker",
  "V2_MOTION_SET_BG": "Set as background",
  "V2_MOTION_GET_DETAIL": "Get number %1 motion detail",
  "V2_ONLINE_INIT": "Init %1 Online Classifier",
  "V2_ONLINE_TRAIN": "Train online class id %1 class %2",
  "V2_ONLINE_SAVE_RUN": "Save and run",
  "V2_ONLINE_RESET": "Reset",
  "V2_ONLINE_GET_MATCH": "Get best match",
  "V2_ONLINE_GET_SCORE": "Get best score",
  "V2_ONLINE_GET_NUMBER": "Get class number",
  "V2_ONLINE_GET_DETAIL": "Get number %1 class detail",
  "V2_SHAPE_INIT": "Init %1 Shape Detector",
  "V2_SHAPE_SET_BG": "Set as background",
  "V2_SHAPE_GET_DETAIL": "Get number %1 motion detail",
  "V2_TARGET_INIT": "Init %1 Target Tracker",
  "V2_TARGET_GET_DETAIL": "Get target detail",
  "FADER": "FADER",
  "FADER_SET_COLOR": "%1 set num %2 color %3",
  "FADER_SET_COLOR_RGB": "%1 set num %2 color R %3 G %4 B %5",
  "FADER_SET_BRIGHTNESS": "%1 set brightness %2",
  "FADER_READRAW12": "%1 readraw12",
  "FADER_READRAW16": "%1 readraw16",
  "FADER_SET_COLOR_POT": "%1 set color POT led num %2",
  "FADER_SET_BRIGHT_POT": "%1 set bright POT",
  "ESPNOW_ADD_PEER2": "Add peer %1 id %2 channel %3 ifidx %4",
  "STEPMOTOR_DRIVER": "StepMotor Driver",
  "STEPMOTOR_DRIVER_SET_STEP_PULSE": "Set step pulse freq %1",
  "STEPMOTOR_DRIVER_SET_MICRO_STEPSELECT": "Set micro step select %1",
  "STEPMOTOR_DRIVER_SET_STEP_DIR": "Set motor %1 dir %2",
  "STEPMOTOR_DRIVER_READ_IO_STATUS": "Read all limit IO status",
  "STEPMOTOR_DRIVER_READ_PIN_STATUS": "Read limit IO %1 status",
  "STEPMOTOR_DRIVER_ENABLE_MOTOR": "Set all motor state %1",
  "STEPMOTOR_DRIVER_SET_SINGLE_MOTOR": "Set single motor %1 state %2",
  "step": "Step",
  "TEXT_TRIM_STRING": "trim %1 from %2 of %3",
  "MODBUS_SLAVE_RTU_INIT": "Init UART id %1 TX %2 RX %3 baudrate %4 data bits %5 stop bits %6 parity %7 addr %8",
  "MODBUS_SLAVE_RTU_INIT_FUNC": "Init function %1 start addr %2 quantity %3",
  "MODBUS_SLAVE_RTU_UPDATE_FUNC": "Update function %1 start addr %2 quantity %3 value %4",
  "MODBUS_SLAVE_RTU_RECEIVE_ADU": "Receive ADU request",
  "MODBUS_SLAVE_RTU_SEND": "Send ADU response buffer %1",
  "MODBUS_SLAVE_RTU_GET_FUNCTION": "Get function code",
  "MODBUS_SLAVE_RTU_GET_ADDRESS": "Get address",
  "MODBUS_SLAVE_RTU_GET_QUANTITY": "Get quantity",
  "MODBUS_SLAVE_RTU_FUN_STATUS": "Function code %1",
  "GESTURE": "Gesture",
  "GESTURE_BEGIN": "%1 begin",
  "GESTURE_GET": "%1 get gesture",
  "GESTURE_GET_DESC": "%1 get description %2",
  "GESTURE_SET_HIGHRATE": "%1 set highrate %2",
  "GESTURE_STATUS": "%1 %2",
  "MQTT": "MQTT",
  "UNIT_MQTT_START": "%1 start",
  "UNIT_MQTT_STOP": "%1 stop",
  "UNIT_MQTT_IS_LAN_CONNECT": "%1 check LAN connection",
  "UNIT_MQTT_IS_MQTT_CONNECT": "%1 check MQTT connection",
  "UNIT_MQTT_SAVE_PARAM": "%1 save configure parameter",
  "UNIT_MQTT_CONFIG": "%1 config MQTT %2 server %3 port %4 client id %5 user %6 password %7 keepalive %8",
  "UNIT_MQTT_SUBSCRIBE": "%1 subscribe number %2 topic %3 quality %4",
  "UNIT_MQTT_PUBLISH": "%1 publish topic %2 message %3 quality %4",
  "UNIT_MQTT_RECEIVE": "%1 receive message timeout %2",
  "EZDATA": "EzData",
  "EZDATA_GET_KEY_WITH_TOKEN": "Get value from topic %1 with token %2",
  "EZDATA_SET_KEY_WITH_TOKEN": "Save value %2 to topic %1 with token %3",
  "EZDATA_ADD_VALUE_WITH_TOKEN": "Save value %2 to list %1 with token %3",
  "EZDATA_GET_LIST_WITH_TOKEN": "Get value from list %1 offset %2 count %3 with token %4",
  "EZDATA_REMOVE_KEY_WITH_TOKEN": "Remove topic %1 with token %2",
  "RTC": "RTC",
  "UNIT_RTC_SET_DATE_TIME": "%1 set rtc %2 year %3 month %4 date %5 weekday %6 hour %7 minute %8 second %9",
  "UNIT_RTC_GET_DATE_TIME": "%1 get rtc %2",
  "UNIT_RTC_SET_ALARM": "%1 set alarm date %2 hours %3 minutes %4",
  "UNIT_RTC_CHECK_ALARM_FLAG": "%1 check alarm flag",
  "UNIT_RTC_CLEAR_ALARM": "%1 turn off alarm",
  "UNIT_RTC_DISABLE_ALARM": "%1 disable alarm",
  "UNIT_RTC_SET_TIMER_MODE": "%1 set timer value %2 mode %3",
  "UNIT_RTC_GET_TIMER_VALUE": "%1 get timer value",
  "UNIT_RTC_CHECK_TIMER_FLAG": "%1 check timer flag",
  "UNIT_RTC_DISABLE_TIMER": "%1 disable timer",
  "UNIT_RTC_PAUSE_TIMER": "%1 pause timer",
  "UNIT_RTC_RESUME_TIMER": "%1 resume timer",
  "UNIT_RTC_CLEAR_TIMER_FLAG": "%1 turn off timer",
  "chartTheme": "Theme",
  "showLegend": "Show Legend",
  "dataStreamName": "Dataset Name",
  "chartType": "Chart type",
  "yAxisMax": "Y Axis Max",
  "yAxisMin": "Y Axis Min",
  "yAxisSuffix": "Y Axis Label Suffix",
  "yAxisAuto": "Y Axis Auto",
  "ezdataToken": "EzData Token",
  "xAxisData": "X Data Source",
  "yAxisData": "Y Data Source",
  "topic": "Topic",
  "maxCount": "Max Count",
  "xMin": "X Min",
  "xMax": "X Max",
  "yMin": "Y Min",
  "yMax": "Y Max",
  "autoReturn": "Auto Return",
  "UNIT_LCD": "LCD",
  "UNIT_LCD_INIT_DISPLAY": "%1 display init width: %2 height: %3 stride: %4",
  "UNIT_LCD_IMAGE": "%1 draw image %2 x: %3 y: %4",
  "UNIT_LCD_TEXT": "%1 draw text %2 x: %3 y: %4 color: %5",
  "UNIT_LCD_FILL": "%1 fill %2",
  "UNIT_LCD_PIXEL": "%1 draw pixel x: %2 y: %3 color: %4",
  "UNIT_LCD_FILL_RECT": "%1 fill rect x: %2 y: %3 w: %4 h: %5 color: %6",
  "UNIT_LCD_LINE": "%1 draw line x1: %2 y1: %3 x2: %4 y2: %5 color: %6",
  "UNIT_LCD_HLINE": "%1 draw horizontal line x: %2 y: %3 w: %4 color: %5",
  "UNIT_LCD_VLINE": "%1 draw vertical line x: %2 y: %3 h: %4 color: %5",
  "UNIT_LCD_RECT": "%1 draw rect x: %2 y: %3 w: %4 h: %5 color: %6",
  "UNIT_LCD_ROTATE": "%1 set rotate %2",
  "UNIT_LCD_FLIP": "%1 set flip %2",
  "UNIT_LCD_BRIGHTNESS": "%1 set brightness %2",
  "UNIT_LCD_SLEEP": "%1 set sleep %2",
  "UNIT_LCD_SHOW_ON": "%1 show on",
  "EZDATA_GET_ISO_DATE": "Get current ISODateTime",
  "UNIT_ROTARY": "Rotary Encoder",
  "UNIT_ROTARY_SET_MODE": "%1 set mode %2",
  "UNIT_ROTARY_GET_AB_COUNT": "%1 get AB count",
  "UNIT_ROTARY_GET_PULSE_COUNT": "%1 get pulse count",
  "UNIT_ROTARY_GET_BTN_STATUS": "%1 get button status",
  "UNIT_ROTARY_SET_RGB_COLOR": "%1 set RGB color %2",
  "UNIT_ID": "ID",
  "UNIT_ID_WAKEUP": "%1 wake up",
  "UNIT_ID_GET_INFO": "%1 get info",
  "UNIT_ID_READ_CONFIG": "%1 read config zone",
  "UNIT_ID_SERIAL_NUMBER": "%1 serial number",
  "UNIT_ID_REVISION_NUMBER": "%1 revision number",
  "UNIT_ID_CONFIG_LOCK_STATUS": "%1 config lock status",
  "UNIT_ID_DATA_OTP_STATUS": "%1 data OTP lock status",
  "UNIT_ID_SLOT_STATUS": "%1 slot0 lock status",
  "UNIT_ID_GENERATE_PUBLIC_KEY": "%1 generate public key %2",
  "UNIT_ID_WRITE_CONFIG_ZONE": "%1 write config zone",
  "UNIT_ID_LOCK_CONFIG": "%1 lock config",
  "UNIT_ID_CREATE_KEYPAIR": "%1 create new key pair %2",
  "UNIT_ID_LOCK_DATA_OTP": "%1 lock data and OTP",
  "UNIT_ID_LOCK_DATA_SLOT": "%1 lock data slot0",
  "UNIT_ID_CREATE_SIGNATURE": "%1 create signature data %2 slot %3",
  "UNIT_ID_VERIFY_SIGNATURE": "%1 verify signature message %2 signature %3 publicKey %4",
  "UNIT_ID_PUBLIC_KEY_64BYTES": "%1 public key 64 bytes",
  "UNIT_ID_UPDATE_RANDOM_32BYTES": "%1 update random 32 bytes",
  "UNIT_ID_CONFIG_ZONE": "%1 config zone",
  "UNIT_ID_KEY_CONFIG": "%1 key config",
  "UNIT_ID_SLOT_CONFIG": "%1 slot config",
  "UNIT_ID_SIGNATURE": "%1 signature",
  "UNIT_ID_SHA256": "%1 SHA256 message %2 length %3",
  "UNIT_ID_RANDOM_MIN_MAX": "%1 random min %2 max %3",
  "SPEAKER_PLAY_WAV_SDCARD": "play SD card WAV file %1",
  "UNIT_TIMERCAM": "TimerCAM",
  "UNIT_JOYSTICKLED": "Joystick LED",
  "JOYSTICKLED_X_RAW": "%1 get X RAW",
  "JOYSTICKLED_Y_RAW": "%1 get Y RAW",
  "JOYSTICKLED_X": "%1 get X",
  "JOYSTICKLED_Y": "%1 get Y",
  "JOYSTICKLED_BTN_STATUS": "%1 button status",
  "JOYSTICKLED_LED_COLOR": "%1 LED RGB %2",
  "JOYSTICKLED_CALIBRATION": "%1 calibration %2",
  "suffix": "Suffix",
  "UNIT_ENCODER": "Encoder",
  "UNIT_ENCODER_COUNT": "%1 get encoder count",
  "UNIT_ENCODER_BTN_STATUS": "%1 get button status",
  "UNIT_ENCODER_SET_COLOR": "%1 set LED %2 color %3",
  "LORA433": "LoRa 433",
  "LORA433_CONFIG": "Set lora configuration %1 freq %2 band %3 TX power %4 sync %5 spread factor %6 code rate %7 preamble %8 CRC %9",
  "LORA433_BEGIN_PACKET": "Set begin data packet",
  "LORA433_END_PACKET": "Set end data packet",
  "LORA433_PRINT_MSG": "Send message %1 in String",
  "LORA433_RECEIVED_PACKET": "Get size of data packet length (return int)",
  "LORA433_WRITE_BUFFER": "Send packet data in list %1",
  "LORA433_PACKET_RSSI": "Get rssi value (return int)",
  "LORA433_PACKET_SNR": "Get snr value (return int)",
  "LORA433_READ": "Receive packet in bytes",
  "LORA433_MESSAGE": "Receive message in string",
  "LORA433_SYNC_WORD": "Sync word %1",
  "LORA433_SET_FREQUENCY": "Set frequency %1",
  "LORA433_STAND_BY_MODE": "Set standby mode",
  "LORA433_SLEEP_MODE": "Set sleep mode",
  "LORA433_RECEIVE_CALLBACK": "Set receive callback IRQ handler",
  "LORA433_CALLBACK": "LoRa433 callback %1",
  "isHorizontal": "Orientation",
  "LORA868": "LoRa 868",
  "LORA868_CONFIG": "Set lora configuration %1 freq %2 band %3 TX power %4 sync %5 spread factor %6 code rate %7 preamble %8 CRC %9",
  "LORA868_CALLBACK": "LoRa868 callback %1",
  "LORA433_INIT": "Init lora module %1 CS pin %2 RST pin %3 IRQ pin %4",
  "dataSource": "Data Source",
  "FADER8_ADC_16RAW": "%1 get adc 16 raw %2",
  "FADER8_ADC_8RAW": "%1 get adc 8 raw %2",
  "FADER8_SWITCH_STATUS": "%1 get button status",
  "FADER8_LED_COLOR": "%1 set %2 LED color %3",
  "FADER8_SINGLE_COLOR": "%1 set single color %2 %3 %4",
  "LORABUS": "LoRaBus",
  "LORABUS_MASTER_INIT": "Init master %1 cs pin %2 reset pin %3 IRQ pin %4 freq %5",
  "LORABUS_MASTER_WRITE_REGISTER": "Master write register %1 slave address %2 start address %3 list %4",
  "LORABUS_MASTER_WRITE_MESSAGE": "Master write message %1 slave address %2 start address %3 message %4",
  "LORABUS_MASTER_READ_REGISTER": "Master read register %1 slave address %2 start address %3 quantity %4",
  "LORABUS_SLAVE_INIT": "Init slave %1 cs pin %2 reset pin %3 IRQ pin %4 freq %5 %6 slave address %7 write fifo size %8 read fifo size %9",
  "LORABUS_SLAVE_SET_READFIFO": "Set readfifo %1 addr %2 list %3",
  "LORABUS_SLAVE_RECEIVE": "Listen request",
  "LORABUS_SLAVE_GET_WRITEFIFO": "Get write fifo %1 addr %2 quantity %3",
  "HAT_CBACK": "C Back Driver",
  "HAT_CBACK_RAW_ADC": "%1 raw adc value",
  "HAT_CBACK_GET_INPUT": "%1 check input portB",
  "HAT_SET_SERVO_ANGLE": "%1 servo angle %2 %3",
  "HAT_SET_SERVO_PULSE": "%1 servo pulse %2 %3",
  "HAT_SET_OUTPUT": "%1 set output portB %2",
  "LOAD_EXAMPLES": "Load Examples",
  "timercamToken": "TimerCAM Token",
  "IIC_WRITE_MEM_LIST": "%1 Write list reg %2 byte %3",
  "MQTT_PRINTER": "AtomPrinter (MQTT)",
  "MQTT_PRINTER_PUBLISH": "Mqtt publish format %1 message %2",
  "IIC_SET_SLAVE_ADDR": "%1 Set slave addr %2",
  "MQTT_PRINTER_SET_TOPIC": "Set printer subscribe topic %1",
  "EZDATA_ASYNC_GET_VALUE": "ID:%1 Get value from topic %2 with token %3",
  "EZDATA_ASYNC_SET_VALUE": "ID:%1 Save value %2 to topic %3 with token %4",
  "EZDATA_ASYNC_GET_LIST_VALUE": "ID:%1 Get value from list %2 offset %3 count %4 with token %5",
  "EZDATA_ASYNC_SET_LIST_VALUE": "ID:%1 Save value %2 to list %3 with token %4",
  "EZDATA_ASYNC_REMOVE": "ID:%1 Remove topic %2 with token %3",
  "EZDATA_ASYNC_GET_ISO_DATE": "ID:%1 Get current ISODateTime (Async)",
  "FORUM": "Community",
  "SMARTCONFIG_SET_TYPE": "Set smartconfig type %1",
  "SMARTCONFIG_START": "Smartconfig start",
  "SMARTCONFIG_STOP": "Smartconfig stop",
  "SMARTCONFIG_GET_STATUS": "Get smartconfig status",
  "SMARTCONFIG_GET_SSID": "Get smartconfig ssid",
  "SMARTCONFIG_GET_PASSWORD": "Get smartconfig password",
  "SMARTCONFIG_GET_PHONEIP": "Get smartconfig phone ip",
  "WLAN_CREATE_STATION": "Create %1 interface",
  "WLAN_ACTIVE": "Activate the interface %1",
  "WLAN_SCAN": "Scan for access points",
  "WLAN_ISCONNECTED": "Check wifi is connected",
  "WLAN_CONNECT": "Connect to Wi-Fi ssid %1 password %2",
  "WLAN_CONFIG": "Get interface %1 config",
  "WLAN_IFCONFIG": "Get the interface's IP/netmask/gw/DNS addresses",
  "WLAN_STATUS": "Get connection status",
  "WLAN_DISCONNECT": "Disconnect wifi",
  "WLAN_STATE_DEFINE": "Connection status %1",
  "SMARTCONFIG_STATE_DEFINE": "Smartconfig status %1",
  "SMARTCONFIG_DEMO": "Smartconfig Demo",
  "UNIT_MQTT_SUB_CB": "MQTT subscribe callback topic %1 msg %2",
  "UNIT_MQTT_CB_LOOP": "%1 callback polling",
  "needShadow": "Show Border",
  "IOTBASE": "IoT Base NB",
  "IOTBASE_MQTT_CONNECT": "Init connect server %1 port %2 client id %3 username %4 password %5 keepalive %6",
  "IOTBASE_COAP_INIT": "Init connect IP %1 port %2",
  "IOTBASE_MODBUS_INIT": "Init Tx %1 Rx %2 bandrate %3 mode %4 slave addr %5",
  "IOTBASE_CHECK_STATUS": "Check module status",
  "IOTBASE_POWER_DOWN_MODULE": "Power down module",
  "IOTBASE_RESET_MODULE": "Reset module",
  "IOTBASE_CHECK_SINGLE_QUALITY": "Check signal quality",
  "IOTBASE_CHECK_NETWORK_REGISTRATION": "Check network registration",
  "IOTBASE_CHECK_GPRS_NETWORK_REGISTRATION": "Check GPRS network registration",
  "IOTBASE_COAP_GET": "CoAP GET url %1 security",
  "IOTBASE_COAP_POST": "CoAP POST url %1 payload %2 content format %3 security",
  "IOTBASE_COAP_PUT": "CoAP PUT url %1 payload %2 content format %3 security",
  "IOTBASE_COAP_DESTROY": "CoAP destroy",
  "IOTBASE_MQTT_DISCONNECT": "MQTT disconnect",
  "IOTBASE_MQTT_SUB": "MQTT subscribe topic %1 QoS %2",
  "IOTBASE_MQTT_SUB_CB": "MQTT subscribe callback topic %1 msg %2",
  "IOTBASE_MQTT_UNSUBSCRIBE": "MQTT unsubscribe topic %1",
  "IOTBASE_MQTT_PUBLISH": "MQTT publish topic %1 payload %2 QoS %3",
  "IOTBASE_MQTT_CHECK_CONNECTION": "MQTT check connection",
  "IOTBASE_MQTT_POLL": "MQTT poll downlink message",
  "IOTBASE_ENABLE_PDP_CONTEXT": "Enable PDP context",
  "IOTBASE_SET_ECHO_MODE": "Set command echo mode %1",
  "POWER_SET_VIBRATION_MOTOR_OFF": "Set vibration motor off",
  "POWER_SET_VIBRATION_MOTOR_ON": "Set vibration motor on",
  "POWER_SET_VIBRATION_MOTOR_TIME": "Motor vibration %1 s",
  "IOTBASE_MODEM_POWER": "COM module power %1",
  "IOTBASE_GET_IMEI": "Get IMEI",
  "IOTBASE_GET_CCID": "Get CCID",
  "IOTBASE_UART_READ": "Read all",
  "IOTBASE_UART_READ_CHARACTERS": "Read %1 characters",
  "IOTBASE_UART_READLINE": "Read line  ",
  "IOTBASE_UART_WRITE": "write %1 in uart",
  "IOTBASE_UART_ANY": "Remain cache ",
  "IOTBASE_UART_WRITE_LINE": "Write a line %1 in uart",
  "IOTBASE_UART_WRITE_RAW_DATA": "Write raw data %1 in uart",
  "IOTBASE_EZDATA_GET": "Get value from topic %1 with token %2",
  "IOTBASE_EZDATA_SAVE": "Save value %1 to topic %2 with token %3 mode %4",
  "IOTBASE_EZDATA_REMOVE": "Remove topic %1 with token %2",
  "UNIT_ENCODER_SET_RGB": "%1 set LED %2 color R %3 G %4 B %5",
  "BASE_LORAWAN470_CONFIG": "Config LoRaWAN %1 frequency band mask %2 %3 RX window param %4 RX1 offset %5 RX2 datarate %6 %7 RX2 freq (Hz) %8 class mode %9 %10 uplink downlink %11",
  "BASE_LORAWAN868_CONFIG": "Config LoRaWAN %1 frequency band mask %2 RX window param %3 RX1 offset %4 RX2 datarate %5 %6 RX2 freq (Hz) %7 class mode %8 %9 uplink downlink %10",
  "BASE_LORAWAN470_JOIN_STOP": "Stop join LoRaWAN network",
  "BASE_LORAWAN470_JOIN_START": "Start join LoRaWAN network %1 %2 %3 period (seconds) %4 maximum number of attempts %5",
  "UNIT_ENCODER_SET_MODE": "%1 set encoder mode %2",
  "UNIT_ENCODER_SET_COUNT": "%1 set encoder count %2",
  "UNIT_ENCODER_RESET_COUNT": "%1 reset encoder count",
  "DEMO_CONFIG_LORAWAN": "Config LoRaWAN",
  "UNIT_LORAWAN470_CONFIG": "Config %1 %2 frequency band mask %3 %4 RX window param %5 RX1 offset %6 RX2 datarate %7 %8 RX2 freq (Hz) %9 class mode %10 %11 uplink downlink %12",
  "UNIT_LORAWAN868_CONFIG": "Config %1 %2 frequency band mask %3 RX window param %4 RX1 offset %5 RX2 datarate %6 %7 RX2 freq (Hz) %8 class mode %9 %10 uplink downlink %11",
  "UNIT_LORAWAN470_JOIN_STOP": "%1 Stop join LoRaWAN network",
  "UNIT_LORAWAN470_JOIN_START": "%1 Start join LoRaWAN network %2 %3 %4 period (seconds) %5 maximum number of attempts %6",
  "IOTBASE_CATM": "IoT Base CatM",
  "IOTBASECATM_COAP_POST": "CoAP POST url %1 payload %2",
  "IOTBASECATM_COAP_PUT": "CoAP PUT url %1 payload %2",
  "IOTBASECATM_COAP_DELETE": "CoAP delete",
  "IOTBASECATM_COAP_GET": "CoAP GET url %1",
  "UNIT_MIC": "Microphone",
  "UNIT_MIC_GET_ANALOG": "%1 get analog value",
  "UNIT_MIC_GET_DIGITAL": "%1 get digital value",
  "UHF_RFID_GET_DEVICE_INFO": "Get %1 device info %2",
  "UHF_RFID_MULTI_READING_COUNT": "ID:%1 %2 multi reading count out %3",
  "UHF_RFID_CALLBACK": "ID:%1 callback read  EPC NO %2 dBm %3",
  "UHF_RFID_SET_SELECT_TAG": "Set %1 select tag param %2 EPC %3",
  "UHF_RFID_READ_MEMORY": "%1 read memory bank %2 start address %3 data length %4 password %5 mem bank %6",
  "UHF_RFID_WRITE_MEMORY": "%1 write memory bank %2 data %3 start address %4 password %5 mem bank %6",
  "UHF_RFID_AUTOMATIC_FREQ_HOPPING": "%1 automatic freq hopping %2",
  "UHF_RFID_LOCK_DATA_STORE": "%1 lock Data Store %2 %3 kill %4 %5 %6 access %7 %8 %9 epc %10 %11 %12 tid %13 %14 %15 user %16 %17 password %18",
  "UNIT_DLIGHT": "Dlight",
  "UNIT_DLIGHT_GET_LUX": "%1 read lux value",
  "UNIT_DLIGHT_SET_STATE_MODE": "%1 control state %2",
  "UNIT_DLIGHT_SET_CONTINOUS_MODE": "%1 continous mode %2",
  "UNIT_DLIGHT_SET_ONE_SHOT_MODE": "%1 one shot mode %2",
  "UNIT_PDM": "PDM",
  "UNIT_PDM_INIT": "Init %1 %2 sample %3 %4 channel %5 %6 sample rate %7 dma count %8 dma length %9",
  "UNIT_PDM_RECORD_TO_FILE": "%1 record wave file %2 seconds %3 file %4 format %5",
  "UNIT_PDM_DEINIT": "%1 deinit",
  "UNIT_SSR": "SSR",
  "UNIT_RELAY2": "Relay2",
  "UNIT_RELAY2_CONTROL": "%1 control %2 relay %3 %4 control %5",
  "UNIT_SSR_CONTROL": "%1 control %2",
  "CAT1": "CAT1",
  "COM_CAT1_INIT": "Init cat1 TX %1 RX %2",
  "HTTP_METHODS": "HTTP(S) request methods",
  "DTU_CAT1": "CAT1",
  "DTU_CAT1_INIT": "Init CAT1 DTU",
  "DTU_CAT1_MODBUS_INIT": "Init bandrate %1 mode %2 slave addr %3",
  "UNIT_POESP32": "PoEsp32",
  "COM_CAT1_MQTT_CHECK_CONNECT": "Check mqtt connect",
  "MYCOBOTPRO_IS_IN_POSITION": "Get is in position data %1 id %2",
  "MYCOBOT_GET_ENCODER_VALUE": "Get encoder value %1 id %2",
  "MYCOBOT_SET_ENCODER_VALUE": "Set encoder value %1 id %2 value %3",
  "MYCOBOT_SYNC_SEND_ANGLES": "Sync send angles 1 %1 2 %2 3 %3 4 %4 5 %5 6 %6 speed %7",
  "MYCOBOT_SYNC_SEND_COORDS": "Sync send coords 1 %1 2 %2 3 %3 4 %4 5 %5 6 %6 speed %7 mode %8",
  "MYCOBOT_RELEASE_ALL_SERVOS": "Release all servos",
  "MYCOBOT_CHECK_ATOM_CONNECT": "Check atom connect",
  "MYCOBOT_SET_ENCODERS": "Set encoders 1 %1 2 %2 3 %3 4 %4 5 %5 6 %6 speed %7",
  "MYCOBOT_GET_ENCODERS": "Get encoders",
  "MYCOBOT_SET_SERVO_DATA": "Set servo data servo %1 data %2 value %3",
  "MYCOBOT_GET_SERVO_DATA": "Get servo data %1 servo %2 data id %3",
  "MYCOBOT_SET_SERVO_CALIBRATION": "Set servo calibration %1 servo %2",
  "MYCOBOT_GET_TOF_DISTANCE": "Get tof distance",
  "MYCOBOT_SET_BASIC_OUTPUT": "Set basic output %1 pin %2 value %3",
  "MYCOBOT_GET_BASIC_INPUT": "Get basic input %1 pin %2",
  "MYCOBOTPRO_SET_PWM_OUTPUT": "Set pwm output channel %1 pin val %2",
  "UNIT_KMETER": "KMeter",
  "KMETER_GET_TEMPERATURE": "%1 Get %2 temperature %3",
  "UNIT_SONIC_IO": "SONIC IO",
  "SONIC_IO_GET_DISTANCE": "%1 get distance %2",
  "LORA433_RECEIVE_ENABLE": "Receive IRQ enable %1",
  "UNIT_ANGLE8": "8ANGLE",
  "LAN_BASE": "LAN Base",
  "LAN_BASE_INIT": "Init LAN %1 remote IP %2 port %3 socket type %4 %5 machine type %6",
  "LAN_BASE_TCP_SEND_PACKET": "TCP send packet %1",
  "LAN_BASE_TCP_RECEIVE_PACKET": "TCP receive packet size %1",
  "LAN_BASE_UDP_SEND_PACKET": "UDP send packet IP %1 port %2 payload %3",
  "LAN_BASE_UDP_RECEIVE_PACKET": "UDP receive packet size %1",
  "LAN_BASE_AVAILABLE_PACKET": "Available packet %1",
  "LAN_BASE_LOCAL_IP": "Local IP address",
  "LAN_BASE_REMOTE_IP": "Remote IP address",
  "LAN_BASE_GET_IF_CONFIG": "Get if config",
  "LAN_BASE_SOCKET_CLOSE": "Socket closed",
  "LAN_BASE_HTTP_GET": "HTTP(S) GET url %1 %2",
  "UNIT_POESP32_CHECK_UART": "%1 check device",
  "UNIT_POESP32_CHECK_ETH": "%1 check Ethernet connection",
  "UNIT_POESP32_CREATE_TCP": "%1 create TCP client IP %2 port %3",
  "UNIT_POESP32_SEND_TCP_PACKET": "%1 sent TCP packet %2",
  "UNIT_POESP32_RECEIVE_TCP_PACKET": "ID:%1 %2 receive TCP packet",
  "UNIT_POESP32_RECEIVE_TCP_PACKET_CB": "ID:%1 receive TCP callback %2",
  "UNIT_POESP32_MQTT_INIT": "Init %1 MQTT %2 server %3 port %4 client id %5 username %6 password %7",
  "UNIT_POESP32_MQTT_PUBLISH": "%1 MQTT publish topic %2 payload %3 Qos %4",
  "UNIT_POESP32_MQTT_SUBSCRIBE": "%1 MQTT subscribe topic %2 Qos %3",
  "UNIT_POESP32_MQTT_UNSUBSCRIBE": "%1 unsubscribe MQTT topic %2",
  "UNIT_POESP32_MQTT_RECEIVE": "ID:%1 %2 receive MQTT payload",
  "UNIT_POESP32_MQTT_RECEIVE_CB": "ID:%1 receive MQTT callback %2",
  "UNIT_POESP32_HTTP_CLIENT": "%1 HTTP(s) url %2 method %3 type %4 payload %5",
  "UNIT_CATM": "CatM",
  "UNIT_CATM_MODEM_POWER": "%1 COM module power %2",
  "UNIT_CATM_GET_IMEI": "%1 get IMEI",
  "UNIT_CATM_GET_CCID": "%1 get CCID",
  "UNIT_CATM_POWER_DOWN_MODULE": "%1 power down module",
  "UNIT_CATM_RESET_MODULE": "%1 reset module",
  "UNIT_CATM_SET_ECHO_MODE": "%1 set command echo mode %2",
  "UNIT_CATM_CHECK_STATUS": "%1 check module status",
  "UNIT_CATM_CHECK_SINGLE_QUALITY": "%1 check signal quality",
  "UNIT_CATM_CHECK_NETWORK_REGISTRATION": "%1 check network registration",
  "UNIT_CATM_CHECK_GPRS_NETWORK_REGISTRATION": "%1 check GPRS network registration",
  "UNIT_CATM_ENABLE_PDP_CONTEXT": "%1 enable PDP context",
  "UNIT_CATM_COAP_INIT": "%1 Init connect IP %2 port %3",
  "UNIT_CATM_COAP_GET": "%1 CoAP GET url %2",
  "UNIT_CATM_COAP_POST": "%1 CoAP POST url %2 payload %3",
  "UNIT_CATM_COAP_PUT": "%1 CoAP PUT url %2 payload %3",
  "UNIT_CATM_COAP_DELETE": "%1 CoAP delete",
  "UNIT_CATM_MQTT_CONNECT": "%1 Init connect server %2 port %3 client id %4 username %5 password %6 keepalive %7",
  "UNIT_CATM_MQTT_DISCONNECT": "%1 MQTT disconnect",
  "UNIT_CATM_MQTT_SUB": "%1 MQTT subscribe topic %2 QoS %3",
  "UNIT_CATM_MQTT_SUB_CB": "%1 MQTT subscribe callback topic %2 msg %3",
  "UNIT_CATM_MQTT_UNSUBSCRIBE": "%1 MQTT unsubscribe topic %2",
  "UNIT_CATM_MQTT_PUBLISH": "%1 MQTT publish topic %2 payload %3 QoS %4",
  "UNIT_CATM_MQTT_CHECK_CONNECTION": "%1 MQTT check connection",
  "UNIT_CATM_MQTT_POLL": "%1 MQTT poll downlink message",
  "UNIT_CATM_EZDATA_ASYNC_GET_VALUE": "ID:%1 %2 Get value from topic %3 with token %4",
  "UNIT_CATM_EZDATA_SAVE": "%1 save value %2 to topic %3 with token %4 mode %5",
  "UNIT_CATM_EZDATA_REMOVE": "%1 remove topic %2 with token %3",
  "UNIT_CATM_NETWORK_ACTIVE": "%1 network active id %2 action %3",
  "UNIT_CATM_NETWORK_IP_ID": "%1 network IP id %2",
  "UNIT_CATM_HTTP_SERVICES": "%1 HTTP services %2 method %3 %4 url %5 path %6 headers %7 payload %8",
  "UNIT_TUBE": "Tube Pressure",
  "UNIT_TUBE_GET_PRESSURE": "%1 get pressure",
  "UNIT_TUBE_GET_ADC_RAW": "%1 get ADC raw value",
  "UNIT_CATM_DISCONNECT_SERVER": "%1 disconnect HTTP services",
  "IOTBASECATM_NETWORK_ACTIVE": "Network active id %1 action %2",
  "IOTBASECATM_NETWORK_IP_ID": "Network IP id %1",
  "IOTBASECATM_HTTP_SERVICES": "HTTP services %1 method %2 %3 url %4 path %5 headers %6 payload %7",
  "IOTBASECATM_DISCONNECT_SERVER": "Disconnect HTTP services",
  "RGB_UNIT_SET_COLOR_RGB": "Set %1 index %2 color R %3 G %4 B %5",
  "PNP": "IoT Plug and Play",
  "AZURE_PNP_INIT_CENTRAL": "Connect IoT Central %1 scope id %2 device id %3 device key %4 model id %5",
  "DTU_CAT1_MQTT_CHECK_CONNECT": "Check mqtt connect",
  "SERVO2_DEGREE": "Set channel %1 servo degree %2°",
  "SERVO2_PULSE": "Set channel %1 servo pulse %2uS",
  "SERVO2_DUTY": "Set channel %1 servo duty cycle %2%",
  "BASE_DTUNB_MODBUS_INIT": "Init Tx %1 Rx %2 bandrate %3 mode %4 slave addr %5",
  "DDS_SET_OUTPUT_FREQ_PHASE": "Set %1 output freq CH %2 phase CH %3",
  "DDS_SET_CONTROL_SLEEP": "Set %1 control %2",
  "GSM": "GSM",
  "COM_GSM_PING_REQUEST": "Ping request url %1",
  "COM_GSM_TCP_CLIENT": "TCP client %1 method %2 %3 IP %4 port %5 payload %6",
  "COM_GSM_CHECK_GPRS_SERVICE": "Check GPRS service",
  "COM_GSM_HTTP_SERVICE": "HTTP service %1 method %2 %3 url %4 content type %5 %6 payload %7",
  "COM_GSM_HTTP_DESTROY": "HTTP destroy",
  "UNIT_BUZZER": "BUZZER",
  "UNIT_BUZZER_SET_STATE": "%1 state %2",
  "UNIT_BUZZER_SET_FREQ": "%1 set frequency %2",
  "COM_GSM_SET_PDP_CONTEXT": "PDP context %1",
  "COM_GSM_SET_PDP_ADDRESS": "PDP address cid %1",
  "TOIO_READ_SENSOR": "Read toio's sensor",
  "TOIO_READ_BATTERY": "Read toio's battery level(%)",
  "TOIO_READ_BUTTON": "Read toio's button status",
  "TOIO_WRITE_MOTOR_SPEED": "Write toio's motor speed left %1 right %2",
  "TOIO_WRITE_MOTOR_TIMER": "Write toio's motor speed left %1 right %2 duration (auto x10 milliseconds) %3",
  "TOIO_WRITE_MOTOR_STOP": "Write toio's motor stop",
  "TOIO_WRITE_LIGHT_RGB": "Write toio's indicator red %1 green %2 blue %3 duration (auto x10 milliseconds) %4",
  "TOIO_WRITE_LIGHT_HSV": "Write toio's indicator hue %1 saturation %2 value %3 duration (auto x10 milliseconds) %4",
  "TOIO_WRITE_LIGHT_SEQUENCE": "Write toio's indicator led sequence %1 repeat times %2 from %3 red %4 green %5 blue %6 duration (auto x10 milliseconds) %7  to %8 red %9 green %10 blue %11 duration (auto x10 milliseconds) %12",
  "TOIO_WRITE_LIGHT_OFF": "Write toio's indicator led off",
  "TOIO_WRITE_SOUND_ID": "Write toio's sound id %1 volume %2",
  "TOIO_WRITE_SOUND_STOP": "Write toio's sound stop",
  "TOIO_IS_CONNECTED": "Is toio connected",
  "TOIO_SCAN": "Scan and connect nearest toio",
  "TOIO_DISCONNECT": "Disconnect toio connection",
  "TOIO_ON_NOTIFY_CB": "On toio ble notify %1 %2",
  "TOIO_ON_READ_RECV_CB": "On toio ble read recv %1 %2",
  "TOIO_INIT": "Init toio",
  "USB_MODULE": "USB",
  "USB_INIT": "HID init mouse",
  "USB_HID_POLL": "Mouse update task",
  "USB_BUTTON_STATE": "Get mouse button status",
  "USB_MOUSE_CUTSOR": "Get mouse cursor position %1",
  "USB_BUTTON_CLICK": "%1 button click",
  "USB_READ_INPUT_PIN": "Read input pin %1",
  "USB_READ_OUTPUT_PIN": "Read output pin %1",
  "USB_READ_OUTPUT_PIN_VALUE": "Write output pin %1 value %2",
  "UNIT_EXT_IO2": "EXT.IO2",
  "EXTIO2_GET_CONFIG_MODE": "%1 Get config mode pin %2",
  "EXTIO2_SET_CONFIG_MODE": "%1 Set config mode pin %2 mode %3",
  "EXTIO2_READ_DIGITAL_INPUT_PIN": "%1 Get digital input pin %2",
  "EXTIO2_WRITE_DIGITAL_OUTPUT_PIN": "%1 Set digital output pin %2 level %3",
  "EXTIO2_WRITE_DIGITAL_OUTPUT_PIN2": "%1 Set digital output pin %2 level %3",
  "EXTIO2_WRITE_SERVO_ANGLE": "%1 Set servo pin %2 angle %3",
  "WLAN_SET_CONFIG": "Config to AP ssid %1 password %2",
  "EXTIO2_READ_ADC8_PIN": "%1 Get ADC 8bit pin %2",
  "EXTIO2_READ_ADC12_PIN": "%1 Get ADC 12bit pin %2",
  "EXTIO2_READ_SERVO_ANGLE_PIN": "%1 Get servo angle pin %2",
  "EXTIO2_WRITE_SERVO_PULSE": "%1 Set servo pin %2 pulse %3",
  "EXTIO2_READ_SERVO_PULSE_PIN": "%1 Get servo pulse pin %2",
  "EXTIO2_WRITE_RGB_LED_PIN": "%1 Set RGB LED pin %2 R %3 G %4 B %5",
  "EXTIO2_READ_RGB_LED_PIN": "%1 Get RGB LED pin %2",
  "EXTIO2_READ_STATUS": "%1 Get status %2",
  "EXTIO2_SET_I2C_ADDRESS": "%1 Set I2C Address %2",
  "EXTIO2_INIT_I2C_ADDRESS": "%1 Init I2C Address %2",
  "HAT_8SERVO": "8Servos",
  "HAT_8SERVO_WRITE_SERVO_ANGLE": "%1 write servo angle %2 CH %3",
  "HAT_8SERVO_WRITE_SERVO_PULSE": "%1 write servo pulse %2 CH %3",
  "HAT_8SERVO_SET_POWER_CONTROL": "%1 set power control %2",
  "HAT_8SERVO_READ_SERVO_ANGLE": "%1 read servo angle CH %2",
  "HAT_8SERVO_READ_SERVO_PULSE": "%1 read servo pulse CH %2",
  "HAT_8SERVO_GET_POWER_CONTROL": "%1 get power control",
  "ROBOCAR": "MC4.0",
  "ROBOCAR_SET_PID_PARAMETER": "Set PID parameter P %1 I %2 D %3",
  "ROBOCAR_SET_ENCODER_PARAMETER_COUNT": "Set encoder parameter count %1",
  "ROBOCAR_SET_ENCODER_PARAMETER": "Set encoder parameter %1 Pulse per cycle %2 Cycle per angle ratio %3",
  "ROBOCAR_SET_MOTOR_CONTROL": "Set motor control motor %1 (1 ~ 4) dir %2 (0 ~ 1) speed %3 (0 ~ 100)",
  "ROBOCAR_SET_MOTOR_ANGLE_DIR": "Set robo turn angle %1 dir %2",
  "ROBOCAR_SET_MOTOR_ANGLE": "Set motor angle motor %1 angle %2 dir %3",
  "ROBOCAR_MOTOR_STOP": "Motor stop motor %1 (1 ~ 4)",
  "ROBOCAR_RUN_FORWARD": "Run forward speed %1 (0 ~ 100)",
  "ROBOCAR_RUN_BACKWARD": "Run backward speed %1 (0 ~ 100)",
  "ROBOCAR_RUN_RIGHTSIDE": "Run rightside speed %1 (0 ~ 100)",
  "ROBOCAR_RUN_LEFTSIDE": "Run leftside speed %1 (0 ~ 100)",
  "ROBOCAR_ROTATE_RIGHTSIDE": "Rotate rightside speed %1 (0 ~ 100)",
  "ROBOCAR_ROTATE_LEFTSIDE": "Rotate leftside speed %1 (0 ~ 100)",
  "ROBOCAR_UPDATE_TASK": "Update task",
  "ROBOCAR_READ_ENCODER_COUNT": "Get encoder pulse motor %1 (return int)",
  "HAT_BALAC": "BalaC/C Plus",
  "HAT_BALAC_SET_MOTOR_SPEED": "Set %1 speed %2",
  "HAT_BALAC_STOP_MOTOR": "Stop %1",
  "IR": "IR",
  "timer": "Timer",
  "LORAWAN_NETWORK": "Network",
  "PBHUB_DIGITAL_READ": "%1 %2 digitalRead CH %3 IO %4",
  "PBHUB_DIGITAL_WRITE": "%1 %2 digitalWrite CH %3 IO %4 value %5",
  "PBHUB_ANALOGREAD": "%1 %2 analogRead CH %3",
  "PBHUB_SETRGBNUM": "%1 %2 RGB LED CH %3 total LED %4",
  "PBHUB_SETCOLORPOS": "%1 %2 RGB LED CH %3 LED num %4 color %5",
  "PBHUB_SETCOLOR": "%1 %2 RGB LED CH %3 begin %4 number %5 color %6",
  "PBHUB_SETBRIGHTNESS": "%1 %2 RGB LED CH %3 brightness %4",
  "MQTT_PRINTER_PRINT_TEXT": "Print text x %1 size %2 text %3",
  "MQTT_PRINTER_BAR_PRINT": "Print barcode message %1",
  "MQTT_PRINTER_QR_PRINT": "Print QRcode message %1",
  "LAN_BASE_MQTT_INIT": "Init MQTT server %1 port %2 client id %3 username %4 password %5 keepalive %6",
  "LAN_BASE_MQTT_DISCONNECT": "MQTT disconnect server",
  "LAN_BASE_MQTT_CONNECT": "MQTT connect server",
  "LAN_BASE_MQTT_CHECK_CONNECTION": "MQTT check connect server",
  "PBHUB_SET_SERVO_ANGLE": "%1 servo CH %2 IO %3 angle %4",
  "PBHUB_SET_SERVO_PULSE": "%1 servo CH %2 IO %3 pulse %4",
  "PBHUB_SET_I2C_ADDRESS": "%1 set I2C address %2",
  "PBHUB_INIT_I2C_ADDRESS": "%1 init I2C address %2",
  "PBHUB_READ_STATUS": "%1 read status %2",
  "UNIT_GPS_GET_LATITUDE": "get %1 latitude (string: ddmm.mmmmm<W/E>)",
  "UNIT_GPS_GET_LONGITUDE": "get %1 longitude (string: dddmm.mmmmm<S/N>)",
  "UNIT_GPS_GET_LATITUDE_DECIMAL": "get %1 latitude decimal (float: dd.dddd)",
  "UNIT_GPS_GET_LONGITUDE_DECIMAL": "get %1 longitude decimal (float: dd.dddd)",
  "ROBOCAR_UPDATE_SENSOR": "Get two-channel line follower sensor %1 (return int)",
  "UNIT_LIMIT": "Limit",
  "UNIT_GPS_GET_ALTITUDE": "get %1 altitude (meter)",
  "UNIT_LIMIT_GET_SWITCH_STATUS": "%1 Get switch status",
  "UNIT_KEY": "Key",
  "UNIT_KEY_GET_SWITCH_STATUS": "%1 Get switch status",
  "UNIT_KEY_SET_COLOR": "%1 Set RGB LED color %2 brightness %3",
  "BASE_POE": "Base PoE",
  "BASE_POE_INIT": "Init PoE %1 remote IP %2 port %3 socket type %4 %5 machine type %6",
  "ROBOCAR_ANGLE_TASK": "Robo angle task",
  "ROBOCAR_CHECK_ANGLE_TASK": "Check angle task (return True or False)",
  "ROBOCAR_CLEAR_ENCODER_COUNT": "Clear encoder pulse motor %1 (1 ~ 4)",
  "UNIT_KEY_SET_RGB_COLOR": "%1 Set RGB LED color R %2 G %3 B %4 brightness %5",
  "BASE_GPS_OPEN_SDCARD_FILE": "open file %1 path %2 mode %3",
  "BASE_GPS_SDCARD_FILE_READ_ALL": "file read all %1",
  "BASE_GPS_SDCARD_FILE_READ_BYTES": "file read %1 bytes %2",
  "BASE_GPS_SDCARD_FILE_READ_LINE": "file read line %1",
  "BASE_GPS_SDCARD_FILE_WRITE": "file write %1 text %2",
  "BASE_GPS_SDCARD_FILE_SET_SEEK": "file set seek %1",
  "BASE_GPS_SDCARD_FILE_GET_SEEK": "file get seek %1",
  "BASE_GPS_SDCARD_LISTDIR": "show list directory %1 path %2",
  "BASE_GPS_SDCARD_MKDIR": "create folder %1 path %2",
  "BASE_GPS_SDCARD_REMOVE": "delete file %1 path %2",
  "BASE_GPS_SDCARD_RMDIR": "delete folder %1 path %2",
  "BASE_GPS_SDCARD_RENAME": "rename file %1 old path %2 new path %3",
  "BASE_GPS_SDCARD_ISFILE": "is file exist ? %1 path %2",
  "BASE_GPS_SDCARD_ISDIRECTORY": "is folder exist ? %1 path %2",
  "BASE_GPS_INIT_SDCARD": "SD card io config %1 MISO %2 MOSI %3 SCK %4 frequency %5",
  "TOIO_READ_ID": " Read toio's position/standard ID",
  "TOIO_READ_MOTION_DETECTION": "Read toio's motion detection",
  "TOIO_READ_POSTURE_EULER_ANGLE": "Read toio's posture angle",
  "TOIO_READ_POSTURE_QUATERNIONS": "Read toio's posture quaternions",
  "TOIO_READ_MAGNETIC": "Read toio's magnetic sensor",
  "TOIO_READ_VERSION": "Read toio's firmware version",
  "TOIO_WRITE_MOTOR_MOVE_TO_TARGET": "Write toio's motor move to target %1 control distinction value %2 timeout period %3 movement type %4 motor speed %5 motor speed change types %6 x coordinate %7 y coordinate %8 angle type %9 angle %10",
  "UNIT_CATMGNSS": "CatM + GNSS",
  "UNIT_CATMGNSS_MODEM_POWER": "%1 COM module power %2",
  "UNIT_CATMGNSS_GET_IMEI": "%1 get IMEI",
  "UNIT_CATMGNSS_GET_CCID": "%1 get CCID",
  "UNIT_CATMGNSS_POWER_DOWN_MODULE": "%1 power down module",
  "UNIT_CATMGNSS_RESET_MODULE": "%1 reset module",
  "UNIT_CATMGNSS_SET_ECHO_MODE": "%1 set command echo mode %2",
  "UNIT_CATMGNSS_CHECK_STATUS": "%1 check module status",
  "UNIT_CATMGNSS_CHECK_SINGLE_QUALITY": "%1 check signal quality",
  "UNIT_CATMGNSS_CHECK_NETWORK_REGISTRATION": "%1 check network registration",
  "UNIT_CATMGNSS_CHECK_GPRS_NETWORK_REGISTRATION": "%1 check GPRS network registration",
  "UNIT_CATMGNSS_ENABLE_PDP_CONTEXT": "%1 enable PDP context",
  "UNIT_CATMGNSS_COAP_INIT": "%1 Init connect IP %2 port %3",
  "UNIT_CATMGNSS_COAP_GET": "%1 CoAP GET url %2",
  "UNIT_CATMGNSS_COAP_POST": "%1 CoAP POST url %2 payload %3",
  "UNIT_CATMGNSS_COAP_PUT": "%1 CoAP PUT url %2 payload %3",
  "UNIT_CATMGNSS_COAP_DELETE": "%1 CoAP delete",
  "UNIT_CATMGNSS_MQTT_CONNECT": "%1 Init connect server %2 port %3 client id %4 username %5 password %6 keepalive %7",
  "UNIT_CATMGNSS_MQTT_DISCONNECT": "%1 MQTT disconnect",
  "UNIT_CATMGNSS_MQTT_SUB": "%1 MQTT subscribe topic %2 QoS %3",
  "UNIT_CATMGNSS_MQTT_SUB_CB": "%1 MQTT subscribe callback topic %2 msg %3",
  "UNIT_CATMGNSS_MQTT_UNSUBSCRIBE": "%1 MQTT unsubscribe topic %2",
  "UNIT_CATMGNSS_MQTT_PUBLISH": "%1 MQTT publish topic %2 payload %3 QoS %4",
  "UNIT_CATMGNSS_MQTT_CHECK_CONNECTION": "%1 MQTT check connection",
  "UNIT_CATMGNSS_MQTT_POLL": "%1 MQTT poll downlink message",
  "UNIT_CATMGNSS_EZDATA_ASYNC_GET_VALUE": "ID:%1 %2 Get value from topic %3 with token %4",
  "UNIT_CATMGNSS_EZDATA_SAVE": "%1 save value %2 to topic %3 with token %4 mode %5",
  "UNIT_CATMGNSS_EZDATA_REMOVE": "%1 remove topic %2 with token %3",
  "UNIT_CATMGNSS_NETWORK_ACTIVE": "%1 network active id %2 action %3",
  "UNIT_CATMGNSS_NETWORK_IP_ID": "%1 network IP id %2",
  "UNIT_CATMGNSS_HTTP_SERVICES": "%1 HTTP services %2 method %3 %4 url %5 path %6 headers %7 payload %8",
  "UNIT_CATMGNSS_DISCONNECT_SERVER": "%1 disconnect HTTP services",
  "UNIT_CATMGNSS_POWER_CONTROL": "%1 GNSS power control %2",
  "UNIT_CATMGNSS_WORK_MODE": "%1 GNSS work mode %2",
  "UNIT_CATMGNSS_NMEA_POLL_TASK": "%1 GNSS NMEA poll task",
  "UNIT_CATMGNSS_SET_TIME_ZONE": "%1 Set time zone %2",
  "UNIT_CATMGNSS_GET_POSITION": "%1 GNSS position %2 format %3",
  "UNIT_CATMGNSS_GET_TIME": "%1 Get GNSS time",
  "UNIT_CATMGNSS_GET_DATE": "%1 Get GNSS date",
  "UNIT_CATMGNSS_GET_ALTITUDE": "%1 Get GNSS altitude",
  "UNIT_CATMGNSS_GET_SATELLITE": "%1 Get GNSS satellite view",
  "UNIT_CATMGNSS_GET_FIX_STATUS": "%1 Get GNSS fix status",
  "UNIT_CATMGNSS_GET_SPEED": "%1 Get GNSS speed",
  "UNIT_CATMGNSS_GET_COURSE": "%1 Get GNSS course",
  "UNIT_CATMGNSS_CHECK_POWER": "%1 Check GNSS power",
  "BASE_TFCARD": "TF-CARD",
  "BASE_TFCARD_OPEN_TFCARD_FILE": "open file %1 path %2 mode %3",
  "BASE_TFCARD_FILE_READ_ALL": "file read all %1",
  "BASE_TFCARD_FILE_READ_BYTES": "file read %1 bytes %2",
  "BASE_TFCARD_FILE_READ_LINE": "file read line %1",
  "BASE_TFCARD_FILE_WRITE": "file write %1 text %2",
  "BASE_TFCARD_FILE_SET_SEEK": "file set seek %1",
  "BASE_TFCARD_FILE_GET_SEEK": "file get seek %1",
  "BASE_TFCARD_LISTDIR": "show list directory %1 path %2",
  "BASE_TFCARD_MKDIR": "create folder %1 path %2",
  "BASE_TFCARD_REMOVE": "delete file %1 path %2",
  "BASE_TFCARD_RMDIR": "delete folder %1 path %2",
  "BASE_TFCARD_RENAME": "rename file %1 old path %2 new path %3",
  "BASE_TFCARD_ISFILE": "is file exist ? %1 path %2",
  "BASE_TFCARD_ISDIRECTORY": "is folder exist ? %1 path %2",
  "BASE_TFCARD_INIT_SDCARD": "SD card io config %1 MISO %2 MOSI %3 SCK %4 frequency %5",
  "HAT_CBACKNBIOT": "CBack NB-IoT",
  "HAT_CBACKNBIOT_MQTT_CONNECT": "Init connect server %1 port %2 client id %3 username %4 password %5 keepalive %6",
  "HAT_CBACKNBIOT_COAP_INIT": "Init connect IP %1 port %2",
  "HAT_CBACKNBIOT_MODBUS_INIT": "Init Tx %1 Rx %2 bandrate %3 mode %4 slave addr %5",
  "HAT_CBACKNBIOT_CHECK_STATUS": "Check module status",
  "HAT_CBACKNBIOT_POWER_DOWN_MODULE": "Power down module",
  "HAT_CBACKNBIOT_RESET_MODULE": "Reset module",
  "HAT_CBACKNBIOT_CHECK_SINGLE_QUALITY": "Check signal quality",
  "HAT_CBACKNBIOT_CHECK_NETWORK_REGISTRATION": "Check network registration",
  "HAT_CBACKNBIOT_CHECK_GPRS_NETWORK_REGISTRATION": "Check GPRS network registration",
  "HAT_CBACKNBIOT_COAP_GET": "CoAP GET url %1 security",
  "HAT_CBACKNBIOT_COAP_POST": "CoAP POST url %1 payload %2 content format %3 security",
  "HAT_CBACKNBIOT_COAP_PUT": "CoAP PUT url %1 payload %2 content format %3 security",
  "HAT_CBACKNBIOT_COAP_DESTROY": "CoAP destroy",
  "HAT_CBACKNBIOT_MQTT_DISCONNECT": "MQTT disconnect",
  "HAT_CBACKNBIOT_MQTT_SUB": "MQTT subscribe topic %1 QoS %2",
  "HAT_CBACKNBIOT_MQTT_SUB_CB": "MQTT subscribe callback topic %1 msg %2",
  "HAT_CBACKNBIOT_MQTT_UNSUBSCRIBE": "MQTT unsubscribe topic %1",
  "HAT_CBACKNBIOT_MQTT_PUBLISH": "MQTT publish topic %1 payload %2 QoS %3",
  "HAT_CBACKNBIOT_MQTT_CHECK_CONNECTION": "MQTT check connection",
  "HAT_CBACKNBIOT_MQTT_POLL": "MQTT poll downlink message",
  "HAT_CBACKNBIOT_SET_ECHO_MODE": "Set command echo mode %1",
  "HAT_CBACKNBIOT_MODEM_POWER": "COM module power %1",
  "HAT_CBACKNBIOT_GET_IMEI": "Get IMEI",
  "HAT_CBACKNBIOT_GET_CCID": "Get CCID",
  "HAT_CBACKNBIOT_UART_READ": "Read all",
  "HAT_CBACKNBIOT_UART_READ_CHARACTERS": "Read %1 characters",
  "HAT_CBACKNBIOT_UART_READLINE": "Read line",
  "HAT_CBACKNBIOT_UART_WRITE": "Write %1 in UART",
  "HAT_CBACKNBIOT_UART_ANY": "Remain cache ",
  "HAT_CBACKNBIOT_UART_WRITE_LINE": "Write a line %1 in UART",
  "HAT_CBACKNBIOT_UART_WRITE_RAW_DATA": "Write raw data %1 in UART",
  "HAT_CBACKNBIOT_EZDATA_GET": "Get value from topic %1 with token %2",
  "HAT_CBACKNBIOT_EZDATA_SAVE": "Save value %1 to topic %2 with token %3 mode %4",
  "HAT_CBACKNBIOT_EZDATA_REMOVE": "Remove topic %1 with token %2",
  "UNIT_DIGICLOCK": "Digi Clock",
  "UNIT_DIGICLOCK_INIT_I2C_ADDRESS": "%1 init i2c address %2",
  "UNIT_DIGICLOCK_CLEAR": "%1 clear",
  "UNIT_DIGICLOCK_WRITE_BRIGHTNESS": "%1 write brightness %2",
  "UNIT_DIGICLOCK_WRITE_RAW": "%1 write raw data %2 index %3",
  "UNIT_DIGICLOCK_WRITE_CHAR": "%1 write char %2 index %3",
  "UNIT_DIGICLOCK_WRITE_CHAR_LIST": "%1 write char list %2",
  "UNIT_DIGICLOCK_MATCH_STRING": "%1 write match string %2",
  "UNIT_DIGICLOCK_READ_VERSION": "%1 read version",
  "ESPNOW_INIT_CHANNEL": "Init espnow channel %1",
  "M5ESPNOW_SET_CHANNEL": "EspNow set %1 channel %2",
  "M5ESPNOW_ADD_PEER": "EspNow add %1 peer %2 id %3 (1 ~ 10) ifidx %4",
  "M5ESPNOW_SET_AP_MODE": "EspNow set AP mode %1 ssid %2 password %3 channel %4",
  "M5ESPNOW_SEND_STRING": "EspNow send %1 string %2 id %3",
  "M5ESPNOW_SET_PMK": "EspNow set %1 primary master key %2",
  "M5ESPNOW_GET_MAC_ADDRESS": "EspNow get mac address %1 mode %2",
  "M5ESPNOW_GET_REMOTE_MAC": "EspNow get remote mac %1 remote ssid %2",
  "M5ESPNOW_RECV_CB": "EspNow define receive callback %1 mac %2 data %3",
  "M5ESPNOW_SEND_CB": "EspNow define send callback %1 flag %2",
  "MODULE_BALA2": "Bala2",
  "MODULE_BALA2_RUN": "Bala2 %1 run %2 speed %3",
  "MODULE_BALA2_TURN": "Bala2 %1 turn %2 speed %3",
  "MODULE_BALA2_ROTATE": "Bala2 %1 rotate %2 speed %3",
  "MODULE_BALA2_STOP": "Bala2 stop",
  "MODULE_BALA2_SERVO_ANGLE": "Bala2 %1 servo %2 angle %3",
  "MODULE_BALA2_SERVO_PULSE": "Bala2 %1 servo %2 pulse %3",
  "MODULE_BALA2_SET_MOTOR_SPEED": "Bala2 %1 motor %2 dir %3 speed %4",
  "MODULE_BALA2_CLEAR": "Bala2 clear %1 encoder %2 count",
  "MODULE_BALA2_READ": "Bala2 read %1 encoder %2 count",
  "MODULE_BALA2_ACCELEROMETER": "Accelerometer %1",
  "MODULE_BALA2_GYRO": "Gyroscope %1",
  "MODULE_BALA2_YPR": "Read %1",
  "HAT_DLIGHT": "Dlight",
  "HAT_DLIGHT_GET_LUX": "%1 read lux value",
  "HAT_DLIGHT_SET_STATE_MODE": "%1 control %2 state %3",
  "HAT_DLIGHT_SET_CONTINOUS_MODE": "%1 continous %2 mode %3",
  "HAT_DLIGHT_SET_ONE_SHOT_MODE": "%1 one shot %2 mode %3",
  "UNIT_ANGLE8_READ_ADC_12RAW": "%1 Get ADC 12bit value %2 channel %3",
  "UNIT_ANGLE8_READ_ADC_8RAW": "%1 Get ADC 8bit value %2 channel %3",
  "UNIT_ANGLE8_READ_BUTTON_STATUS": "%1 Get button status",
  "UNIT_ANGLE8_READ_STATUS": "%1 Get %2 status %3",
  "UNIT_ANGLE8_SET_LED_RGB": "%1 Set RGB LED %2 channel %3 R %4 G %5 B %6 Brightness %7",
  "UNIT_ANGLE8_SET_I2C_ADDRESS": "%1 Set I2C %2 address %3",
  "RTC_STATION_SET_CLIENT": "set rtc %1 year %2 month %3 date %4 weekday %5 hour %6 minute %7 second %8",
  "RTC_STATION_GET_DATE_TIME": "get rtc %1",
  "GROVE_GET_STATUS": "Grove %1 get status",
  "GROVE_SET_STATUS": "Grove %1 set %2 control %3",
  "AXP_STATION_GET_BTNSTATE": "Get power button status %1",
  "UNIT_GROVE2GROVE": "Grove2Grove",
  "UNIT_GROVE2GROVE_GET_STATUS": "%1 Get enable status",
  "UNIT_GROVE2GROVE_GET_AMETER": "%1 Get ameter value",
  "UNIT_GROVE2GROVE_SET_PIN": "%1 Set enable %2 pin %3",
  "UNIT_GROVE2GROVE_SET_VREF": "%1 Set 0mA reference current",
  "GROVE": "Grove",
  "GROVE_CHECK_CHANNEL_ENABLE": "Grove %1 check channel enable",
  "GROVE_GET_CURRENT": "Grove %1 get current",
  "GROVE_GET_VBUS_VOLTAGE": "Grove %1 get VBus voltage",
  "GROVE_SET_CHANNEL_ENABLE": "Grove %1 channel %2 enable %3",
  "UNIT_UWB": "UWB",
  "UNIT_UWB_RESET": "%1 Reset",
  "UNIT_UWB_SET_INTERVAL": "Set %1 range interval %2 times before value output",
  "UNIT_UWB_SET_TAG": "Set %1 to tag mode",
  "UNIT_UWB_SET_ANCHOR": "Set %1  to anchor mode with ID %2 (0 ~ 3)",
  "UNIT_UWB_START_MEASURING": "%1 Start measuring",
  "UNIT_UWB_STOP_MEASURING": "%1 Stop measuring",
  "UNIT_UWB_GET_VERSION": "%1 Get firmware version (return string)",
  "UNIT_UWB_GET_MEASURING_DATA": "%1 Get measuring data list",
  "UNIT_UWB_GET_MEASURING_DATA_LIST": "%1 Get measuring %2 data list %3",
  "UNIT_ANGLE8_SET_LED_RGB_FROM": "%1 Set RGB LED %2 channel from %3 to %4 R %5 G %6 B %7 Brightness %8",
  "MODULE_4IN8OUT": "4in8out",
  "MODULE_4IN8OUT_INIT": "Init I2C %1 address %2",
  "MODULE_4IN8OUT_READ_PIN": "Get input %1 channel %2",
  "MODULE_4IN8OUT_READ_STATUS": "Get %1 status %2",
  "MODULE_4IN8OUT_WRITE_PIN": "Set output %1 channel %2 %3 state %4",
  "MODULE_4IN8OUT_SET_ADDRESS": "Set I2C %1 address %2",
  "UNIT_CO2": "Co2",
  "UNIT_CO2_START_PERIODIC_MEASUREMENT": "%1 Start periodic measurement",
  "UNIT_CO2_STOP_PERIODIC_MEASUREMENT": "%1 Stop periodic measurement",
  "UNIT_CO2_DOWNLOAD_SENSOR_MEASUREMENT": "%1 Updated sensor measurement",
  "UNIT_CO2_SET_TEMPERATURE_OFFSET": "%1 Set %2 temperature offset %3",
  "UNIT_CO2_SET_SENSOR_ALTITUDE": "%1 Set sensor %2 altitude height %3 M",
  "UNIT_CO2_SET_AMBIENT_PRESSURE": "%1 Set %2 ambient pressure %3 hPa",
  "UNIT_CO2_FORCE_CALIBRATION": "%1 Perform forced recalibration %2 CO2 %3 PPM",
  "UNIT_CO2_SET_AUTO_CALIBRATION": "%1 Set %2 auto-calibration %3",
  "UNIT_CO2_START_LOW_PERIODIC_MEASUREMENT": "%1 Start low periodic measurement",
  "UNIT_CO2_PERSIST_SETTING": "%1 All settings save EEPROM",
  "UNIT_CO2_SELF_TEST": "%1 Perform self test",
  "UNIT_CO2_FACTORY_RESET": "%1 Perform factory reset",
  "UNIT_CO2_REINIT": "%1 Re-initializes sensor",
  "UNIT_CO2_SINGLE_SHOT_MEASUREMENT_ALL": "%1 Single shot measurement ALL",
  "UNIT_CO2_SINGLE_SHOT_MEASUREMENT_HT": "%1 Single shot measurement HT",
  "UNIT_CO2_POWER_DOWN": "%1 Sensor power down",
  "UNIT_CO2_WAKE_UP": "%1 Sensor wake up",
  "UNIT_CO2_READ_PARAMETER": "%1 Get %2 parameter %3",
  "UNIT_CO2_GET_TEMPERATURE_OFFSET": "%1 Get temperature offset",
  "UNIT_CO2_GET_SENSOR_ALTITUDE": "%1 Get sensor altitude",
  "UNIT_CO2_GET_CALIBRATION_ENABLED": "%1 Get auto-calibration enabled ?",
  "UNIT_CO2_GET_SERIAL_NUMBER": "%1 Get sensor serial number",
  "AXP_STATION_GET_BAT_VOLTAGE_PERCENT": "Get battery percentage Vmin %1 Vmax %2",
  "BLE_PERIPHERAL": "BLE Peripheral",
  "BLE_PERIPHERAL_INIT": "Init BLE Peripheral %1 name %2",
  "BLE_PERIPHERAL_SEND_DATA": "BLE send %1 data %2",
  "BLE_PERIPHERAL_CONNECTED": "BLE check connection ?",
  "BLE_PERIPHERAL_RECV_CB": "BLE recv callback %1 %2",
  "BLE_PERIPHERAL_DISCONNECT": "BLE disconnect device",
  "BLE_CENTRAL": "BLE Central",
  "BLE_CENTRAL_SEND_DATA": "BLE send %1 data %2",
  "BLE_CENTRAL_CONNECT": "BLE connect device",
  "BLE_CENTRAL_DISCONNECT": "BLE disconnect device",
  "BLE_CENTRAL_SCAN_CB": "BLE get scan result %1 %2",
  "BLE_CENTRAL_SCAN_DURATION": "BLE start scan device %1 duration %2 ms",
  "BLE_CENTRAL_RECV_CB": "BLE recv callback %1 %2",
  "BLE_CENTRAL_CHECK_CONNECTION": "BLE check connection ?",
  "BLE": "BLE",
  "ATOM_POE": "PoE",
  "ATOM_POE_INIT": "Init LAN %1 remote IP %2 port %3 socket type %4 %5 machine type %6",
  "ATOM_POE_TCP_SEND_PACKET": "TCP send %1 packet %2",
  "ATOM_POE_TCP_RECEIVE_PACKET": "TCP receive packet %1 size %2",
  "ATOM_POE_UDP_SEND_PACKET": "UDP send packet %1 IP %2 port %3 payload %4",
  "ATOM_POE_UDP_RECEIVE_PACKET": "UDP receive packet %1 size %2",
  "ATOM_POE_AVAILABLE_PACKET": "Available packet %1",
  "ATOM_POE_LOCAL_IP": "Local IP address",
  "ATOM_POE_REMOTE_IP": "Remote IP address",
  "ATOM_POE_GET_IF_CONFIG": "Get if config",
  "ATOM_POE_SOCKET_CLOSE": "Socket closed",
  "ATOM_POE_HTTP_GET": "HTTP(S) GET %1 url %2 %3",
  "ATOM_POE_HTTP_POST": "HTTP(S) POST %1 url %2 type %3 data %4",
  "ATOM_POE_MQTT_INIT": "Init MQTT server %1 port %2 client id %3 username %4 password %5 keepalive %6",
  "ATOM_POE_MQTT_DISCONNECT": "MQTT disconnect server",
  "ATOM_POE_MQTT_CONNECT": "MQTT connect server",
  "ATOM_POE_MQTT_CHECK_CONNECTION": "MQTT check connect server",
  "ATOM_POE_MQTT_SUB": "MQTT subscribe %1 topic %2 QoS %3",
  "ATOM_POE_MQTT_SUB_CB": "MQTT subscribe callback %1 topic %2 msg %3",
  "ATOM_POE_MQTT_PUBLISH": "MQTT publish topic %1 payload %2 QoS %3",
  "ATOM_POE_MQTT_POLL": "MQTT poll downlink message",
  "ATOM_POE_EZDATA_REMOVE": "Remove %1 topic %2 with %3 token %4",
  "ROBOCAR_DISTANCE_SENSOR": "Get one wire ultrasonic target distance %1 CM sensor pin %2 (return float)",
  "ROBOCAR_SET_LED": "Set one wire ultrasonic RGB num %1 (1 ~ 3) color R %2 G %3 B %4 (0 ~ 255)",
  "ZIGBEE": "Zigbee",
  "ZIGBEE_INIT": "Init zigbee module %1 Tx %2 Rx %3",
  "ZIGBEE_GET_VERSION": "Get module version",
  "ZIGBEE_GET_PARAM": "Get module %1 param %2",
  "ZIGBEE_RECV_PAYLOAD": "Receive payload",
  "ZIGBEE_CHECK_PAYLOAD": "Check payload length ?",
  "ZIGBEE_SET_REBOOT": "Set module reboot",
  "ZIGBEE_SET_MODULE": "Set module parameter %1 ROLE %2 %3 PAN ID %4 CHANNEL %5 MODE %6 %7 USER ADDRESS %8 BAUDRATE %9 %10 ANTENNA %11 %12 ENCRYPT PASSWORD %13",
  "ZIGBEE_SEND_PAYLOAD": "Send payload %1",
  "ZIGBEE_SET_CORE_BAUDRATE": "Set core baudrate %1",
  "UNIT_ZIGBEE": "Zigbee",
  "UNIT_ZIGBEE_GET_VERSION": "%1 Get module version",
  "UNIT_ZIGBEE_GET_PARAM": "%1 Get module %2 param %3",
  "UNIT_ZIGBEE_RECV_PAYLOAD": "%1 Receive payload",
  "UNIT_ZIGBEE_CHECK_PAYLOAD": "%1 Check payload length ?",
  "UNIT_ZIGBEE_SET_REBOOT": "%1 Set module reboot",
  "UNIT_ZIGBEE_SET_MODULE": "%1 Set module parameter %2 ROLE %3 %4 PAN ID %5 CHANNEL %6 MODE %7 %8 USER ADDRESS %9 BAUDRATE %10 %11 ANTENNA %12 %13 ENCRYPT PASSWORD %14",
  "UNIT_ZIGBEE_SEND_PAYLOAD": "%1 Send payload %2",
  "UNIT_ZIGBEE_SET_CORE_BAUDRATE": "%1 Set core baudrate %2",
  "UNIT_SCALES": "Scales",
  "UNIT_SCALES_GET_BUTTON": "%1 Get %2 button %3",
  "UNIT_SCALES_GET_SCALE": "%1 Get  %2 scale %3 value",
  "UNIT_SCALES_GET_LED": "%1 Get %2 LED %3 status",
  "UNIT_SCALES_GET_STATUS": "%1 Get device %2 status %3",
  "UNIT_SCALES_SET_RGB": "%1 Set RGB color %2 R %3 G %4 B %5",
  "UNIT_SCALES_SET_ADC": "%1 Set offset ADC %2 value %3",
  "UNIT_SCALES_SET_ADC_OFFSET": "%1 Set offset current ADC value",
  "UNIT_SCALES_SET_BUTTON_OFFSET": "%1 Set button  %2 offset %3",
  "UNIT_SCALES_SET_RGB_SYNC": "%1 Set RGB LED %2 sync %3",
  "UNIT_SCALES_SET_ZERO": "%1 Set zero gram calibration",
  "UNIT_SCALES_SET_CALIBRATION": "%1 Set load %2 gram calibration",
  "UNIT_SCALES_SET_I2C": "%1 Set %2 I2C address %3",
  "UNIT_SCALES_INIT_I2C": "%1 Init %2 I2C address %3",
  "UNIT_THERMAL2": "Thermal2",
  "UNIT_THERMAL2_GET_BUTTON_STATUS": "%1 Get button %2 status %3",
  "UNIT_THERMAL2_GET_TEMP_ALARM_STATUS": "%1 Get temperature alarm status",
  "UNIT_THERMAL2_GET_DEVICE_INFO": "%1 Get device %2 info %3",
  "UNIT_THERMAL2_GET_I2C_ADDRESS": "%1 Get I2C %2 address %3",
  "UNIT_THERMAL2_GET_FUNC_CTRL": "%1 Get function control",
  "UNIT_THERMAL2_GET_REFRESH_RATE": "%1 Get refresh rate",
  "UNIT_THERMAL2_GET_NOISE_FILTER": "%1 Get noise filter",
  "UNIT_THERMAL2_GET_TEMP_MONITOR": "%1 Get temperature monitor %2 size",
  "UNIT_THERMAL2_GET_BUZZER_FREQ": "%1 Get buzzer frequency",
  "UNIT_THERMAL2_GET_BUZZER_DUTY": "%1 Get buzzer duty cycle",
  "UNIT_THERMAL2_GET_TEMP_THRESHOLD": "%1 Get %2 temperature threshold",
  "UNIT_THERMAL2_GET_ALARM_BUZZER_FREQ": "%1 Get %2 temperature buzzer frequency",
  "UNIT_THERMAL2_GET_ALARM_BUZZER_INTERVAL": "%1 Get %2 temperature buzzer interval",
  "UNIT_THERMAL2_GET_TEMP_ALARM_LED": "%1 Get %2 temperature LED RGB colors",
  "UNIT_THERMAL2_GET_DATA_REFRESH_CTRL": "%1 Get Data refresh control",
  "UNIT_THERMAL2_GET_SUBPAGE_INFO": "%1 Get subpage information",
  "UNIT_THERMAL2_GET_TEMP_MEASURE": "%1 Get %2 temperature %3 value",
  "UNIT_THERMAL2_GET_TEMP_DIFFERENTIAL": "%1 Get %2 %3 position %4",
  "UNIT_THERMAL2_GET_TEMP_DATA_BUFFER": "%1 Get temperature data buffer",
  "UNIT_THERMAL2_SET_FUNC_CTRL": "%1 Set %2 %3 control %4",
  "UNIT_THERMAL2_SET_REFRESH_RATE": "%1 Set  %2 refresh rate %3 hz",
  "UNIT_THERMAL2_SET_NOISE_FILTER": "%1 Set %2 noise filter %3",
  "UNIT_THERMAL2_SET_TEMP_MONITOR": "%1 Set temperature monitor size %2 width %3 height %4",
  "UNIT_THERMAL2_SET_TEMP_ALARM_CTRL": "%1 Set temperature %2 alarm %3 control %4",
  "UNIT_THERMAL2_SET_BUZZER_FREQ": "%1 Set buzzer %2 frequency %3",
  "UNIT_THERMAL2_SET_BUZZER_DUTY": "%1 Set buzzer %2 duty cycle %3",
  "UNIT_THERMAL2_SET_LED_COLOR": "%1 Set LED color %2 R %3 G %4 B %5",
  "UNIT_THERMAL2_SET_TEMP_THRESHOLD": "%1 Set %2 temperature threshold %3 value %4 °C",
  "UNIT_THERMAL2_SET_TEMP_FREQ": "%1 Set %2 temperature buzzer %3 frequency %4",
  "UNIT_THERMAL2_SET_TEMP_ALARM_INTERVAL": "%1 Set %2 temperature buzzer %3 interval %4",
  "UNIT_THERMAL2_SET_TEMP_ALARM_LED": "%1 Set %2 temperature LED color %3 R %4 G %5 B %6",
  "MODULE_RELAY2": "2Relay",
  "MODULE_RELAY2_INIT": "Init module I2C %1 address %2",
  "MODULE_RELAY2_GET_STATUS": "Get %1 relay %2 status",
  "MODULE_RELAY2_GET_INFO": "Get module %1 info %2",
  "MODULE_RELAY2_SET_STATE": "Set %1 relay %2 state %3",
  "MODULE_RELAY2_SET_ADDRESS": "Set module I2C %1 address %2",
  "M5ESPNOW_GET_REMOTE_MAC1": "EspNow get remote %1 remote %2 ssid %3",
  "M5ESPNOW_INIT_CHANNEL": "EspNow init set %1 channel %2 (0 ~ 13) data type %3",
  "M5ESPNOW_SET_AP_MODE1": "EspNow set AP mode %1 ssid %2 password %3",
  "BASE_SPK": "SPK",
  "BASE_SPK_PLAY_WAV_FILE": "Play %1 WAV %2 file %3 volume %4",
  "BASE_SPK_PLAY_WAV_DROPDOWN": "Play local WAV %1 file %2 volume %3",
  "BASE_SPK_PLAY_WAV_RATE": "Play local WAV %1 file %2 samplerate %3 data format %4 channel %5 volume %6",
  "BASE_SPK_PLAY_CLOUD_WAV": "Play cloud WAV %1 file(URL) %2 volume %3",
  "BASE_SPK_PLAY_SING": "Play %1 tone %2 for %3 beat volume %4",
  "CATM_GPRS_SERVICE": "GPRS service %1",
  "CATM_SHOW_PDP_ADDRESS": "Show PDP address",
  "UNIT_CATM_GPRS_SERVICE": "%1 GPRS service %2",
  "UNIT_CATM_SHOW_PDP_ADDRESS": "%1 Show PDP address",
  "SDCARD_INIT": "Init sdcard clock frequency %1",
  "UNIT_NCIR2": "NCIR2",
  "UNIT_NCIR2_INIT": "%1 Init I2C %2 address %3",
  "UNIT_NCIR2_GET_TEMPERATURE": "%1 Get object temperature °C value",
  "UNIT_NCIR2_GET_EMISSIVITY": "%1 Get emissivity value",
  "UNIT_NCIR2_GET_TEMP_THRESHOLD": "%1 Get %2 temperature threshold value",
  "UNIT_NCIR2_GET_TEMP_LED_COLOR": "%1 Get %2 temperature LED RGB colors",
  "UNIT_NCIR2_GET_TEMP_BUZZER_FREQ": "%1 Get %2 temperature buzzer frequency",
  "UNIT_NCIR2_GET_TEMP_BUZZER_INTERVAL": "%1 Get %2 temperature buzzer interval",
  "UNIT_NCIR2_GET_TEMP_BUZZER_DUTY": "%1 Get %2 temperature buzzer duty cycle",
  "UNIT_NCIR2_GET_BUZZER_FREQ": "%1 Get buzzer frequency",
  "UNIT_NCIR2_GET_BUZZER_DUTY": "%1 Get buzzer duty cycle",
  "UNIT_NCIR2_GET_BUZZER_CONTROL": "%1 Get buzzer control status",
  "UNIT_NCIR2_GET_RGB_LED": "%1 Get RGB LED color",
  "UNIT_NCIR2_GET_BUTTON_STATUS": "%1 Get button status",
  "UNIT_NCIR2_GET_DEVICE_TEMP": "%1 Get device temperature °C value",
  "UNIT_NCIR2_GET_DEVICE_STATUS": "%1 Get device %2 status %3",
  "UNIT_NCIR2_SET_EMISSIVITY": "%1 Set emissivity %2 value %3",
  "UNIT_NCIR2_SET_TEMP_THRESHOLD": "%1 Set %2 temperature threshold %3 value %4",
  "UNIT_NCIR2_SET_TEMP_LED_COLOR": "%1 Set %2 temperature LED RGB color %3 R %4 G %5 B %6",
  "UNIT_NCIR2_SET_TEMP_BUZZER_FREQ": "%1 Set %2 temperature buzzer %3 frequency %4",
  "UNIT_NCIR2_SET_TEMP_BUZZER_INTERVAL": "%1 Set %2 temperature buzzer %3 interval %4",
  "UNIT_NCIR2_SET_TEMP_BUZZER_DUTY": "%1 Set %2 temperature buzzer %3 duty cycle %4",
  "UNIT_NCIR2_SET_BUZZER_FREQ": "%1 Set buzzer %2 frequency %3",
  "UNIT_NCIR2_SET_BUZZER_DUTY": "%1 Set buzzer %2 duty cycle %3",
  "UNIT_NCIR2_SET_CONTROL": "%1 Set buzzer control %2 state %3",
  "UNIT_NCIR2_SET_RGB_LED": "%1 Set RGB LED color %2 R %3 G %4 B %5",
  "UNIT_NCIR2_SAVE_SETTING": "%1 Save current configure settings",
  "UNIT_NCIR2_SET_I2C_ADDRESS": "%1 Set device I2C %2 address %3",
  "UNIT_FLASHLIGHT": "FlashLight",
  "UNIT_FLASHLIGHT_CONTROL": "%1 Set flash %2 control %3 turn off %4 delay %5  seconds",
  "BASE_SPK_PLAY_TONE": "Play tone %1 frequency %2 beat %3 volume %4",
  "CATM_INIT_MODEM": "Power on & Init module",
  "CATM_POWER_SAVE_MODE": "Enable power save mode %1 Periodic-TAU unit : base %2 %3 Periodic-TAU duration %4 %5 Active Time unit : base %6 %7 Active Time duration %8",
  "CATM_DISABLE_POWER_SAVE_MODE": "Disable power save mode",
  "UNIT_CATM_INIT_MODULE": "%1 Init module",
  "ROBOCAR_GET_MULTI_LINE_SENSOR": "Get multi-channel line follower sensor %1 (return int)",
  "ROBOCAR_SET_MULTI_LED": "Set multi-channel line follower sensor LED %1",
  "TOIO_TOF_GET_DISTANCE": "Get tof value",
  "MODULE_COMMU": "COMMU",
  "MODULE_COMMU_CAN_INIT": "CAN init %1 mode %2 speed %3",
  "MODULE_COMMU_CAN_SET_MODE": "CAN set %1 mode %2",
  "MODULE_COMMU_CAN_RESET": "CAN module reset",
  "MODULE_COMMU_CAN_CONFIG_RATE": "CAN config rate %1 speed %2",
  "MODULE_COMMU_CAN_AVAILABLE_MSG": "CAN available message ?",
  "MODULE_COMMU_CAN_READ_MSG": "CAN read message %1 type %2",
  "MODULE_COMMU_CAN_REMOTE_ID": "CAN remote can ID",
  "MODULE_COMMU_CAN_SEND_MSG": "CAN send message %1 ID %2 data %3",
  "MODULE_COMMU_CAN_DEBUG": "CAN print debug %1",
  "MODULE_COMMU_CAN_INTERRUPT_OCCUR": "CAN INT pin interrupt occur ?",
  "MODULE_COMMU_CAN_CLEAR_INTERRUPT": "CAN clear interrupts flag",
  "MODULE_COMMU_UART_INIT": "%1 Init uart num %2 %3 Tx pin %4 Rx pin %5 Baud rate %6 %7 Bits %8 %9 Parity %10 %11 Stop bit %12",
  "MODULE_COMMU_I2C_INIT": "I2C init %1 sda %2 scl %3 addr %4 freq %5",
  "MODULE_COMMU_UART_READ": "%1 Read all",
  "MODULE_COMMU_UART_READ_CHARACTERS": "%1 Read %2 bytes",
  "MODULE_COMMU_UART_READLINE": "%1 Read line",
  "MODULE_COMMU_UART_ANY": "%1 Remain cache",
  "MODULE_COMMU_UART_WRITE": "%1 Write %2",
  "MODULE_COMMU_UART_WRITE_LINE": "%1 Write a %2 line %3",
  "MODULE_COMMU_UART_WRITE_RAW_DATA": "%1 Write %2 raw data %3",
  "MODULE_COMMU_I2C_AVAILABLE": "Available I2C address in list",
  "MODULE_COMMU_I2C_SCAN": "Scan I2C device",
  "MODULE_COMMU_I2C_READ_REQ": "Read %1 reg %2 one byte",
  "MODULE_COMMU_I2C_READ_RES": "Read %1 reg %2 one short with %3 decode %4",
  "MODULE_COMMU_I2C_READ_REG": "Read %1 reg %2 %3 read %4 byte",
  "MODULE_COMMU_I2C_READ_MEM_DATA": "Read %1 reg %2 num %3 type %4",
  "MODULE_COMMU_I2C_READ_DATA": "Read data %1 num %2 type %3",
  "MODULE_COMMU_I2C_GET_DATA_IN_LIST": "In %1 data %2 get %3 index %4",
  "MODULE_COMMU_I2C_WRITE_BYTE": "Write %1 reg %2 one byte %3",
  "MODULE_COMMU_I2C_WRITE_BIG": "Write %1 reg %2 one short %3 %4 with encode %5",
  "MODULE_COMMU_I2C_WRITE_MEM_DATA": "Write %1 reg %2 data %3 type %4",
  "MODULE_COMMU_I2C_WRITE_DATA": "Write %1 data %2 type %3",
  "MODULE_COMMU_I2C_WRITE_MEM_LIST": "Write list %1 reg %2 byte %3",
  "IMAGE_SET_IMAGE_SDCARD": "Set %1 sdcard image %2",
  "IMAGE_SET_IMAGE_SDCARD_CORE2": "Set %1 sdcard image ( png ) %2",
  "UNIT_ANGLE8_INIT": "%1 Init I2C %2 address %3",
  "UNIT_ENCODER8": "8ENCODER",
  "UNIT_ENCODER8_INIT": "%1 Init I2C %2 address %3",
  "UNIT_ENCODER8_GET_COUNTER_VALUE": "%1 Get counter value %2 channel %3",
  "UNIT_ENCODER8_GET_INCREMENT_VALUE": "%1 Get increment value %2 channel %3",
  "UNIT_ENCODER8_GET_BUTTON_STATUS": "%1 Get button status %2 channel %3",
  "UNIT_ENCODER8_GET_SWITCH_STATUS": "%1 Get switch status",
  "UNIT_ENCODER8_GET_DEVICE_STATUS": "%1 Get device %2 status %3",
  "UNIT_ENCODER8_SET_COUNTER_VALUE": "%1 Set counter %2 value %3 channel %4",
  "UNIT_ENCODER8_RESET_COUNTER_VALUE": "%1 Reset counter value %2 channel %3",
  "UNIT_ENCODER8_SET_LED_RGB": "%1 Set RGB LED %2 channel %3 R %4 G %5 B %6",
  "UNIT_ENCODER8_SET_LED_RGB_FROM": "%1 Set RGB LED %2 channel from %3 to %4 R %5 G %6 B %7",
  "UNIT_ENCODER8_SET_I2C_ADDRESS": "%1 Set device I2C %2 address %3",
  "UNIT_BPSQMP": "BPS V1.1",
  "UNIT_BPSQMP_GET_TEMPERATURE": "%1 Get temperature value (°C)",
  "UNIT_BPSQMP_GET_PRESSURE": "%1 Get pressure value (Pa)",
  "RS485": "RS485",
  "RS485_PIN": "RS485 Set tx %1 rx %2 %3 baud %4 use UART %5",
  "RS485_READ": "RS485 Read all",
  "RS485_READ_CHARACTERS": "RS485 Read %1 character",
  "RS485_READLINE": "RS485 Read line",
  "RS485_READANY": "RS485 Remain cache",
  "RS485_WRITE": "RS485 Write %1",
  "RS485_WRITE_LINE": "RS485 Write line %1",
  "RS485_WRITE_RAW_DATA": "RS485 Write raw data %1",
  "RS485_PIN2_OFF": "Receive enable",
  "RS485_PIN2_ON": "Transmit enable",
  "UNIT_CO2L": "Co2L",
  "UNIT_CO2L_GET_VALUE": "%1 Get %2 value %3",
  "UNIT_CO2L_POWER_DOWN": "%1 Set sensor sleep mode",
  "UNIT_CO2L_GET_DATA_READY_STATUS": "%1 Get data ready status",
  "UNIT_CO2L_GET_SENSOR_MEASUREMENT": "%1 Wait for update sensor measurement",
  "HAT_HEARTRATE": "Heart Rate",
  "HAT_HEARTRATE_GET_HEARTRATE": "%1 Get heart rate",
  "HAT_HEARTRATE_GET_SPO2": "%1 Get SpO2",
  "HAT_HEARTRATE_SET_MODE": "%1 Set %2 mode %3",
  "HAT_HEARTRATE_SET_LED_CURRENT": "%1 Set LED current %2 REDLED %3 IRLED %4",
  "HAT_HEARTRATE_GET_IR": "%1 Get IR RAW ADC value",
  "HAT_HEARTRATE_GET_RED": "%1 Get RED RAW ADC value",
  "HAT_CBACKNBIOT_DESTROY_HTTPS": "Delete HTTP(S) service",
  "HAT_MINIENCODERC": "Mini EncoderC",
  "HAT_MINIENCODERC_INIT": "%1 Init I2C %2 address %3",
  "HAT_MINIENCODERC_GET_COUNTER_VALUE": "%1 Get counter value",
  "HAT_MINIENCODERC_GET_INCREMENT_VALUE": "%1 Get increment value",
  "HAT_MINIENCODERC_GET_BUTTON_STATUS": "%1 Get button status",
  "HAT_MINIENCODERC_GET_DEVICE_STATUS": "%1 Get device %2 status %3",
  "HAT_MINIENCODERC_SET_COUNTER_VALUE": "%1 Set counter %2 value %3",
  "HAT_MINIENCODERC_RESET_COUNTER_VALUE": "%1 Reset counter value",
  "HAT_MINIENCODERC_SET_LED_RGB": "%1 Set RGB LED %2 R %3 G %4 B %5",
  "HAT_MINIENCODERC_SET_I2C_ADDRESS": "%1 Set device I2C %2 address %3",
  "HAT_CBACKNBIOT_HTTP_SERVICES": "HTTP(S) services %1 method %2 %3 url %4 path %5 content type %6 %7 payload %8",
  "HAT_MINIJOYC": "Mini JoyC",
  "HAT_MINIJOYC_INIT": "%1 Init I2C %2 address %3",
  "HAT_MINIJOYC_GET_RAW_VALUE": "%1 Get ADC RAW value %2 direction %3",
  "HAT_MINIJOYC_GET_10BIT_VALUE": "%1 Get 10bit value with offset %2 direction %3",
  "HAT_MINIJOYC_GET_8BIT_VALUE": "%1 Get 8bit value with offset %2 direction %3",
  "HAT_MINIJOYC_GET_BUTTON_STATUS": "%1 Get button status",
  "HAT_MINIJOYC_GET_DEVICE_STATUS": "%1 Get device %2 status %3",
  "HAT_MINIJOYC_GET_OFFSET_VALUE": "%1 Get calibration offset %2 value",
  "HAT_MINIJOYC_SET_LED_RGB": "%1 Set RGB LED %2 R %3 G %4 B %5",
  "HAT_MINIJOYC_SET_OFFSET_VALUE": "%1 Set calibration %2 offset %3 value %4",
  "HAT_MINIJOYC_SET_I2C_ADDRESS": "%1 Set device I2C %2 address %3",
  "UNIT_ACSSR": "ACSSR",
  "UNIT_ACSSR_SELECT_MODE": "%1 Set control %2 mode %3",
  "UNIT_ACSSR_INIT_I2C_ADDRESS": "%1 Init I2C %2 address %3",
  "UNIT_ACSSR_GET_I2C_SSR_STATUS": "%1 Get I2C SSR status",
  "UNIT_ACSSR_GET_I2C_LED": "%1 Get I2C RGB LED value",
  "UNIT_ACSSR_GET_I2C_STATUS": "%1 Get I2C status %2",
  "UNIT_ACSSR_SET_I2C_SSR_STATE": "%1 Set I2C SSR state %2",
  "UNIT_ACSSR_SET_I2C_RGB_LED": "%1 Set I2C RGB LED color %2 R %3 G %4 B %5",
  "UNIT_ACSSR_SET_I2C_ADDRESS": "%1 Set I2C %2 address %3",
  "UNIT_ACSSR_INIT_MODBUS": "%1 Init modbus %2 slave address %3 UART id %4 baudrate %5 data bits %6 stop bits %7 parity %8",
  "UNIT_ACSSR_GET_MODBUS_SSR_STATUS": "%1 Get modbus SSR status",
  "UNIT_ACSSR_GET_MODBUS_LED": "%1 Get modbus RGB LED value",
  "UNIT_ACSSR_GET_MODBUS_STATUS": "%1 Get modbus status %2",
  "UNIT_ACSSR_SET_MODBUS_SSR_STATE": "%1 Set modbus SSR state %2",
  "UNIT_ACSSR_SET_MODBUS_RGB_LED": "%1 Set modbus RGB LED color %2 R %3 G %4 B %5",
  "UNIT_ACSSR_SET_MODBUS_ADDRESS": "%1 Set modbus %2 address %3",
  "PM25_SHT30_GET_TEMPERATURE": "PM2.5 (SHT30) %1 get temperature value (℃, return float)",
  "PM25_SHT30_GET_HUMIDITY": "PM2.5 (SHT30) %1 get humidity value (%RH, return float)",
  "BASE_SOCKET_KIT": "Atom Socket",
  "ATOM_SOCKET_KIT_REMOTE_CONTROL": "Set remote control mode %1",
  "ATOM_SOCKET_KIT_WAIT_UPDATE_DATA": "Wait for updated data",
  "ATOM_SOCKET_KIT_LOAD_VOLTAGE": "Get load voltage",
  "ATOM_SOCKET_KIT_LOAD_CURRENT": "Get load current",
  "ATOM_SOCKET_KIT_LOAD_ACTIVE_POWER": "Get load active power",
  "ATOM_SOCKET_KIT_RELAY_STATUS": "Get relay status",
  "ATOM_SOCKET_KIT_SET_RELAY_STATE": "Set relay state %1",
  "ATOM_SOCKET_KIT_SERVER_LOOP": "AP mode web server polling loop",
  "ATOM_SOCKET_KIT_GET_PUBLISH_TOPIC": "Get publish topic",
  "ATOM_SOCKET_KIT_GET_SUBSCRIBE_TOPIC": "Get subscribe topic %1",
  "STAMPS": "Stamps",
  "STAMP_IO": "IO",
  "STAMP_TIMERPOWER": "TimerPower",
  "STAMP_TIMERPOWER_INIT": "%1 Init timerpower %2 SDA %3 %4 SCL %5 %6 HOLD %7 %8 Wakeup %9 %10 3V3 enable %11 %12",
  "STAMP_TIMERPOWER_HOLD": "%1 Set hold %2 state %3",
  "STAMP_TIMERPOWER_WAKEUP": "%1 Set wakeup timer %2 value %3 mode %4",
  "STAMP_TIMERPOWER_WAKEUP_CTRL": "%1 Set wakeup %2 output %3",
  "STAMP_TIMERPOWER_IRQ": "%1 Disable timer IRQ output",
  "STAMP_TIMERPOWER_POWER_CONTROL": "%1 Set 3V3 power control %2 output %3",
  "STAMP_TIMERPOWER_SET_DATE_TIME": "%1 Set RTC %2 year %3 month %4 date %5 weekday %6 hour %7 minute %8 second %9",
  "STAMP_TIMERPOWER_GET_DATE_TIME": "%1 Get RTC %2",
  "STAMP_TIMERPOWER_SET_ALARM": "%1 Set alarm %2 date %3 hours %4 minutes %5",
  "STAMP_TIMERPOWER_CHECK_ALARM_FLAG": "%1 Check alarm flag",
  "STAMP_TIMERPOWER_CLEAR_ALARM": "%1 Turn off alarm",
  "STAMP_TIMERPOWER_DISABLE_ALARM": "%1 Disable alarm",
  "STAMP_TIMERPOWER_SET_TIMER_MODE": "%1 Set timer %2 value %3 mode %4",
  "STAMP_TIMERPOWER_GET_TIMER_VALUE": "%1 Get timer value",
  "STAMP_TIMERPOWER_CHECK_TIMER_FLAG": "%1 Check timer flag",
  "STAMP_TIMERPOWER_DISABLE_TIMER": "%1 Disable timer",
  "STAMP_TIMERPOWER_PAUSE_TIMER": "%1 Pause timer",
  "STAMP_TIMERPOWER_RESUME_TIMER": "%1 Resume timer",
  "STAMP_TIMERPOWER_CLEAR_TIMER_FLAG": "%1 Turn off timer",
  "RGB_SET_COLOR_FROM_RGB_INPUT": "Set %1 from %2 to %3 color %4",
  "FINGER_UART_INIT": "%1 Set core uart ID num %2",
  "PBHUB_PWM_WRITE": "%1 PWM write CH %2 IO %3 Duty Cycle %4 %",
  "PBHUB_PWM_READ": "%1 PWM read CH %2 IO %3",
  "STEPMOTOR_DRIVER_INIT": "Init device I2C address %1",
  "STEPMOTOR_DRIVER_READ_FAULT_STATUS": "Read fault status motor %1",
  "STEPMOTOR_DRIVER_DRIVER_RESET": "Reset motor %1 state %2",
  "STEPMOTOR_DRIVER_STATUS": "Read device status %1",
  "STEPMOTOR_DRIVER_SET_I2C": "Set device I2C address %1",
  "STEPMOTOR_DRIVER_SET_STEP_PULSE2": "Set step pulse freq %1 motor %2",
  "STEPMOTOR_DRIVER_MODBUS_INIT": "Init Tx %1 Rx %2 bandrate %3 mode %4 slave addr %5",
  "HAT_VIBRATOR": "Vibrator",
  "HAT_VIBRATOR_SET_FREQ": "%1 Set vibrator %2 frequency %3 hz",
  "HAT_VIBRATOR_SET_DUTY": "%1 Set vibrator %2 duty cycle %3 %",
  "HAT_VIBRATOR_TURN_OFF": "%1 Turn off vibrator",
  "TIMER_HARDWARE_TIMER_INIT": "Hardware Timer3 period %1 ms mode %2",
  "TIMER_TIMER3_CALLBACK": "Timer3 callback",
  "STAMP_IO_GET_CONFIG_MODE": "%1 Get config mode %2 pin %3",
  "STAMP_IO_SET_CONFIG_MODE": "%1 Set config mode %2 pin %3 mode %4",
  "STAMP_IO_READ_DIGITAL_INPUT_PIN": "%1 Get digital input %2 pin %3",
  "STAMP_IO_WRITE_DIGITAL_OUTPUT_PIN": "%1 Set digital output %2 pin %3 level %4",
  "STAMP_IO_WRITE_DIGITAL_OUTPUT_PIN2": "%1 Set digital output %2 pin %3 level %4",
  "STAMP_IO_WRITE_SERVO_ANGLE": "%1 Set servo %2 pin %3 angle %4",
  "STAMP_IO_READ_ADC8_PIN": "%1 Get ADC 8bit %2 pin %3",
  "STAMP_IO_READ_ADC12_PIN": "%1 Get ADC 12bit %2 pin %3",
  "STAMP_IO_READ_SERVO_ANGLE_PIN": "%1 Get servo angle %2 pin %3",
  "STAMP_IO_WRITE_SERVO_PULSE": "%1 Set servo %2 pin %3 pulse %4",
  "STAMP_IO_READ_SERVO_PULSE_PIN": "%1 Get servo pulse %2 pin %3",
  "STAMP_IO_WRITE_RGB_LED_PIN": "%1 Set RGB LED %2 pin %3 R %4 G %5 B %6",
  "STAMP_IO_READ_RGB_LED_PIN": "%1 Get RGB LED %2 pin %3",
  "STAMP_IO_READ_STATUS": "%1 Get %2 status %3",
  "STAMP_IO_SET_I2C_ADDRESS": "%1 Set I2C %2 address %3",
  "STAMP_IO_INIT_I2C_ADDRESS": "%1 Init I2C %2 address %3",
  "KMETER_INIT_I2C": "%1 Init device I2C %2 address %3",
  "KMETER_GET_FW_VERSION": "%1 Get device firmware version",
  "KMETER_GET_I2C_ADDRESS": "%1 Get device I2C slave address",
  "KMETER_GET_SLEEP_TIME": "%1 Get device sleep time ( S )",
  "KMETER_SET_I2C_ADDRESS": "%1 Set device I2C slave %2 address %3",
  "KMETER_SET_SLEEP_TIME": "%1 Set device sleep %2 time %3 ( S )",
  "KMETER_SET_WAKE_UP_MODE": "%1 Set device wake up %2 mode %3",
  "HAT_SPK2": "SPK2",
  "HAT_SPK2_PLAY_WAV_DROPDOWN": "%1 Play local WAV %2 file %3 volume %4",
  "HAT_SPK2_PLAY_WAV_RATE": "%1 Play local WAV %2 file %3 samplerate %4 data format %5 channel %6 volume %7",
  "HAT_SPK2_PLAY_CLOUD_WAV": "%1 Play cloud WAV %2 file(URL) %3 volume %4",
  "HAT_SPK2_PLAY_SING": "%1 Play %2 tone %3 for %4 beat volume %5",
  "HAT_SPK2_PLAY_TONE": "%1 Play tone %2 frequency %3 beat %4 volume %5",
  "UNIT_GLASS": "Glass",
  "UNIT_GLASS_DRAW_TEXT": "%1 Draw %2 text %3 x %4 y %5 fonsize %6 invert %7",
  "UNIT_GLASS_DRAW_PIXEL": "%1 Draw pixel %2 x %3 y %4 invert %5",
  "UNIT_GLASS_DRAW_LINE": "%1 Draw line %2 x1 %3 y1 %4 x2 %5 y2 %6 invert %7",
  "UNIT_GLASS_DRAW_CIRCLE": "%1 Draw circle %2 x %3 y %4 radius %5 invert %6",
  "UNIT_GLASS_DISP_INVERT": "%1 Display %2 show %3 flip %4",
  "UNIT_GLASS_DISP_CTRL": "%1 Display screen %2 control %3",
  "UNIT_GLASS_COLOUR_REVERSE": "%1 Display screen %2 colour %3",
  "UNIT_GLASS_DISP_SHOW": "%1 Screen show on",
  "UNIT_GLASS_DISP_CLEAR": "%1 Screen clear",
  "UNIT_GLASS_BUZZER_FREQ": "%1 Set buzzer %2 frequency %3 duty cycle %4",
  "UNIT_GLASS_BUZZER_CTRL": "%1 Buzzer %2 control %3",
  "UNIT_GLASS_GET_BUTTON_STATUS": "%1 Get %2 button %3 status",
  "UNIT_GLASS_GET_FW_VERSION": "%1 Get firmware version",
  "SPEAKER_SING_VOLUME": "%1 Play tone %2 for %3 beat volume %4",
  "SPEAKER_PLAY_WAV_FILE": "Play %1 WAV file %2 volume %3",
  "SPEAKER_PLAY_WAV_DROPDOWN": "Play local WAV file %1 volume %2",
  "SPEAKER_PLAY_TONE": "Play tone frequency %1 beat %2 volume %3",
  "UNIT_COLOR_SET_GAIN": "%1 Set gain value %2",
  "UNIT_COLOR_SET_INTEGRATION_TIME": "%1 Set integration time %2",
  "AMETER_SET_GAIN": "%1 Set max input current range %2 A",
  "VMETER_SET_GAIN2": "%1 Set max input voltage range %2 V",
  "STAMP_CATM": "CatM",
  "STAMP_CATM_UART_INIT": "%1 Init core uart Tx %2 Rx %3 baudrate %4 databits %5 stopbits %6 parity %7 port id %8",
  "UNIT_KMETERISO": "KMeterISO",
  "UNIT_KMETERISO_GET_THERMO_TEMP": "%1 Get thermocouple temperature %2",
  "UNIT_KMETERISO_GET_INTERNAL_TEMP": "%1 Get internal temperature %2",
  "UNTI_KMETERISO_GET_ISREADY": "%1 Is ready temperature measurement",
  "UNIT_KMETERISO_GET_STR_THERMO_TEMP": "%1 Get string thermocouple temperature %2",
  "UNIT_KMETERISO_GET_STR_INTERNAL_TEMP": "%1 Get string internal temperature %2",
  "UNIT_RF433T": "RF433T",
  "UNIT_RF433T_TRANSMIT": "%1 Transmit raw data list %2 repeat %3",
  "UNIT_RF433R": "RF433R",
  "UNIT_RF433R_START_RECEIVE": "%1 Start receiver",
  "UNIT_RF433R_STOP_RECEIVE": "%1 Stop receiver",
  "UNIT_RF433R_BUFFER_LENGTH": "%1 Length of receiver buffer",
  "UNIT_RF433R_RECEIVER_DATA_BUFFER": "%1 Receiver data buffer",
  "UNIT_RF433R_CLEAR_BUFFER": "%1 Clear data buffer",
  "MODULE_DUALKMETER": "DualKMeter",
  "MODULE_DUALKMETER_INIT_I2C": "Init device I2C %1 address %2",
  "MODULE_DUALKMETER_GET_FW_VERSION": "Get device firmware version",
  "MODULE_DUALKMETER_GET_I2C_ADDRESS": "Get device I2C slave address",
  "MODULE_DUALKMETER_SET_I2C_ADDRESS": "Set device I2C slave %1 address %2",
  "MODULE_DUALKMETER_GET_THERMO_TEMP": "Get thermocouple temperature %1",
  "MODULE_DUALKMETER_GET_INTERNAL_TEMP": "Get internal temperature %1",
  "MODULE_DUALKMETER_GET_ISREADY": "Is ready temperature measurement",
  "MODULE_DUALKMETER_GET_STR_THERMO_TEMP": "Get string thermocouple temperature %1",
  "MODULE_DUALKMETER_GET_STR_INTERNAL_TEMP": "Get string internal temperature %1",
  "MODULE_DUALKMETER_SET_CHANNEL": "Set kmeter %1 channel %2",
  "MODULE_DUALKMETER_GET_CHANNEL": "Get selected kmeter channel",
  "HAT_ADC_RAW_VALUE": "%1 Read raw value",
  "MODULE_DMX": "DMX",
  "MODULE_DMX_INIT": "DMX init %1 Tx %2 Rx %3 En %4 mode %5",
  "MODULE_DMX_WRITE_DATA": "DMX write byte %1 channel %2 data %3",
  "MODULE_DMX_CLEAR_BUFFER": "DMX clear data buffer",
  "MODULE_DMX_DEINIT": "DMX deinit",
  "MODULE_DMX_READ_DATA": "DMX read byte %1 channel %2",
  "FADER_MULTI_SET_COLOR": "%1 %2 Set index %3 %4 RGB color  %5",
  "FADER_MULTI_SET_COLOR_FROM": "%1 %2 Set from %3 to %4  %5 RGB color %6",
  "FADER_MULTI_SET_COLOR_ALL": "%1 %2 Set %3 all RGB color %4",
  "FADER_MULTI_SET_COLOR_FROM_RGB": "%1 %2 Set from %3 to %4 R %5 G %6 B %7",
  "WLAN_CONFIG_AP": "Config to AP ssid %1 password %2 auth %3",
  "GPS_GET_DATE": "Get date (return string)",
  "UNIT_GPS_GET_DATE": "get %1 date",
  "MODULE_RS232": "RS232",
  "MODULE_RS232M": "RS232M",
  "MODULE_RS232F": "RS232F",
  "MODULE_HMI": "HMI",
  "MODULE_HMI_INIT": "Init I2C %1 address %2",
  "MODULE_HMI_GET_COUNTER": "Get counter value",
  "MODULE_HMI_GET_INCREMENT": "Get increment value",
  "MODULE_HMI_GET_BUTTON_STATUS": "Get button %1 status",
  "MODULE_HMI_GET_DEVICE_STATUS": "Get device FW version",
  "MODULE_HMI_SET_COUNTER": "Set counter %1 value %2",
  "MODULE_HMI_RESET_COUNTER": "Reset counter value",
  "MODULE_HMI_SET_LED": "Set %1 LED %2 state %3",
  "MODULE_HMI_SET_I2C_ADDRESS": "Set device I2C %1 address %2",
  "UNIT_HBRIDGE": "Hbridge",
  "UNIT_HBRIDGE_INIT": "%1 Init device I2C %2 address %3",
  "UNIT_HBRIDGE_GET_DRIVER_CONFIG": "%1 Get configure value %2",
  "UNIT_HBRIDGE_GET_ADC_VALUE": "%1 Get %2 value resolution %3",
  "UNIT_HBRIDGE_GET_DEVICE_STATUS": "%1 Get FW version",
  "UNIT_HBRIDGE_SET_DIRECTION": "%1 Set %2 direction %3",
  "UNIT_HBRIDGE_SET_8BIT_PWM": "%1 Set pwm duty cycle 8bit %2 value %3",
  "UNIT_HBRIDGE_SET_16BIT_PWM": "%1 Set pwm duty cycle 16bit %2 value %3",
  "UNIT_HBRIDGE_SET_PWM_FREQ": "%1 Set pwm %2 frequency %3",
  "MODULE_RS232_INIT": "%1 Init UART id %2 TX %3 RX %4 baudrate %5 data bits %6 stop bits %7 parity %8",
  "MODULE_RS232_READ": "%1 Read all bytes",
  "MODULE_RS232_READ_CHARACTERS": "%1 Read %2 characters",
  "MODULE_RS232_READLINE": "%1 Read bytes a line",
  "MODULE_RS232_READANY": "%1 Remain cache",
  "MODULE_RS232_RS485_WRITE": "%1 Write text %2",
  "MODULE_RS232_WRITE_LINE": "%1 Write text a line %2",
  "MODULE_RS232_WRITE_RAW_DATA": "%1 Write raw data list %2",
  "UNIT_CAN": "CAN",
  "UNIT_CAN_INIT": " %1 Init bus %2 extframe %3 mode %4 baudrate %5 TX %6 RX %7",
  "UNIT_CAN_SET_FILTER": " %1 Set filter bank %2 mode %3 message %4",
  "UNIT_CAN_SEND": "%1 Send message %2 with id %3",
  "UNIT_CAN_RECV": "%1 Receive message",
  "UNIT_CAN_GET_REMOTEID": "%1 Get remote ID",
  "UNIT_CAN_RESTART": "%1 Restart",
  "UNIT_CAN_CLEARFILTER": "%1 Clear filter",
  "UNIT_CAN_CLEAR_TX_QUEUE": "%1 Clear TX queue",
  "UNIT_CAN_CLEAR_RX_QUEUE": "%1 Clear RX queue",
  "UNIT_CAN_STATE": "%1 Get state of the controller",
  "UNIT_CAN_ANY": "%1 If any message waiting on the FIFO %2 (return True or False)",
  "UNIT_CAN_DEINIT": "%1 Deinit",
  "ATOM_CAN": "CAN",
  "ATOM_CAN_INIT": " Init bus %1 extframe %2 mode %3 baudrate %4 TX %5 RX %6",
  "ATOM_CAN_SET_FILTER": " Set filter bank %1 mode %2 message %3",
  "ATOM_CAN_SEND": "Send message %1 with id %2",
  "ATOM_CAN_RECV": "Receive message",
  "ATOM_CAN_GET_REMOTEID": "Get remote ID",
  "ATOM_CAN_RESTART": "Restart",
  "ATOM_CAN_CLEARFILTER": "Clear filter",
  "ATOM_CAN_CLEAR_TX_QUEUE": "Clear TX queue",
  "ATOM_CAN_CLEAR_RX_QUEUE": "Clear RX queue",
  "ATOM_CAN_STATE": "Get state of the controller",
  "ATOM_CAN_ANY": "If any message waiting on the FIFO",
  "ATOM_CAN_DEINIT": "Deinit",
  "UNIT_DCSSR": "DCSSR",
  "UNIT_DCSSR_GET_I2C_STATUS": "%1 Get I2C FW version",
  "UNIT_DCSSR_GET_MODBUS_STATUS": "%1 Get modbus FW version",
  "DISPLAY_MODULE_SCREEN_SET_BGCOLOR": "Display module Set Screen backgroundColor %1",
  "DISPLAY_MODULE_SCREEN_SET_BGCOLOR_RGB": "Display module Set Screen backgroundColor R %1 G %2 B %3",
  "DISPLAY_MODULE_SCREEN_SET_ROTATION": "Display module Set screen rotate mode %1",
  "LABELPLUS": "Label+",
  "LABELPLUS_SET_DATASOURCE_TEXT": "Set %1 data source url %2 timer %3 interval (ms) %4",
  "url": "Data Source",
  "update": "Auto-Update",
  "jsonKey": "JSON Key",
  "errorText": "Error Msg",
  "errorTextColor": "Error Msg Color",
  "LABELPLUS_SET_UPDATE": "Set %1 update enable %2",
  "LABELPLUS_SET_INTERNVAL": "Set %1 update interval %2",
  "LABELPLUS_IS_VALID_DATA": "Is %1 valid data",
  "LABELPLUS_GET_DISPLAY_DATA": "Get %1 display data",
  "MODBUS_MASTER_READ_COILS_TIMEOUT": "Read coils slave address %1 starting address %2 coil qty %3 timeout %4",
  "MODBUS_MASTER_READ_DISCRETE_INPUTS_TIMEOUT": "Read discrete inputs slave address %1 starting address %2 input qty %3 timeout %4",
  "MODBUS_MASTER_READ_HOLDING_REGISTERS_TIMEOUT": "Read holding registers slave address %1 starting address %2 register qty %3 signed %4 timeout %5",
  "MODBUS_MASTER_READ_INPUT_REGISTERS_TIMEOUT": "Read input registers slave address %1 starting address %2 register qty %3 signed %4 timeout %5",
  "MODBUS_MASTER_WRITE_SINGLE_COIL_TIMEOUT": "Write single coil slave address %1 output address %2 output %3 timeout %4",
  "MODBUS_MASTER_WRITE_SINGLE_REGISTER_TIMEOUT": "Write single register slave address %1 register address %2 register value %3 signed %4 timeout %5",
  "MODBUS_MASTER_WRITE_MULTIPLE_COILS_TIMEOUT": "Write multiple coils slave address %1 starting address %2 output value %3 timeout %4",
  "MODBUS_MASTER_WRITE_MULTIPLE_REGISTERS_TIMEOUT": "Write multiple register slave address %1 starting address %2 register value %3 signed %4 timeout %5",
  "UNIT_EXTENCODER": "ExtEncoder",
  "UNIT_EXTENCODER_INIT": "%1 Init device I2C address %2",
  "UNIT_EXTENCODER_GET_ENCODER_VALUE": "%1 Get encoder pulse count value",
  "UNIT_EXTENCODER_GET_METER_VALUE": "%1 Get meter pulse count value",
  "UNIT_EXTENCODER_GET_STR_METER_VALUE": "%1 Get string meter pulse count value",
  "UNIT_EXTENCODER_GET_PERIMETER_VALUE": "%1 Get perimeter value",
  "UNIT_EXTENCODER_GET_PULSE_VALUE": "%1 Get pulse per cycle value",
  "UNIT_EXTENCODER_GET_ZERO_COUNTER_VALUE": "%1 Get zero pulse count value",
  "UNIT_EXTENCODER_GET_Z_TRIGGER_MODE": "%1 Get Z trigger mode",
  "UNIT_EXTENCODER_GET_DEVICE_FIRMWARE": "%1 Get device firmware version",
  "UNIT_EXTENCODER_RESET_ENCODER": "%1 Reset encoder and meter count value",
  "UNIT_EXTENCODER_SET_PERIMETER_VALUE": "%1 Set perimeter value %2",
  "UNIT_EXTENCODER_SET_PULSE_VALUE": "%1 Set pulse per cycle value %2",
  "UNIT_EXTENCODER_SET_ZERO_COUNTER_VALUE": "%1 Set zero pulse pulse count value %2",
  "UNIT_EXTENCODER_SET_Z_TRIGGER_MODE": "%1 Set clear count Z trigger mode %2",
  "UNIT_EXTENCODER_SET_I2C_ADDRESS": "%1 Set device I2C slave address %2",
  "STAMP_IO_WRITE_PWM_DUTY": "%1 Set pwm %2 pin %3 duty cycle %4 %",
  "UNIT_AIN420MA": "AIN4-20mA",
  "UNIT_AIN420MA_INIT": "%1 Init device I2C address %2",
  "UNIT_AIN420MA_GET_ADC_RAW16_VALUE": "%1 Get ADC 16bit raw value",
  "UNIT_AIN420MA_GET_CURRENT_VALUE": "%1 Get current value",
  "UNIT_AIN420MA_GET_FIRMWARE_VERSION": "%1 Get device firmware version",
  "UNIT_AIN420MA_SET_I2C_ADDRESS": "%1 Set device I2C slave address %2",
  "MODULE_AIN420MA": "AIN4-20mA",
  "MODULE_AIN420MA_INIT": "Init device I2C address %1",
  "MODULE_AIN420MA_GET_ADC_RAW16_VALUE": "Get ADC 16bit raw value channel %1",
  "MODULE_AIN420MA_GET_CURRENT_VALUE": "Get current value channel %1",
  "MODULE_AIN420MA_GET_FIRMWARE_VERSION": "Get device firmware version",
  "MODULE_AIN420MA_SET_I2C_ADDRESS": "Set device I2C slave address %1",
  "UNIT_IMU_GET_X": "Get %1 X",
  "UNIT_IMU_GET_Y": "Get %1 Y",
  "UNIT_IMU_ACC_FULLSCALE_RANGE": "%1 ACC full scale range %2",
  "UNIT_IMU_GYRO_FULLSCALE_RANGE": "%1 Gyro full scale range %2",
  "UNIT_IMU_SET_ACC_UNIT": "%1 Set ACC output unit %2",
  "UNIT_IMU_SET_GYRO_UNIT": "%1 Set Gyro output unit %2",
  "UNIT_IMU_GYRO_CALIBRATE": "%1 Gyro auto calibration samples %2 interval %3 ms",
  "UNIT_IMU_SET_GYRO_OFFSET": "%1 Gyro manual calibration x %2 y %3 z %4",
  "UNIT_NECO": "Neco",
  "UNIT_NECO_SET_COLOR": "Set %1 index %2 RGB color %3",
  "UNIT_NECO_SET_COLOR_FROM": "Set %1 from %2 to %3 RGB color %4",
  "UNIT_NECO_SET_COLOR_ALL": "Set %1 all RGB color %2",
  "UNIT_NECO_SET_RANDOM_COLOR": "Set %1 index %2 random color",
  "UNIT_NECO_SET_ONE_RANDOM_COLOR_FROM": "Set %1 from %2 to %3 in one random color",
  "UNIT_NECO_SET_RANDOM_COLOR_FROM": "Set %1 from %2 to %3 in random color",
  "UNIT_NECO_SET_ONE_RANDOM_COLOR_ALL": "Set %1 all in one random color",
  "UNIT_NECO_SET_RANDOM_COLOR_ALL": "Set %1 all in random color",
  "UNIT_NECO_SET_BRIGHTNESS": "%1 Set %2 brightness %3",
  "UNIT_NECO_BUTTON_CALLBACK": "%1 Button %2",
  "UNIT_NECO_BUTTON_STATE": " Obtain %1 button %2 ",
  "UNIT_GPS_UART_INIT": "Set %1 core uart ID num %2",
  "GPS_UART_INIT": "Set core uart ID num %1",
  "GPS_GET_LATITUDE_DECIMAL": "Get latitude decimal (return float: dd.dddd)",
  "GPS_GET_LONGITUDE_DECIMAL": "Get longitude decimal (return float: dd.dddd)",
  "GPS_GET_ALTITUDE": "Get altitude (meter, return string)",
  "M5ESPNOW_SEND_DATA": "EspNow send %1 id %2 (1 ~ 10) data %3",
  "M5ESPNOW_BROADCAST_DATA": "EspNow broadcast send %1 data %2",
  "UNIT_ACMEASURE": "AC Measure",
  "UNIT_ACMEASURE_INIT": "%1 Init device I2C address %2",
  "UNIT_ACMEASURE_GET_VOLTAGE": "%1 Get voltage (string)",
  "UNIT_ACMEASURE_GET_CURRENT": "%1 Get current (string)",
  "UNIT_ACMEASURE_GET_ACTIVE_POWER": "%1 Get active power (string)",
  "UNIT_ACMEASURE_GET_APPARENT_POWER": "%1 Get apparent power (string)",
  "UNIT_ACMEASURE_GET_POWER_FACTOR": "%1 Get power factor (string)",
  "UNIT_ACMEASURE_GET_KWH": "%1 Get KW/H (string)",
  "UNIT_ACMEASURE_GET_VOLTAGE_RAW": "%1 Get voltage raw value",
  "UNIT_ACMEASURE_GET_CURRENT_RAW": "%1 Get current raw value",
  "UNIT_ACMEASURE_GET_ACTIVE_POWER_RAW": "%1 Get active power raw value",
  "UNIT_ACMEASURE_GET_APPARENT_POWER_RAW": "%1 Get apparent power raw value",
  "UNIT_ACMEASURE_GET_POWER_FACTOR_RAW": "%1 Get power factor raw value",
  "UNIT_ACMEASURE_GET_KWH_RAW": "%1 Get KW/H raw value",
  "UNIT_ACMEASURE_GET_VOLTAGE_COEFFICIENT": "%1 Get voltage coefficient",
  "UNIT_ACMEASURE_GET_CURRENT_COEFFICIENT": "%1 Get current coefficient",
  "UNIT_ACMEASURE_DATA_READY": "%1 Is data ready",
  "UNIT_ACMEASURE_GET_FW": "%1 Get device firmware version",
  "UNIT_ACMEASURE_SET_KWH_RAW": "%1 Set KW/H raw value %2 (float)",
  "UNIT_ACMEASURE_SET_VOLTAGE_COEFFICIENT": "%1 Set voltage coefficient value (0 ~ 255) %2",
  "UNIT_ACMEASURE_SET_CURRENT_COEFFICIENT": "%1 Set current coefficient value (0 ~ 255) %2",
  "UNIT_ACMEASURE_SET_SAVE_COEFF": "%1 Save voltage & current coefficient in flash",
  "UNIT_ACMEASURE_SET_JUMP_BOOTLOADER": "%1 Set jump to bootloader",
  "UNIT_ACMEASURE_SET_I2C_ADDRESS": "%1 Set device I2C address %2",
  "ROBOCAR_UPDATE_LINE_SENSOR": "Update two-channel line follower in loop %1 sensor pin %2",
  "ROBOCAR_UPDATE_MULTI_LINE_SENSOR": "Update multi-channel line follower in loop %1 sensor pin %2 type %3",
  "ROBOCAR_GET_ULTRASONIC_DISTANCE": "Get RGB ultrasonic target distance value pin %1 mode %2 (return float)",
  "ROBOCAR_SET_ULTRASONIC_LED": "Set RGB ultrasonic LED index %1 (1 ~ 6) color %2 brightness %3 (0 ~ 100) %",
  "ROBOCAR_SET_ULTRASONIC_LED_PIN": "Set RGB ultrasonic LED pin %1",
  "ROBOCAR_SET_ULTRASONIC_LED_FROM": "Set RGB ultrasonic LED from %1 to %2 (1 ~ 6) color %3 brightness %4 (0 ~ 100) %",
  "ROBOCAR_SET_ULTRASONIC_LED_ALL": "Set RGB ultrasonic LED all color %1 brightness %2 (0 ~ 100) %",
  "MODULE_RELAY4": "4Relay",
  "MODULE_RELAY4_GET_STATUS": "Get %1 relay %2  (1 ~ 4) status (return 0 or 1)",
  "MODULE_RELAY4_SET_STATE": "Set %1 relay %2 (1 ~ 4) state %3",
  "MODULE_RELAY4_SET_ALL_RELAY_STATE": "Set %1 all relay state %2",
  "SPI": "SPI",
  "SPI_INIT": "Init %1 %2 baudrate %3 SCK %4 MISO %5 MOSI %6 firstbit %7 mode %8",
  "SPI_DEINIT": "%1 Deinit",
  "SPI_READINTO": "%1 Read into buf %2",
  "SPI_READ": "%1 Read nbytes %2 (return bytes)",
  "SPI_WRITE": "%1 Write buf %2",
  "SPI_WRITE_READINTO": "%1 Write buf %2 read buf %3",
  "BYTE_ARRAY": "Bytearray",
  "BYTE_ARRAY_CREATE_EMPTY": "Create empty bytearray with length %1",
  "BYTE_ARRAY_APPEND": "Bytearray %1 append %2",
  "BYTE_ARRAY_EXTEND": "Bytearray %1 extend %2",
  "BYTE_ARRAY_DECODE": "Bytearray %1 decode %2",
  "IMAGEPLUS": "Image+",
  "IMAGEPLUS_SET_UPDATE": "Set %1 update enable %2",
  "IMAGEPLUS_SET_INTERVAL": "Set %1 update interval %2",
  "IMAGEPLUS_SET_POSITION": "Set %1 x %2 y %3",
  "IMAGEPLUS_SET_DISPLAY": "Set %1 %2",
  "IMAGEPLUS_IS_VALID": "Is %1 valid data",
  "UNIT_CATCH": "Catch",
  "UNIT_CATCH_WRITE_ANGLE": "%1 Set %2 degree turn",
  "UNIT_CATCH_WRITE_US": "%1 Set %2 μs pulse",
  "UNIT_MINIOLED": "Mini OLED",
  "UNIT_MINIOLED_FILL": "%1 Fill %2",
  "UNIT_MINIOLED_PIXEL": "%1 Draw pixel x: %2 y: %3 color: %4",
  "UNIT_MINIOLED_FILL_RECT": "%1 Fill rect x: %2 y: %3 w: %4 h: %5 color: %6",
  "UNIT_MINIOLED_LINE": "%1 Draw line x1: %2 y1: %3 x2: %4 y2: %5 color: %6",
  "UNIT_MINIOLED_HLINE": "%1 Draw horizontal line x: %2 y: %3 w: %4 color: %5",
  "UNIT_MINIOLED_VLINE": "%1 Draw vertical line x: %2 y: %3 h: %4 color: %5",
  "UNIT_MINIOLED_RECT": "%1 Draw rect x: %2 y: %3 w: %4 h: %5 color: %6",
  "UNIT_MINIOLED_TEXT": "%1 Draw text %2 x: %3 y: %4 color: %5",
  "UNIT_MINIOLED_DISPLAY_POWER": "%1 Display power %2",
  "UNIT_MINIOLED_DISPLAY_BRIGHTNESS": "%1 Display brightness %2",
  "UNIT_MINIOLED_DISPLAY_COLOR": "%1 Display %2 color",
  "UNIT_MINIOLED_DISPLAY_SHOW": "%1 Display show",
  "UNIT_MINIOLED_DISPLAY_SCROLL": "%1 Display scroll X step %2 Y step %3",
  "UNIT_SERVOS8": "8Servos",
  "UNIT_SERVOS8_GET_CONFIG_MODE": "%1 Get channel %2 config mode (return int)",
  "UNIT_SERVOS8_SET_CONFIG_MODE": "%1 Set channel %2 config mode %3",
  "UNIT_SERVOS8_READ_DIGITAL_INPUT_PIN": "%1 Get channel %2 digital input (return True or False)",
  "UNIT_SERVOS8_WRITE_DIGITAL_OUTPUT_PIN": "%1 Set channel %2 digital output level %3",
  "UNIT_SERVOS8_WRITE_SERVO_ANGLE": "%1 Set channel %2 servo angle %3",
  "UNIT_SERVOS8_READ_ADC8_PIN": "%1 Get channel %2 ADC 8bit (return int)",
  "UNIT_SERVOS8_READ_ADC12_PIN": "%1 Get channel %2 ADC 12bit (return int)",
  "UNIT_SERVOS8_READ_SERVO_ANGLE_PIN": "%1 Get channel %2 servo angle (return int)",
  "UNIT_SERVOS8_WRITE_SERVO_PULSE": "%1 Set channel %2 servo pulse %3",
  "UNIT_SERVOS8_READ_SERVO_PULSE_PIN": "%1 Get channel %2 servo pulse (return int)",
  "UNIT_SERVOS8_WRITE_RGB_LED_PIN": "%1 Set channel %2 RGB LED color %3",
  "UNIT_SERVOS8_READ_RGB_LED_PIN": "%1 Get channel %2 RGB LED color (return list)",
  "UNIT_SERVOS8_READ_STATUS": "%1 Get firmware version",
  "UNIT_SERVOS8_SET_I2C_ADDRESS": "%1 Set I2C address %2",
  "UNIT_SERVOS8_INIT_I2C_ADDRESS": "%1 Init I2C address %2",
  "UNIT_SERVOS8_WRITE_PWM_DUTY": "%1 Set channel %2 pwm duty cycle %3 %",
  "UNIT_SERVOS8_READ_SERVO_CURRENT": "%1 Get servo current (return float)",
  "JSON_GET_KEY_VALUE": "Get JSON  %1 key %2 value",
  "JSON_GET_KEYS": "Get JSON  %1 keys (return list)",
  "JSON_GET_VALUES": "Get JSON %1 values (return list)",
  "JSON_GET_KEYS_LEN": "Get JSON %1 keys length",
  "JSON_SET_KEY_VALUE": "JSON %1 set value %2 of key %3",
  "JSON_ADD_KEY_VALUE": "JSON %1 add item key %2 value %3",
  "JSON_DEL_KEY": "JSON %1 delete item key %2",
  "JSON_CREATE": "Create JSON (string)",
  "UNIT_HBRIDGE_GET_CURRENT": "%1 Get vin current (float) in amps",
  "UNIT_ENV4": "ENV IV",
  "UNIT_ENV4_GET_MODE": "Get %1 mode",
  "UNIT_ENV4_SET_MODE": "%1 Set mode %2",
  "NTP_INIT_TIMEZONE": "Init ntptime with host %1 and timezone %2 hours %3 minutes ",
  "NTP_INIT_TIMEZONE_DROPDOWN": "Init ntptime with host %1 and timezone %2 hours %3 minutes ",
  "UNIT_UWB_UART_INIT": "Set %1 core uart ID num %2 (1 ~ 2)",
  "UNIT_UWB_CHECK_DEVICE": "Check %1 device available (return True of False)",
  "UNIT_UWB_GET_DEVICE_ID": "Get %1 device ID (return string)",
  "UNIT_UWB_GET_DISTANCE_MEASURE": "Get %1 distance (in Meter) to anchor ID %2 (return float)",
  "UNIT_UWB_UPDATE_VALUE_LOOP": "%1 Updated new distance value (in use loop)",
  "UNIT_UWB_CONTINUOUS_VALUE_OUTPUT": "%1 Continuous value output %2",
  "UNIT_UWB_INIT": "Init %1 as",
  "UNIT_UWB_INIT_WITH_ID": "with ID",
  "UNIT_ENVPRO": "ENV Pro",
  "UNIT_ENVPRO_GET_TEMPERATURE": "Get %1 temperature (°C, return float)",
  "UNIT_ENVPRO_GET_PRESSURE": "Get %1 pressure (hPa, return float)",
  "UNIT_ENVPRO_GET_HUMIDITY": "Get %1 humidity (%, return float)",
  "UNIT_ENVPRO_GET_GAS_RESISTANCE": "Get %1 gas resistance (kΩ) (return float)",
  "UNIT_ENVPRO_GET_OVER_SAMPLING_RATE": "%1 Get %2 oversampling rate (return int)",
  "UNIT_ENVPRO_GET_IIR_FILTER_COEFFICIENT": "Get %1 IIR filter coefficient (return int)",
  "UNIT_ENVPRO_GET_ALTITUDE": "Get %1 altitude (meters, return float)",
  "UNIT_ENVPRO_SET_IIR_FILTER_COEFFICIENT": "Set %1 IIR filter coefficient %2 (0 ~ 127)",
  "UNIT_ENVPRO_SET_OVER_SAMPLING_RATE": "%1 Set %2 oversampling rate %3 (1 ~ 16)",
  "UNIT_ENVPRO_UPDATE_DATA": "%1 Update data (main loop)",
  "MODULE_RELAY4_INIT_I2C_ADDRESS": "Init %1 device I2C address %2 (0x01 ~ 0x7f)",
  "MODULE_RELAY4_SET_I2C_ADDRESS": "Set %1 device I2C slave address %2 (0x01 ~ 0x7f)",
  "MODULE_RELAY4_GET_8BIT_VOLTAGE_VALUE": "Get %1 ADC 8bit voltage value (V, return 0 ~ 26)",
  "MODULE_RELAY4_GET_8BIT_RAW_VALUE": "Get %1 ADC 8bit raw value (return 0 ~ 255)",
  "MODULE_RELAY4_GET_12BIT_VOLTAGE_VALUE": "Get %1 ADC 12bit voltage value (V, return 0 ~ 26)",
  "MODULE_RELAY4_GET_12BIT_RAW_VALUE": "Get %1 ADC 12bit raw value (return 0 ~ 4095)",
  "PM25_SHT20_GET_TEMPERATURE": "PM2.5 (SHT20) %1 get temperature value (℃, return float)",
  "PM25_SHT20_GET_HUMIDITY": "PM2.5 (SHT20) %1 get humidity value (%RH, return float)",
  "PM25SHT30_GET_PM_FACTORY": "%1 PM2.5 (SHT30) get %2 value in %3 (μg/m³, return int)",
  "PM25SHT30_GET_NUM_ABOVE": "%1 PM2.5 (SHT30) get number of particles above %2 μm (in 0.1L of air) (return int)",
  "M5ESPNOW_DEINIT": "EspNow deinit",
  "M5_TEXT_BYTESTR_TO_HEXSTR": "Byte string %1 to hex string",
  "M5_TEXT_HEXSTR_TO_BYTESTR": "Hex string %1 to byte string",
  "M5ESPNOW_ENABLE_SEND_CB": "EspNow enable send callback",
  "M5ESPNOW_ENABLE_RECV_CB": "EspNow enable receive callback",
  "MODULE_GNSS": "GNSS",
  "MODULE_GNSS_INIT_IMU": "Init IMU device I2C address %1 (0x68 ~ 0x69)",
  "MODULE_GNSS_GET_ACCEL": "Get accelerometer data direction %1 (m/s2, return float)",
  "MODULE_GNSS_GET_ACCEL_RAW": "Get accelerometer raw data direction %1 (return int)",
  "MODULE_GNSS_GET_GYRO": "Get gyroscope data direction %1 (deg/s, return float)",
  "MODULE_GNSS_GET_GYRO_RAW": "Get gyroscope raw data direction %1 (return int)",
  "MODULE_GNSS_GET_MAGNETO": "Get magnetometer magnetic field strength %1 direction %2 (uT, return float)",
  "MODULE_GNSS_GET_MAGNETO_RAW": "Get magnetometer raw data direction %1 (return int)",
  "MODULE_GNSS_GET_TEMP": "Get temperature (°C, return float)",
  "MODULE_GNSS_GET_PRESSURE": "Get pressure (hPa, return float)",
  "MODULE_GNSS_SET_MODE_BMI": "Set bmi270 to %1 mode",
  "MODULE_GNSS_SET_ACCEL_RANGE": "Set accelerometer range %1",
  "MODULE_GNSS_SET_GYRO_RANGE": "Set gyroscope range %1",
  "MODULE_GNSS_SET_ACCEL_ODR": "Set accelerometer output data rate %1",
  "MODULE_GNSS_SET_GYRO_ODR": "Set gyroscope output data rate %1",
  "MODULE_GNSS_SET_MAGNETO_ODR": "Set magnetometer output data rate %1",
  "MODULE_GNSS_INIT": "Init GNSS %1 UART %2 Tx pin %3 Rx pin %4 Baud rate %5 Bits %6 Parity %7 Stop bits %8",
  "MODULE_GNSS_SET_TIME_ZONE": "Set timezone %1 hours %2 minutes",
  "API_SERVER": "Server :",
  "ROBOCAR_LEGO_MOTOR_INIT": "Init DC motor module",
  "MODULE_LAN": "LAN",
  "MODULE_LAN_INIT": "Init LAN module %1 sclk %2 mosi %3 miso %4 cs %5 rst %6 irq %7",
  "MODULE_LAN_CONFIG": "Config TCP/UDP LAN %1 socket type %2 port (0 ~ 65535) %3",
  "MODULE_LAN_CONFIG_MACHINE": "machine type",
  "MODULE_LAN_CONFIG_IP": "remote ip",
  "MODULE_LAN_TCP_SEND_PACKET": "TCP send packet %1",
  "MODULE_LAN_TCP_RECEIVE_PACKET": "TCP receive packet size %1 (0 ~ 2048)",
  "MODULE_LAN_UDP_SEND_PACKET": "UDP send packet IP %1 port %2 payload %3",
  "MODULE_LAN_UDP_RECEIVE_PACKET": "UDP receive packet size %1 (0 ~ 2048)",
  "MODULE_LAN_AVAILABLE_PACKET": "Available amount of packet %1 (return int)",
  "MODULE_LAN_LOCAL_IP": "Local IP address (return string)",
  "MODULE_LAN_REMOTE_IP": "Remote IP address (return string)",
  "MODULE_LAN_GET_IF_CONFIG": "Get ifconfig (return list)",
  "MODULE_LAN_SOCKET_CLOSE": "Socket closed",
  "MODULE_LAN_MQTT_INIT": "Init MQTT server %1 port %2 client id %3 username %4 password %5 keepalive %6",
  "MODULE_LAN_MQTT_DISCONNECT": "MQTT disconnect server",
  "MODULE_LAN_MQTT_CONNECT": "MQTT connect server",
  "MODULE_LAN_MQTT_CHECK_CONNECTION": "MQTT check connect server (return True or False)",
  "MODULE_LAN_MQTT_POLL": "MQTT polling downlink message in loop",
  "UNIT_GLASS2": "Glass2",
  "UNIT_GLASS2_FILL": "%1 Fill %2",
  "UNIT_GLASS2_FILL_RECT": "%1 Fill rect x %2 y %3 w %4 h %5 color %6",
  "UNIT_GLASS2_LINE": "%1 Draw line x1 %2 y1 %3 x2 %4 y2 %5 color %6",
  "UNIT_GLASS2_HLINE": "%1 Draw horizontal line x %2 y %3 w %4 color %5",
  "UNIT_GLASS2_VLINE": "%1 Draw vertical line x %2 y %3 h %4 color %5",
  "UNIT_GLASS2_RECT": "%1 Draw rect x %2 y %3 w %4 h %5 color %6",
  "UNIT_GLASS2_TEXT": "%1 Draw text %2 x %3 y %4 font %5 color %6",
  "UNIT_GLASS2_PIXEL": "%1 Draw pixel x %2 y %3 color %4",
  "UNIT_GLASS2_DISPLAY_SCROLL": "%1 Display scroll x step %2 (0 ~ 127) y step %3 (0 ~ 63)",
  "UNIT_GLASS2_IMAGE": "%1 Draw image %2 x %3 y %4",
  "UNIT_GLASS2_DISPLAY_POWER": "%1 Display power %2",
  "UNIT_GLASS2_DISPLAY_BRIGHTNESS": "%1 Display brightness %2 (0 ~ 100) %",
  "UNIT_GLASS2_DISPLAY_SHOW": "%1 Display show",
  "UNIT_GLASS2_DISPLAY_INVERT": "%1 Display %2 color",
  "UNIT_IMUPRO": "IMU Pro",
  "UNIT_IMUPRO_GET_TEMP": "%1 Get temperature (°C, return float)",
  "UNIT_IMUPRO_GET_PRESSURE": "%1 Get pressure (Pa, return float)",
  "UNIT_IMUPRO_GET_ACC": "%1 Get acceleration (m/s^2, return float)",
  "UNIT_IMUPRO_GET_GYRO": "%1 Get gyro (rad/s, return float)",
  "UNIT_IMUPRO_GET_MAG": "%1 Get magnetometer value (uT, return float)",
  "UNIT_IMUPRO_GET_COMPASS": "%1 Get compass angle (0 ~ 360°, return float)",
  "UNIT_IMUPRO_GET_ATTITUDE": "%1 Get attitude angles %2 (return tuple [yaw, pitch, roll])",
  "UNIT_IMUPRO_SET_GYRO_OFFSET": "%1 Gyro manual calibration x %2 y %3 z %4 (rad/s)",
  "UNIT_IMUPRO_BMI_SET_ACC_RANGE": "%1 Set accelerometer range %2",
  "UNIT_IMUPRO_BMI_SET_GYRO_RANGE": "%1 Set gyroscope range %2",
  "UNIT_IMUPRO_BMI_SET_ACC_ODR": "%1 Set accelerometer output data rate %2",
  "UNIT_IMUPRO_BMI_SET_GYRO_ODR": "%1 Set gyroscope output data rate %2",
  "UNIT_LORAE220": "LoRaE220",
  "UNIT_LORAE220_SETUP": "%1 Config %2 Address (0x0000 ~ 0xFFFF) %3 Channel (0 ~ 30) %4 Encryption key (0x0000 ~ 0xFFFF) %5",
  "UNIT_LORAE220_RECEIVE_IN_LOOP_CB": "ID:%1 On LoRa data received data %2 %3 RSSI (dB) %4",
  "UNIT_LORAE220_RECEIVE_IN_LOOP": "ID:%1 %2 Receive data in loop",
  "UNIT_LORAE220_STOP_RECEIVE": "%1 Stop receive data in loop",
  "UNIT_LORAE220_RECEIVE": "%1 Receive data timeout %2 ms (return list [receive_data, rssi])",
  "UNIT_LORAE220_SEND": "%1 Send a line %4 address %2 (0x0000 ~ 0xFFFF) channel %3 (0 ~ 30)",
  "UNIT_LORAE220_SEND_STR": "%1 Send %4 address %2 (0x0000 ~ 0xFFFF) channel %3 (0 ~ 30)",
  "UNIT_LORAE220_SEND_LIST": "%1 Send raw data %4 address %2 (0x0000 ~ 0xFFFF) channel %3 (0 ~ 30)",
  "UNIT_TOF4M": "TOF4M",
  "UNIT_TOF4M_SET_DISTANCE_MODE": "%1 Set distance mode %2",
  "UNIT_TOF4M_SET_MEASUREMENT_BUDGET": "%1 Set measurement timing budget %2 ms",
  "UNIT_TOF4M_GET_SINGLE_DISTANCE": "%1 Get single distance value (mm, return int)",
  "AXP_GET_TEMP_IN_AXP192_CORE2": "Get internal PMU Temperature",
  "WEIGH_SET_CALIBRATE_SCALE": "%1 Set calibrate scale weight %2 gram",
  "UNIT_GLASS2_INIT": "%1 Init device I2C address %2 (0x3C ~ 0x3D)",
  "MICROPHONE_PDM_INIT": "Microphone init %1 ws pin %2 data pin %3 sample rate (hz) %4 record (in ms) %5",
  "MICROPHONE_PDM_PAUSE": "Microphone pauses recording timeout %1 ms",
  "MICROPHONE_PDM_RESUME": "Microphone resumes recording",
  "MICROPHONE_PDM_WAITDONE": "Microphone wait record done timeout %1 ms",
  "MICROPHONE_PDM_GET_RMS": "Microphone get volume (return float)",
  "MICROPHONE_PDM_READ": "Microphone read a single sample %1 from the current reading index (return int)",
  "MICROPHONE_PDM_REWIND": "Microphone rewind %1 samples",
  "MICROPHONE_PDM_REWINDMS": "Microphone rewind %1 ms",
  "MICROPHONE_PDM_READ_TO_BUFFER": "Microphone read sample count %2 into buffer %1 (bytearray)",
  "MICROPHONE_PDM_DEINIT": "Microphone deinit timeout %1 ms",
  "MICROPHONE_PDM_RECORD_START": "Microphone start recording file %1 time %2 ms",
  "MICROPHONE_PDM_RECORD_STOP": "Microphone stop recording",
  "UNIT_PDM_INIT_V2": "%1 init %2 sample rate (hz) %3 record (in ms) %4",
  "UNIT_PDM_PAUSE": "%1 pauses recording timeout %2 ms",
  "UNIT_PDM_RESUME": "%1 resumes recording",
  "UNIT_PDM_WAITDONE": "%1 wait record done timeout %2 ms",
  "UNIT_PDM_GET_RMS": "%1 get volume (return float)",
  "UNIT_PDM_READ": "%1 read a single sample %2 from the current reading index (return int)",
  "UNIT_PDM_REWIND": "%1 rewind %2 samples",
  "UNIT_PDM_REWINDMS": "%1 rewind %2 ms",
  "UNIT_PDM_READ_TO_BUFFER": "%1 read sample count %3 into buffer %2 (bytearray)",
  "UNIT_PDM_DEINIT_V2": "%1 deinit timeout %2 ms",
  "UNIT_PDM_RECORD_START": "%1 start recording file %2 time %3 ms",
  "UNIT_PDM_RECORD_STOP": "%1 stop recording",
  "UNIT_REFLECTIVEIR": "Reflective IR",
  "UNIT_REFLECTIVEIR_GET_ANALOG_OUTPUT": "%1 Get analog output value (return int, 0 ~ 4095)",
  "UNIT_REFLECTIVEIR_GET_DIGITAL_OUTPUT": "%1 Get digital output value (return int, 0 ~ 1)",
  "GRAPH": "Chart Graph",
  "foregroundColor": "Foreground Color",
  "tension": "Tension (float, 0 ~ 1)",
  "segment": "Segment",
  "GRAPH_SET_FGCOLOR": "%1 Set foreground color %2",
  "GRAPH_SET_BGCOLOR": "%1 Set background color %2",
  "GRAPH_SET_TENSION": "%1 Set smoothed line tension %2 (float, 0 ~ 1)",
  "GRAPH_SET_MIN": "%1 Set Y-axis min value %2",
  "GRAPH_SET_MAX": "%1 Set Y-axis max value %2",
  "GRAPH_SET_X": "%1 Set X %2",
  "GRAPH_SET_Y": "%1 Set Y %2",
  "GRAPH_SET_WIDTH": "%1 Set Width %2",
  "GRAPH_SET_HEIGHT": "%1 Set Height %2",
  "GRAPH_SET_TYPE": "%1 Set chart graph type %2",
  "GRAPH_SET_HIDE": "%1 Hide",
  "GRAPH_SET_SHOW": "%1 Show",
  "GRAPH_ADD_SAMPLE": "%1 Add Sample %2",
  "GRAPH_DESTROY": "%1 Destroy",
  "UNIT_SYNTH": "Synth",
  "UNIT_SYNTH_SET_NOTE_ON": "%1 Set note on channel %2 pitch %3 (0 ~ 127) velocity %4 (0 ~ 127)",
  "UNIT_SYNTH_SET_NOTE_ON_PITCH": "%1 Set note on channel %2 pitch %3 velocity %4 (0 ~ 127)",
  "UNIT_SYNTH_SET_NOTE_OFF": "%1 Set note off channel %2 pitch %3 (0 ~ 127)",
  "UNIT_SYNTH_SET_CHANGE_INSTRUMENT": "%1 Set instrument bank %2 (0 or 127) channel %3 value %4 (1 ~ 128)",
  "UNIT_SYNTH_SET_INSTRUMENT_GENERAL_MIDI": "%1 Set general instrument channel %2 name %3",
  "UNIT_SYNTH_SET_INSTRUMENT_VARIATION": "%1 Set MT-32 instrument channel %2 name %3",
  "UNIT_SYNTH_SET_DRUMS_INSTRUMENT": "%1 Set drums instrument name %2 velocity %3 (0 ~ 127)",
  "UNIT_SYNTH_SET_PITCH_BEND": "%1 Set pitch bend channel %2  value %3 (0 ~ 1023)",
  "UNIT_SYNTH_SET_PITCH_BEND_RANGE": "%1 Set pitch bend range channel %2 value %3 (0 ~ 255)",
  "UNIT_SYNTH_SET_DEVICE_RESET": "%1 Reset",
  "UNIT_SYNTH_SET_CHANNEL_VOLUME": "%1 Set channel %2 volume %3 (0 ~ 100)",
  "UNIT_SYNTH_SET_ALL_NOTE_OFF": "%1 Set all notes off channel %2",
  "UNIT_SYNTH_SET_MASTER_VOLUME": "%1 Set master volume %2 (0 ~ 100)",
  "UNIT_SYNTH_SET_REVERB": "%1 Set reverb %2 channel %3 program %4 level (0 ~ 127) %5 delay feedback (0 ~ 255) %6",
  "UNIT_SYNTH_SET_CHORUS": "%1 Set chorus %2 channel %3 program %4 level (0 ~ 127) %5 feedback (0 ~ 255) %6 chorusdelay (0 ~ 255) %7",
  "UNIT_SYNTH_SET_PAN": "%1 Set pan channel %2 value %3 (0 ~ 127)",
  "UNIT_SYNTH_SET_EQ": "%1 Set equalizer %2 channel %3 low band (0 ~ 127) %4 medium low band (0 ~ 127) %5 medium high band (0 ~ 127) %6 high band (0 ~ 127) %7 low freq (0 ~ 127) %8 medium low freq (0 ~ 127) %9 medium high freq (0 ~ 127) %10 high freq (0 ~ 127) %11",
  "UNIT_SYNTH_SET_TUNING": "%1 Set tuning %2 channel %3 fine tuning (0 ~ 127) %4 coarse tunning (0 ~ 127) %5",
  "UNIT_SYNTH_SET_VIBRATE": "%1 Set vibrate %2 channel %3 rate (0 ~ 127) %4 depth (0 ~ 127) %5 delay (0 ~ 127) %6",
  "UNIT_SYNTH_SET_TVF": "%1 Set TVF %2 channel %3 cutoff freq (0 ~ 127) %4 resonance (0 ~ 127) %5",
  "UNIT_SYNTH_SET_ENVELOPE": "%1 Set envelope time %2 channel %3 attack (0 ~ 127) %4 decay (0 ~ 127) %5 release (0 ~ 127) %6",
  "UNIT_SYNTH_SET_SCALE_TUNING": "%1 Set scale tuning %2 channel %3 v1 (0 ~ 127) %4 v2 (0 ~ 127) %5 v3 (0 ~ 127) %6 v4 (0 ~ 127) %7 v5 (0 ~ 127) %8 v6 (0 ~ 127) %9 v7 (0 ~ 127) %10 v8 (0 ~ 127) %11 v9 (0 ~ 127) %12 v10 (0 ~ 127) %13 v11 (0 ~ 127) %14 v12 (0 ~ 127) %15",
  "UNIT_SYNTH_SET_MOD_WHEEL": "%1 Set modulation wheel %2 channel %3 pitch (0 ~ 127) %4 TVT cutoff (0 ~ 127) %5 amplitude (0 ~ 127) %6 rate (0 ~ 127) %7 pitch depth (0 ~ 127) %8 TVF depth (0 ~ 127) %9 TVA depth (0 ~ 127) %10",
  "UNIT_SYNTH_SET_ALL_DRUMS": "%1 Set all channels drums",
  "GUIDE_WELCOME": "Welcome to UIFlow",
  "GUIDE_MSG": "Here you can quickly learn about the features of UIFlow and learn how to program it.",
  "GUIDE_START": "Start",
  "GUIDE_SKIP": "Skip",
  "GUIDE_DONT_SHOW": "Dont't show again",
  "GUIDE_NEXT_PAGE": "Next",
  "GUIDE_PREV_PAGE": "Previous",
  "GUIDE_FIRMWARE_BURN_TITLE": "Firmware Burning",
  "GUIDE_CONNECT_DEVICE_TITLE": "Connect Device",
  "GUIDE_RUN_PROGRAM_TITLE": "Run Program",
  "GUIDE_SAVE_PROGRAM_TITLE": "Save / Load Program",
  "GUIDE_DOWNLOAD_PROGRAM_TITLE": "Download Program",
  "GUIDE_OVERVIEW_TITLE": "Overview",
  "GUIDE_HEADER_TITLE": "Header",
  "GUIDE_UI_EDIT_AREA_TITLE": "UI Editing Area",
  "GUIDE_SELECTION_AREA_TITLE": "Resource Area",
  "GUIDE_TOOLBOX_TITLE": "Block Toolbox",
  "GUIDE_PROGRAMMING_TITLE": "Programming Area",
  "GUIDE_DEVICE_SETTING_TITLE": "Device Setting",
  "GUIDE_STEP1": "Step 1",
  "GUIDE_STEP2": "Step 2",
  "GUIDE_STEP3": "Step 3",
  "GUIDE_FIRMWARE_BURN_STEP1_MSG1": "Download burnning tool: ",
  "GUIDE_FIRMWARE_BURN_STEP1_MSG2": "M5Burner",
  "GUIDE_FIRMWARE_BURN_STEP2_MSG1": "Download firmware",
  "GUIDE_FIRMWARE_BURN_STEP2_MSG2": "select the corresponding device class in the left menu.",
  "GUIDE_FIRMWARE_BURN_STEP2_MSG3": "select the firmware of the matching device.",
  "GUIDE_FIRMWARE_BURN_STEP2_MSG4": "click the download button to download.",
  "GUIDE_FIRMWARE_BURN_STEP3_MSG1": "Start to burn firmware",
  "GUIDE_FIRMWARE_BURN_STEP3_MSG2": "Connect the M5 device to the computer through the Type-C data cable, Burner will automatically select the corresponding COM port, the baud rate can use the default configuration in M5Burner, click on Burn",
  "GUIDE_FIRMWARE_BURN_STEP3_MSG3": "Fill in the WiFi information into the WiFi configuration box. The information will be burned and saved to the M5 device along with the firmware, and click on Start to start burning.",
  "GUIDE_FIRMWARE_BURN_STEP3_MSG4": "Note: If the programming timeout occurs, try to reduce the baud rate to 115200.",
  "GUIDE_FIRMWARE_BURN_STEP3_MSG5": "When the burning log prompts Burn Successfully, it means that the firmware has been burned.",
  "GUIDE_CONNECT_DEVICE_STEP1_MSG1": "Connect the M5 device to the computer through the Type-C data cable, and check your device is connect to WiFi.",
  "GUIDE_CONNECT_DEVICE_STEP2_MSG1": "Open the setting pannel",
  "GUIDE_CONNECT_DEVICE_STEP2_MSG2": "Enter the API key",
  "GUIDE_CONNECT_DEVICE_STEP2_MSG3": "Select your M5 device and click \"OK\" button",
  "GUIDE_RUN_PROGRAM_STEP1_MSG1": "Drag the label UI element onto screen simulator",
  "GUIDE_RUN_PROGRAM_STEP2_MSG1": "Drag the label show block to the programming area, connect to setup block",
  "GUIDE_RUN_PROGRAM_STEP3_MSG1": "Click the Run button to run UIFlow program.",
  "GUIDE_SAVE_PROGRAM_SAVE_MSG1": "Click \"Save\" button or \"Save as\" button to save your program.",
  "GUIDE_SAVE_PROGRAM_LOAD_MSG1": "Click \"Open\" button, select .m5f file to load program.",
  "GUIDE_DOWNLOAD_PROGRAM_MSG1": "When you finish program, you can download the program to run always in your device.",
  "GUIDE_DOWNLOAD_PROGRAM_MSG2": "Click the \"Download\" button, and the device screen will show \"uploading.\", Wait for some time.",
  "GUIDE_DOWNLOAD_PROGRAM_MSG3": "When it is successful, the device will automatically reboot and run the program.",
  "GUIDE_OVERVIEW_POINT1_MSG": "",
  "GUIDE_OVERVIEW_POINT2_MSG": "Drag and drop UI elements onto the simulation screen and set UI elements.",
  "GUIDE_OVERVIEW_POINT3_MSG": "Select units, hats or stamps you need.",
  "GUIDE_OVERVIEW_POINT4_MSG": "",
  "GUIDE_OVERVIEW_POINT5_MSG": "Drag blocks from the block toolbox into the workspace. Snap blocks together to build your program.",
  "GUIDE_OVERVIEW_POINT6_MSG": "Set device API key and some operation",
  "GUIDE_HEADER_POINT1_B1_MSG1": "Project name:",
  "GUIDE_HEADER_POINT1_B1_MSG2": "The name of the current project.",
  "GUIDE_HEADER_POINT2_B1_MSG1": "Switch programming area:",
  "GUIDE_HEADER_POINT2_B1_MSG2": "Switch to Blocks or Python.",
  "GUIDE_HEADER_POINT3_B1_MSG1": "Account: ",
  "GUIDE_HEADER_POINT3_B1_MSG2": "Login with M5 Account",
  "GUIDE_HEADER_POINT3_B2_MSG1": "Shortcut Keys: ",
  "GUIDE_HEADER_POINT3_B2_MSG2": "Shortcut keys list",
  "GUIDE_HEADER_POINT3_B3_MSG1": "Device File Manager: ",
  "GUIDE_HEADER_POINT3_B3_MSG2": "",
  "GUIDE_HEADER_POINT3_B4_MSG1": "Undo: ",
  "GUIDE_HEADER_POINT3_B4_MSG2": "Undo block operation.",
  "GUIDE_HEADER_POINT3_B5_MSG1": "Redo: ",
  "GUIDE_HEADER_POINT3_B5_MSG2": "Redo block operation.",
  "GUIDE_HEADER_POINT4_B1_MSG1": "Run history record: ",
  "GUIDE_HEADER_POINT4_B1_MSG2": "View and load run history record",
  "GUIDE_HEADER_POINT4_B2_MSG1": "New project: ",
  "GUIDE_HEADER_POINT4_B2_MSG2": "Create a new project",
  "GUIDE_HEADER_POINT4_B3_MSG1": "Open: ",
  "GUIDE_HEADER_POINT4_B3_MSG2": "Load .m5f file",
  "GUIDE_HEADER_POINT4_B4_MSG1": "Save: ",
  "GUIDE_HEADER_POINT4_B4_MSG2": "Save the project as an M5F file. ",
  "GUIDE_HEADER_POINT4_B5_MSG1": "Save as: ",
  "GUIDE_HEADER_POINT4_B5_MSG2": "Save the project to a specified location.",
  "GUIDE_HEADER_POINT5_B1_MSG1": "EzData: ",
  "GUIDE_HEADER_POINT5_B1_MSG2": "Link to EzData manager page",
  "GUIDE_HEADER_POINT5_B2_MSG1": "Demo: ",
  "GUIDE_HEADER_POINT5_B2_MSG2": "Usage example",
  "GUIDE_HEADER_POINT5_B3_MSG1": "Doc: ",
  "GUIDE_HEADER_POINT5_B3_MSG2": "Link to Document",
  "GUIDE_HEADER_POINT5_B4_MSG1": "User Guide: ",
  "GUIDE_HEADER_POINT5_B4_MSG2": "A quick guide for UIFlow",
  "GUIDE_HEADER_POINT5_B5_MSG1": "More: ",
  "GUIDE_HEADER_POINT5_B5_MSG2": "Community, Version, UpdateLog, Setting.",
  "GUIDE_UIEDITOR_MSG1": "Drag and drop UI elements onto the simulation screen.",
  "GUIDE_UIEDITOR_MSG2": "Select the UI elements for more settings.",
  "GUIDE_SELECTION_MSG1": "Add the units, hats, or stamps you need and you can select the port for units and stamps",
  "GUIDE_SELECTION_MSG2": "The added units will appear in this area, you can click on the icons to modify the port, drag the icon to remove it.",
  "GUIDE_PRIGRAMMING_MSG1": "Drag blocks from the Block toolbox into the workspace. Snap blocks together to build your program",
  "GUIDE_PRIGRAMMING_MSG2": "Switch to Python, you can see the python code",
  "GUIDE_DEVICE_SETTING_POINT1": "API KEY",
  "GUIDE_DEVICE_SETTING_POINT2": "Device connect status",
  "GUIDE_DEVICE_SETTING_POINT3": "Device firmware version",
  "GUIDE_DEVICE_SETTING_POINT4": "Refresh device connect status",
  "GUIDE_DEVICE_SETTING_POINT5": "Save program",
  "GUIDE_DEVICE_SETTING_POINT6": "Load m5f file",
  "GUIDE_DEVICE_SETTING_POINT7": "Download program",
  "RTC_CPLUS2_SET_DATE_TIME": "Set rtc %1 year %2 month %3 date %4 weekday %5 hour %6 minute %7 second %8",
  "RTC_CPLUS2_GET_DATE_TIME": "Get rtc %1",
  "RTC_CPLUS2_SET_ALARM": "Set alarm date %1 hours %2 minutes %3",
  "RTC_CPLUS2_CHECK_ALARM_FLAG": "Check alarm flag",
  "RTC_CPLUS2_CLEAR_ALARM": "Turn off alarm",
  "RTC_CPLUS2_DISABLE_ALARM": "Disable alarm",
  "RTC_CPLUS2_SET_TIMER_MODE": "Set timer value %1 mode %2",
  "RTC_CPLUS2_GET_TIMER_VALUE": "Get timer value",
  "RTC_CPLUS2_CHECK_TIMER_FLAG": "Check timer flag",
  "RTC_CPLUS2_DISABLE_TIMER": "Disable timer",
  "RTC_CPLUS2_PAUSE_TIMER": "Pause timer",
  "RTC_CPLUS2_RESUME_TIMER": "Resume timer",
  "RTC_CPLUS2_CLEAR_TIMER_FLAG": "Turn off timer",
  "RTC_CPLUS2_ENABLE_TIMER_INTERRUPT": "Enable timer interrupt",
  "RTC_CPLUS2_DISABLE_TIMER_INTERRUPT": "Disable timer interrupt",
  "RTC_CPLUS2_ENABLE_ALARM_INTERRUPT": "Enable alarm interrupt",
  "RTC_CPLUS2_DISABLE_ALARM_INTERRUPT": "Disable alarm interrupt",
  "POWER_CPLUS2_ON": "Device power on",
  "POWER_CPLUS2_OFF": "Device power off",
  "POWER_CPLUS2_BRIGHTNESS": "Device LCD brightness %1",
  "POWER_CPLUS2_RESTART_AFTER_PERIOD": "Restart after period %1 %2",
  "POWER_CPLUS2_RESTART_ON": "Restart on %1 set minutes %2 set hours %3 set date %4",
  "POWER_CPLUS2_GET_BAT_VOLT": "Get device battery voltage ( V )",
  "samplesNum": "Samples Num",
  "MATH_REMAP": "Remap %1 from low %2 from high %3 to low %4 to high %5",
  "BARGRAPH": "Bar Graph",
  "BARGRAPH_SET_FGCOLOR": "%1 Set foreground color %2",
  "BARGRAPH_SET_BGCOLOR": "%1 Set background color %2",
  "BARGRAPH_SET_MIN": "%1 Set min value %2",
  "BARGRAPH_SET_MAX": "%1 Set max value %2",
  "BARGRAPH_SET_X": "%1 Set X %2",
  "BARGRAPH_SET_Y": "%1 Set Y %2",
  "BARGRAPH_SET_WIDTH": "%1 Set Width %2",
  "BARGRAPH_SET_HEIGHT": "%1 Set Height %2",
  "BARGRAPH_SET_TYPE": "%1 Set graph type %2",
  "BARGRAPH_SET_HIDE": "%1 Hide",
  "BARGRAPH_SET_SHOW": "%1 Show",
  "BARGRAPH_ADD_SAMPLE": "%1 Add Sample %2 (float)",
  "BARGRAPH_SET_REVERSED": "%1 Set reversed %2",
  "reversed": "Reversed",
  "UNIT_MINISCALE": "Mini Scales",
  "UNIT_MINISCALE_GET_ADC": "%1 Get raw ADC value (return int)",
  "UNIT_MINISCALE_GET_WEIGHT": "%1 Get weight (gram, return float)",
  "UNIT_MINISCALE_GET_BUTTON": "%1 Get button state (return True or False)",
  "UNIT_MINISCALE_GET_LOWPASS_FILTER": "%1 Get low pass filter status (return True or False)",
  "UNIT_MINISCALE_GET_AVERAGE_FILTER": "%1 Get average filter level (return int)",
  "UNIT_MINISCALE_GET_EMA_FILTER": "%1 Get EMA filter alpha value (return int)",
  "UNIT_MINISCALE_SET_LED": "%1 Set RGB LED color %2",
  "UNIT_MINISCALE_CALIBRATION": "%1 Calibration weight1 %2 (in grams) weight1 adc %3 weight2 %4 (in grams) weight2 adc %5",
  "UNIT_MINISCALE_SET_LOWPASS_FILTER": "%1 Set low pass filter %2",
  "UNIT_MINISCALE_SET_AVERAGE_FILTER": "%1 Set average filter level %2 (0 ~ 50)",
  "UNIT_MINISCALE_SET_EMA_FILTER": "%1 Set EMA filter alpha %2 (0 ~ 99)",
  "UNIT_MINISCALE_RESET": "%1 Reset",
  "UNIT_QRCODE": "QRCode",
  "UNIT_QRCODE_INIT_MODE": "%1 Init device mode",
  "UNIT_QRCODE_SET_MANUAL_SCAN": "%1 Set manual scanning method %2",
  "UNIT_QRCODE_CLEAR_CURRENT_DATA_STATUS": "%1 Clear qrcode trigger flag",
  "UNIT_QRCODE_SET_TRIGGER_MODE": "%1 Set trigger mode %2",
  "UNIT_QRCODE_SET_I2C_ADDRESS": "%1 Set device I2C address %2 (0x01 ~ 0x7f)",
  "UNIT_QRCODE_GET_CURRENT_DATA_STATUS": "%1 Get qrcode trigger flag (return int)",
  "UNIT_QRCODE_GET_DATA_LENGTH": "%1 Get qrcode data length (return int)",
  "UNIT_QRCODE_GET_DATA_FORMAT": "%1 Get qrcode data format %2 (return bytes or string)",
  "UNIT_QRCODE_GET_TRIGGER_MODE": "%1 Get trigger mode status (return int)",
  "UNIT_QRCODE_GET_TRIGGER_BUTTON": "%1 Get trigger button status (return bool)",
  "UNIT_QRCODE_GET_DEVICE_INFO": "%1 Get device information %2 (return int)",
  "UNIT_DAC2": "DAC2",
  "UNIT_DAC2_SETDACOUTPUTVOLTAGERANGE": "Set %1 output voltage range %2",
  "UNIT_DAC2_SETVOLTAGE": "Set %1 channel %3 output voltage %2 (V)",
  "UNIT_DAC2_SETVOLTAGEBOTH": "Set %1 channel0 output voltage %2 (V) channel1 output voltage %3 (V)",
  "UNIT_ADCV11": "ADC V1.1",
  "UNIT_ADCV11_SET_GAIN": "%1 Set gain %2",
  "UNIT_ADCV11_SET_SAMPLE_RATE": "%1 Set sample rate %2",
  "UNIT_ADCV11_SET_MODE": "%1 Set mode %2",
  "UNIT_ADCV11_GET_ADC_RAW_VALUE": "%1 Get ADC raw value (return int)",
  "UNIT_ADCV11_GET_VOLTAGE": "%1 Get voltage (return float)",
  "MODULE_4ENCODERMOTOR": "4Encoder Motor",
  "MODULE_4ENCODERMOTOR_INIT": "Init device I2C address %1 (0x01 ~ 0x7f)",
  "MODULE_4ENCODERMOTOR_SET_MODE": "Set motor %2 mode %1 ",
  "MODULE_4ENCODERMOTOR_SET_MODE_ALL": "Set all motors mode %1 ",
  "MODULE_4ENCODERMOTOR_SET_PWM_DUTYCYCLE": "Set motor %1 pwm dutycycle %2 (-127 ~ 127)",
  "MODULE_4ENCODERMOTOR_SET_MOTOR_ENCODER_VALUE": "Set motor %1 encoder value %2",
  "MODULE_4ENCODERMOTOR_SET_POS_ENCODER_VALUE": "Set motor %1 position encoder value %2",
  "MODULE_4ENCODERMOTOR_SET_POS_MAX_SPEED_VALUE": "Set motor %1 position maximum speed value %2 (-127 ~ 127)",
  "MODULE_4ENCODERMOTOR_SET_POS_PID_VALUE": "Set motor %1 position P %2 I %3 D %4 value",
  "MODULE_4ENCODERMOTOR_SET_SPEED_PID_VALUE": "Set motor %1 speed P %2 I %3 D %4 value",
  "MODULE_4ENCODERMOTOR_SET_SPEED_POINT_VALUE": "Set motor %1 speed point value %2 (-127 ~ 127)",
  "MODULE_4ENCODERMOTOR_SET_I2C_ADDRESS": "Set device I2C address %1",
  "MODULE_4ENCODERMOTOR_GET_MOTOR_ENCODER_VALUE": "Get motor %1 encoder value (return int)",
  "MODULE_4ENCODERMOTOR_GET_MOTOR_SPEED_VALUE": "Get motor %1 speed value (return int)",
  "MODULE_4ENCODERMOTOR_GET_VIN_CURRENT_FLOAT_VALUE": "Get Vin current value (A, return float)",
  "MODULE_4ENCODERMOTOR_GET_VIN_CURRENT_VALUE": "Get Vin current value (mA, return int)",
  "MODULE_4ENCODERMOTOR_GET_VIN_ADC_RAW8_VALUE": "Get Vin adc 8bit raw value (return int)",
  "MODULE_4ENCODERMOTOR_GET_VIN_ADC_RAW12_VALUE": "Get Vin adc 12bit raw value (return int)",
  "MODULE_4ENCODERMOTOR_GET_VIN_VOLTAGE_VALUE": "Get Vin voltage value (return int)",
  "MODULE_4ENCODERMOTOR_GET_DEVICE_SPEC": "Get device %1 spec detail (return int)",
  "MODULE_4ENCODERMOTOR_GET_MOTOR_POS_PID_VALUE": "Get motor %1 position PID value (return list)",
  "MODULE_4ENCODERMOTOR_GET_MOTOR_SPEED_PID_VALUE": "Get motor %1 speed PID value (return list)",
  "MODULE_4ENCODERMOTOR_SET_ENCODER_MODE_DIRECTION": "Set encoder mode direction %1",
  "MODULE_4ENCODERMOTOR_GET_ENCODER_MODE_DIRECTION": "Get encoder mode direction (return int)",
  "HAT_DAC2": "DAC2",
  "HAT_DAC2_SETDACOUTPUTVOLTAGERANGE": "Set %1 output voltage range %2",
  "HAT_DAC2_SETVOLTAGE": "Set %1 channel %3 output voltage %2 (V)",
  "HAT_DAC2_SETVOLTAGEBOTH": "Set %1 channel0 output voltage %2 (V) channel1 output voltage %3 (V)",
  "UNIT_MINICAN": "Mini CAN",
  "UNIT_MINICAN_INIT": " %1 Init bus %2 extframe %3 mode %4 baudrate %5 TX %6 RX %7",
  "UNIT_MINICAN_SET_FILTER": " %1 Set filter bank %2 mode %3 message %4",
  "UNIT_MINICAN_SEND": "%1 Send message %2 with id %3",
  "UNIT_MINICAN_RECV": "%1 Receive message (return bytes)",
  "UNIT_MINICAN_GET_REMOTEID": "%1 Get remote ID (return int)",
  "UNIT_MINICAN_RESTART": "%1 Restart",
  "UNIT_MINICAN_CLEARFILTER": "%1 Clear filter",
  "UNIT_MINICAN_CLEAR_TX_QUEUE": "%1 Clear TX queue",
  "UNIT_MINICAN_CLEAR_RX_QUEUE": "%1 Clear RX queue",
  "UNIT_MINICAN_STATE": "%1 Get state of the controller (return 0 ~ 3)",
  "UNIT_MINICAN_ANY": "%1 If any message waiting on the FIFO %2 (return True or False)",
  "UNIT_MINICAN_DEINIT": "%1 Deinit",
  "UNIT_WEIGHTI2C": "Weight I2C",
  "UNIT_WEIGHTI2C_INIT": "%1 Init device I2C address %2 (0x01 ~ 0x7f)",
  "UNIT_WEIGHTI2C_SET_CALIBRATION": "%1 Set calibration %2 zero weight in gram %3 zero weight adc %4 load weight in gram %5 load weight adc %6",
  "UNIT_WEIGHTI2C_SET_LOWPASS_FILTER": "%1 Set lowpass filter %2",
  "UNIT_WEIGHTI2C_SET_AVERAGE_FILTER_LEVEL": "%1 Set average filter level value %2 (0 ~ 50)",
  "UNIT_WEIGHTI2C_SET_EMA_FILTER_ALPHA": "%1 Set EMA filter alpha value %2 (0 ~ 99)",
  "UNIT_WEIGHTI2C_SET_I2C_ADDRESS": "%1 Set device I2C address %2 (0x01 ~ 0x7f)",
  "UNIT_WEIGHTI2C_SET_RESET_OFFSET": "%1 Reset offset (Tare)",
  "UNIT_WEIGHTI2C_GET_ADC_RAW_VALUE": "%1 Get adc raw value (return int)",
  "UNIT_WEIGHTI2C_GET_WEIGHT_IN_FLOAT": "%1 Get weight in float (return float)",
  "UNIT_WEIGHTI2C_GET_WEIGHT_IN_INT": "%1 Get weight in int (return int)",
  "UNIT_WEIGHTI2C_GET_WEIGHT_IN_STR": "%1 Get weight in string (return string)",
  "UNIT_WEIGHTI2C_GET_LOWPASS_FILTER": "%1 Get lowpass filter (return True or False)",
  "UNIT_WEIGHTI2C_GET_AVERAGE_FILTER_LEVEL": "%1 Get average filter level (return int)",
  "UNIT_WEIGHTI2C_GET_EMA_FILTER_ALPHA": "%1 Get EMA filter alpha (return int)",
  "UNIT_WEIGHTI2C_GET_DEVICE_SPEC": "%1 Get device %2 spec detail (return int)",
  "BUTTON_PIN_INIT": "Init button pin %1",
  "MODULE_USB_INIT_MAX3421": "Init Max3421 usb module %1 sclk %2 mosi %3 miso %4 cs %5 irq %6",
  "MODULE_USB_INIT_MAX3421_CONFIG_IRQ": "irq",
  "USBV12_MODULE": "USB V1.2",
  "STAMP_CATM_HTTP_SERVICES": "%1 HTTP services %2 method %3 %4 url %5 path %6 headers %7 %8 payload %9",
  "MODULE_PPS": "PPS",
  "MODULE_PPS_INIT": "Init device I2C address %1 (0x01 ~ 0x7f)",
  "MODULE_PPS_SETOUTPUT": "Set output %1",
  "MODULE_PPS_ENABLEOUTPUT": "Enable the output",
  "MODULE_PPS_DISABLEOUTPUT": "Disable the output",
  "MODULE_PPS_SETOUTPUTVOLTAGE": "Set output voltage %1 (V, 0 ~ 30)",
  "MODULE_PPS_SETOUTPUTCURRENT": "Set output current %1 (A, 0 ~ 5)",
  "MODULE_PPS_READPSURUNNINGMODE": "Get PSU running mode (return int)",
  "MODULE_PPS_READOUTPUTCURRENT": "Get output current (A, return float)",
  "MODULE_PPS_READOUTPUTVOLTAGE": "Get output voltage (V, return float)",
  "MODULE_PPS_READINPUTVOLTAGE": "Get input voltage (V, return float)",
  "MODULE_PPS_READDATAUPDATEFLAG": "Get data update flag (return int)",
  "MODULE_PPS_READMCUTEMPERATURE": "Get MCU temperature (°C, return float)",
  "MODULE_PPS_READMODULEID": "Get module ID (return int)",
  "MODULE_PPS_READUID": "Get unique identifier (UID) (return bytearray)",
  "MODULE_PPS_GETI2CADDRESS": "Get current I2C address (return int)",
  "MODULE_PPS_SETI2CADDRESS": "Set I2C address %1 (0x01 ~ 0x7f)",
  "BLYNK_CATEGORY": "Blynk",
  "IOT_BLYNK2": "Blynk loT (V2)",
  "IOT_BLYNK2_INIT": "Init blynk %1 Authtoken %2",
  "IOT_BLYNK2_INIT_SERVER": "Init blynk %1 Server %2 port %3 Authtoken %4 SSL/TLS %5 heartbeat %6",
  "IOT_BLYNK2_CONNECT": "%1 Connect the server",
  "IOT_BLYNK2_DISCONNECT": "%1 Disconnect the server",
  "IOT_BLYNK2_SET_VIRTUAL_WRITE": "Set %1 Virtual write pin %2 (0 ~ 255) data %3",
  "IOT_BLYNK2_SET_SYNC_VIRTUAL": "Set %1 Sync virtual pin %2 (0 ~ 255)",
  "IOT_BLYNK2_RUN": "%1 Run in Loop",
  "IOT_BLYNK2_EVENT_READ": "%1 On event V%2 read value %3 %4",
  "IOT_BLYNK2_EVENT_READ_PIN": "%1 On event V* read value %2 pin %3 %4",
  "IOT_BLYNK2_GET_STATE": "%1 Get server connection status (return int)",
  "HAT_BUGC2": "BUGC2",
  "HAT_BUGC2_INIT": "%1 Init device I2C address %2 (0x01 ~ 0x7f)",
  "HAT_BUGC2_SET_MOTOR_SPEED": "%1 Set motor %2 speed %3 (-100 ~ 100)",
  "HAT_BUGC2_SET_RGB_COLOR": "%1 set RGB %2 color %3",
  "HAT_BUGC2_SET_I2C_ADDRESS": "%1 Set device I2C address %2 (0x01 ~ 0x7f)",
  "HAT_BUGC2_GET_ADC_RAW_VALUE": "%1 Get adc %2 raw value (return int)",
  "HAT_BUGC2_GET_DEVICE_SPEC": "%1 Get device %2 spec detail (return int)",
  "HAT_BUGC2_GET_BAT_VOLTAGE": "%1 Get battery voltage (mV, return int)",
  "HAT_BUGC2_RX_CB": "%1 IR NEC receive callback data %2 address %3 %4",
  "MODULE_LAN_SET_IFCONFIG": "Set ifconfig %1 ip %2 subnet %3 gateway %4 dns %5",
  "LAN_BASE_SET_IFCONFIG": "Set ifconfig %1 ip %2 subnet %3 gateway %4 dns %5",
  "UNIT_BLDCDRIVER": "BLDC Driver",
  "UNIT_BLDCDRIVER_INIT": "%1 Init devide I2C address %2 (0x01 ~ 0x7f)",
  "UNIT_BLDCDRIVER_SET_I2C_ADDRESS": "%1 Set device I2C address %2 (0x01 ~ 0x7f)",
  "UNIT_BLDCDRIVER_SET_MODE": "%1 Set %2 mode",
  "UNIT_BLDCDRIVER_SET_DIRECTION": "%1 Set motor direction %2",
  "UNIT_BLDCDRIVER_SET_MOTOR_MODEL": "%1 Set motor %2 model",
  "UNIT_BLDCDRIVER_SET_POLE_PAIRS": "%1 Set %2 number of pole pairs",
  "UNIT_BLDCDRIVER_SET_OPEN_LOOP_PWM": "%1 Set open loop pwm dutycycle value %2 (0 ~ 2047)",
  "UNIT_BLDCDRIVER_SET_RPM_FLOAT": "%1 Set motor rpm %2 value in float",
  "UNIT_BLDCDRIVER_SET_RPM_INT": "%1 Set mortor rpm %2 value in int",
  "UNIT_BLDCDRIVER_SET_PID": "%1 set P %2 I %3 D %4 value",
  "UNIT_BLDCDRIVER_SAVE": "%1 Save current motor data in flash",
  "UNIT_BLDCDRIVER_GET_MODE": "%1 Get current mode (return 0 or 1)",
  "UNIT_BLDCDRIVER_GET_DIRECTION": "%1 Get motor current direction (return 0 or 1)",
  "UNIT_BLDCDRIVER_GET_MOTOR_MODEL": "%1 Get motor current model (return 0 or 1)",
  "UNIT_BLDCDRIVER_GET_MOTOR_POLE_PAIRS": "%1 Get motor number of pole pairs (return int)",
  "UNIT_BLDCDRIVER_GET_STATUS": "%1 Get motor status (return int)",
  "UNIT_BLDCDRIVER_GET_PWM": "%1 Get open loop pwm dutycycle value (return int)",
  "UNIT_BLDCDRIVER_GET_READ_BACK_RPM_FLOAT": "%1 Get read back rpm value in float (return float)",
  "UNIT_BLDCDRIVER_GET_READ_BACK_RPM_INT": "%1 Get read back rpm value in int (return int)",
  "UNIT_BLDCDRIVER_GET_READ_BACK_RPM_STR": "%1 Get read back rpm value in str (return str)",
  "UNIT_BLDCDRIVER_GET_READ_BACK_FREQ_FLOAT": "%1 Get read back freq value in float (return float)",
  "UNIT_BLDCDRIVER_GET_READ_BACK_FREQ_INT": "%1 Get read back freq value in int (return int)",
  "UNIT_BLDCDRIVER_GET_READ_BACK_FREQ_STR": "%1 Get read back freq value in str (return str)",
  "UNIT_BLDCDRIVER_GET_RPM_FLOAT": "%1 Get rpm value in float (return float)",
  "UNIT_BLDCDRIVER_GET_RPM_INT": "%1 Get rpm value in int (return int)",
  "UNIT_BLDCDRIVER_GET_PID": "%1 Get PID value (return tuple)",
  "UNIT_BLDCDRIVER_GET_DEVICE_SPEC": "%1 Get device %2 spec detail (return int)",
  "ROBOCAR_GET_TWO_CHANNEL_LINE_SENSOR": "Get two-channel line follower sensor 1 %1  2 %2",
  "ROBOCAR_GET_MULTI_CHANNEL_LINE_SENSOR": "Get multi-channel line follower sensor 1 %1 2 %2 3 %3 4 %4 5 %5",
  "BASE_DTUNB_RECEIVE_DATA": "Receive downlink data from buffer",
  "MODULE_LORAWAN_RECEIVE_DATA": "Receive downlink data from buffer",
  "UNIT_LORAWAN_RECEIVE_DATA": "%1 Receive downlink data from buffer",
  "EEPROM_DELETE_KEY": "EEPROM delete key %1",
  "ATOM_QRCODE2": "QRCode2",
  "ATOM_QRCODE2_INIT": "Init QRCode2 device %1",
  "ATOM_QRCODE2_GET_BAUDRATE": "Get QRCode2 uart baudrate (return int)",
  "ATOM_QRCODE2_GET_DATA_LENGTH": "Get QRCode2 data length (return int)",
  "ATOM_QRCODE2_GET_DATA": "Get QRCode2 data format %1 (return bytes or string)",
  "ATOM_QRCODE2_GET_FIRMWARE_VERSION": "Get QRCode2 firmware version (return string)",
  "ATOM_QRCODE2_GET_HARDWARE_MODEL": "Get QRCode2 hardware model (return string)",
  "ATOM_QRCODE2_SET_BAUDRATE": "Set QRCode2 uart baudrate %1",
  "ATOM_QRCODE2_SET_TRIGGER_MODE": "Set QRCode2 trigger mode %1",
  "ATOM_QRCODE2_SET_TRIGGER_KEY": "Set QRCode2 manual key trigger pulse",
  "ATOM_QRCODE2_SET_TRIGGER_CMD": "Set QRCode2 manual command trigger control %1",
  "ATOM_QRCODE2_SET_LIGHT_BRIGHTNESS": "Set QRCode2 scanner light brightness %1",
  "ATOM_QRCODE2_SET_CALLBACK": "When QRCode2 get data %1",
  "ATOM_QRCODE2_CALLBACK_IN_LOOP": "QRCode2 polling data in loop",
  "UNIT_NBIOT2": "NB-IoT2",
  "UNIT_NBIOT2_UART_PORT_ID": "%1 Set core uart ID number %2 (1 ~ 2)",
  "UNIT_NBIOT2_CHECK_SIM_CARD": "%1 Check modem SIM card status (return true of false)",
  "UNIT_NBIOT2_GET_IMEI": "%1 Get identification(IMEI) number (return string)",
  "UNIT_NBIOT2_GET_SINGLE_QUALITY": "%1 Get signal strength (return int)",
  "UNIT_NBIOT2_GET_IDENTIFICATION": "%1 Get model identification (return string)",
  "UNIT_NBIOT2_GET_GPRS_STATUS": "%1 Get gprs network status (return int)",
  "UNIT_NBIOT2_GET_PDP_CONTEXT_IP": "%1 Get show pdp ip address cid %2 (return string)",
  "UNIT_NBIOT2_DEBUG": "%1 Set AT command debug print %2",
  "UNIT_NBIOT2_SET_ENABLE_PDP_CONTEXT": "%1 Set define PDP context apn %2",
  "UNIT_NBIOT2_MQTT_SERVICE_CONFIG": "%1 MQTT service configure %2 server %3 port %4 client id %5 username %6 password %7 keepalive %8",
  "UNIT_NBIOT2_MQTT_SERVICE_CONNECT": "%1 MQTT server connect clean session %2",
  "UNIT_NBIOT2_MQTT_SERVER_DISCONNECT": "%1 MQTT server disconnect",
  "UNIT_NBIOT2_MQTT_SUBSCRIBE_TOPIC": "%1 MQTT subscribe topic %2 Qos %3 (0 ~ 2)",
  "UNIT_NBIOT2_MQTT_UNSUBSCRIBE_TOPIC": "%1 MQTT unsubscribe topic %2",
  "UNIT_NBIOT2_MQTT_PUBLISH_TOPIC": "%1 MQTT publish topic %2 payload %3 Qos %4(0~2)",
  "UNIT_NBIOT2_MQTT_SUBSCRIBE_TOPIC_CB": "%1 When MQTT receives subscribed data topic %2 msg %3",
  "UNIT_NBIOT2_MQTT_POLL": "%1 MQTT polling loop",
  "UNIT_NBIOT2_MQTT_SERVER_IS_CONNECT": "%1 Check MQTT server is connect %2 (return true of false)",
  "UNIT_NBIOT2_HTTP_REQUEST": "%1 http request %2 method %3 %4 url %5 header %6 data %7",
  "UNIT_NBIOT2_HTTP_TERMINATE": "%1 http server terminated",
  "UNIT_NBIOT2_HTTP_STATUS_CODE": "%1 Get http response status code(return int)",
  "UNIT_NBIOT2_HTTP_DATA": "%1 Get http data content (return string)",
  "UNIT_ROLLER485": "Roller485",
  "UNIT_ROLLER485_INIT": "%1 Init roller COM mode",
  "UNIT_ROLLER485_INIT_MSG1": "I2C address",
  "UNIT_ROLLER485_INIT_MSG2": "motor ID",
  "UNIT_ROLLER485_INIT_485": "%1 Init rooler COM mode 485 motor ID %2 %3",
  "UNIT_ROLLER485_INIT_485I2C": "%1 Init rooler COM mode 485 -> I2C address %2 motor ID %3 %4",
  "UNIT_ROLLER485_GET_MOTOR_OUTPUT_STATUS": "%1 Get motor output status (return int)",
  "UNIT_ROLLER485_GET_MOTOR_CURRENT_MODE": "%1 Get motor current mode (return int)",
  "UNIT_ROLLER485_GET_MOTOR_ERROR_CODE": "%1 Get motor error code (return int)",
  "UNIT_ROLLER485_GET_MOTOR_ID": "%1 Get motor 485 id (return int)",
  "UNIT_ROLLER485_GET_MOTOR_BAUDRATE": "%1 Get motor 485 baudrate (return int)",
  "UNIT_ROLLER485_GET_RGB_MODE": "%1 Get RGB mode (return int)",
  "UNIT_ROLLER485_GET_RGB_COLOR": "%1 Get RGB color (return tuple)",
  "UNIT_ROLLER485_GET_RGB_BRIGHTNESS": "%1 Get RGB color brightness(return int)",
  "UNIT_ROLLER485_GET_VIN_VALUE": "%1 Get device input voltage (mV, return int)",
  "UNIT_ROLLER485_GET_TEMPERATURE": "%1 Get device temperature (°C, return int)",
  "UNIT_ROLLER485_SET_MOTOR_OUTPUT_CONTROL": "%1 Set motor output control %2",
  "UNIT_ROLLER485_SET_MOTOR_MODE": "%1 Set motor mode %2",
  "UNIT_ROLLER485_SET_MOTOR_OVER_RANGE_PROTECT": "%1 Set motor over range protection %2",
  "UNIT_ROLLER485_SET_BUTTON_CHANGE_MODE": "%1 Set motor mode change via button %2",
  "UNIT_ROLLER485_SET_REMOVE_PROTECT": "%1 Set release jam protection",
  "UNIT_ROLLER485_SET_STALL_PROTECT": "%1 Set motor stall protection %2",
  "UNIT_ROLLER485_SET_MOTOR_ID": "%1 Set motor 485 id %2",
  "UNIT_ROLLER485_SET_MOTOR_BAUDRATE": "%1 Set motor 485 baudrate %2",
  "UNIT_ROLLER485_SET_RGB_MODE": "%1 Set RGB mode %2",
  "UNIT_ROLLER485_SET_RGB_COLOR": "%1 Set RGB color %2",
  "UNIT_ROLLER485_SET_RGB_BRIGHTNESS": "%1 Set RGB brightness %2",
  "UNIT_ROLLER485_SET_DATA_SAVE_IN_FLASH": "%1 Set current setting save in flash",
  "UNIT_ROLLER485_GET_MOTOR_SPEED_READBACK": "%1 Get motor speed readback value %2 (rpm, return float)",
  "UNIT_ROLLER485_GET_MOTOR_SPEED_PID": "%1 Get motor speed pid (return tuple)",
  "UNIT_ROLLER485_SET_MOTOR_SPEED_CURRENT": "%1 Set motor speed %2 rpm max current %3 mA",
  "UNIT_ROLLER485_SET_MOTOR_SPEED_PID": "%1 Set motor speed P %2 I %3 D %4",
  "UNIT_ROLLER485_GET_MOTOR_POSITON_READBACK": "%1 Get motor position readback value %2 (return float)",
  "UNIT_ROLLER485_GET_MOTOR_POSITON_PID": "%1 Get motor position pid (return tuple)",
  "UNIT_ROLLER485_SET_MOTOR_POSITION_CURRENT_SETTING": "%1 Set motor position %2 count max current %3 mA",
  "UNIT_ROLLER485_SET_MOTOR_POSITION_PID": "%1 Set motor position P %2 I %3 D %4",
  "UNIT_ROLLER485_GET_MOTOR_CURRENT_READBACK": "%1 Get motor current readback value %2 (return float)",
  "UNIT_ROLLER485_SET_MOTOR_MAX_CURRENT": "%1 Set motor max current %2 mA",
  "UNIT_ROLLER485_GET_ENCODER_VALUE": "%1 Get motor encoder count value (return float)",
  "UNIT_ROLLER485_SET_ENCODER_VALUE": "%1 Set motor encoder count %2",
  "UNIT_ROLLER485_GET_MOTOR_SPEED_SETTING": "%1 Get motor speed setting value (rpm, return float)",
  "UNIT_ROLLER485_GET_MOTOR_SPEED_MAX_CURRENT": "%1 Get motor speed max current setting value %2 (mA, return float)",
  "UNIT_ROLLER485_GET_MOTOR_POSITION_SETTING": "%1 Get motor position setting value (return float)",
  "UNIT_ROLLER485_GET_MOTOR_POSITION_MAX_CURRENT": "%1 Get motor position max current setting value %2 (mA, return float)",
  "UNIT_ROLLER485_GET_MOTOR_MAX_CURRENT": "%1 Get motor max current setting value %2 (mA, return float)",
  "UNIT_ROLLER485_GET_DEVICE_SPEC": "%1 Get device spec %2 info (return int)",
  "UNIT_ROLLER485_SET_I2C_ADDRESS": "%1 Set device i2c address %2",
  "UNIT_LORAE220433": "LoRaE220-433",
  "UNIT_LORAE220433_SETUP_UART_ID": "%1 Setup uart ID %2 baudrate %3 parity %4",
  "UNIT_LORAE220433_SETUP": "%1 Setup LoRa E220 module %2 Address (0x0000 ~ 0xFFFF) %3 Channel (0 ~ 83) %4 Encryption key (0x0000 ~ 0xFFFF) %5",
  "UNIT_LORAE220433_READ_CONFIGURE_PARAM": "%1 Read configuration parameters",
  "UNIT_LORAE220433_GET_SETUP_PARAMETER": "%1 Get LoRa E220 setup %2 parameter (return int)",
  "UNIT_LORAE220433_AVAILABLE_DATA": "%1 Available of data count (return int)",
  "UNIT_LORAE220433_RECEIVE_DATA_TIMEOUT": "%1 Get receive data timeout %2 ms (return list [data, rssi])",
  "UNIT_LORAE220433_SEND_STR": "%1 Send %2 address %3 (0x0000 ~ 0xFFFF) channel %4 (0 ~ 83)",
  "UNIT_LORAE220433_SEND_LIST": "%1 Send raw data %2 address %3 (0x0000 ~ 0xFFFF) channel %4 (0 ~ 83)",
  "UNIT_LORAE220433_RECEIVE_CB": "When %1 receive data (bytes) %2 RSSI (dB) %3",
  "UNIT_LORAE220433_RECEIVE_STR_CB": "When %1 receive data (string) %2 RSSI (dB) %3",
  "UNIT_LORAE220433_RECEIVE_IN_LOOP_CB": "ID:%1 When LoRa received data %2 %3 RSSI (dB) %4",
  "UNIT_LORAE220433_RECEIVE_IN_LOOP": "ID:%1 %2 Start Receive data",
  "UNIT_LORAE220433_STOP_RECEIVE": "%1 Stop receive data",
  "GUIDE_DEVICE_SETTING_APIKEY": "Click the api key to open setting pannel",
  "GUIDE_DEVELOP_TITLE": "Develop",
  "GUIDE_INTERFACE_TITLE": "Interface Introduction",
  "UNIT_LORAE220433_SETUP_MSG1": "Baudrate",
  "UNIT_LORAE220433_SETUP_MSG2": "Parity",
  "UNIT_LORAE220433_SETUP_MSG3": "Data Rate (bps)",
  "UNIT_LORAE220433_SETUP_MSG4": "Subpacket size (byte)",
  "UNIT_LORAE220433_SETUP_MSG5": "RSSI ambient noise",
  "UNIT_LORAE220433_SETUP_MSG6": "TX power (dBm)",
  "UNIT_LORAE220433_SETUP_MSG7": "RSSI byte",
  "UNIT_LORAE220433_SETUP_MSG8": "Transmissiton method mode",
  "UNIT_LORAE220433_SETUP_MSG9": "LBT",
  "UNIT_LORAE220433_SETUP_MSG10": "WOR (ms)",
  "UNIT_SCROLL": "Scroll",
  "UNIT_SCROLL_INIT": "%1 Init i2c address %2",
  "UNIT_SCROLL_SET_ENCODER_VALUE": "%1 Set encoder count value %2",
  "UNIT_SCROLL_SET_LED_COLOR": "%1 Set RGB led color %2",
  "UNIT_SCROLL_RESET_ENCODER": "%1 Reset encoder count",
  "UNIT_SCROLL_SET_ENCODER_MODE": "%1 Set encoder mode %2",
  "UNIT_SCROLL_SET_I2C_ADDRESS": "%1 Set I2C address %2",
  "UNIT_SCROLL_GET_ENCODER_VALUE": "%1 Get encoder count value (return int)",
  "UNIT_SCROLL_GET_BUTTON_STATUS": "%1 Get button status (return True or False)",
  "UNIT_SCROLL_GET_LED_COLOR": "%1 Get RGB led color (return list)",
  "UNIT_SCROLL_GET_INCREMENT_VALUE": "%1 Get increment value (return int)",
  "UNIT_SCROLL_GET_ENCODER_MODE": "%1 Get encoder mode (return int)",
  "UNIT_SCROLL_GET_DEVICE_SPEC": "%1 Get device spec info %2",
  "UNIT_TMOS": "TMOS PIR",
  "UNIT_TMOS_GET_DATA_READY": "%1 Get data update status (return True or False)",
  "UNIT_TMOS_GET_MOTION_STATE": "%1 Get motion detection state (return True or False)",
  "UNIT_TMOS_GET_PRESENCE_STATE": "%1 Get presence detection state (return True or False)",
  "UNIT_TMOS_GET_PRESENCE_VALUE": "%1 Get presence value (cm^-1, return int)",
  "UNIT_TMOS_GET_MOTION_VALUE": "%1 Get motion value (cm^-1, return int)",
  "UNIT_TMOS_GET_GAIN_MODE": "%1 Get gain mode (return int)",
  "UNIT_TMOS_GET_TMOS_SENSITIVITY": "%1 Get sensitivity (return float)",
  "UNIT_TMOS_GET_TAMB_SHOCK_STATE": "%1 Get ambient temperature shock detection state (return True or False)",
  "UNIT_TMOS_GET_TEMPERATURE_DATA": "%1 Get object temperature (return float)",
  "UNIT_TMOS_GET_TAMBIENT_RAW_VALUE": "%1 Get ambient temperature (return int)",
  "UNIT_TMOS_GET_PRESENCE_THRESHOLD": "%1 Get presence threshold (return int)",
  "UNIT_TMOS_GET_MOTION_THRESHOLD": "%1 Get motion threshold (return int)",
  "UNIT_TMOS_GET_TAMBIENT_SHOCK_THRESHOLD": "%1 Get ambient temperature shock threshold (return int)",
  "UNIT_TMOS_GET_PRESENCE_HYSTERESIS": "%1 Get presence detection hysteresis value (return int)",
  "UNIT_TMOS_GET_MOTION_HYSTERESIS": "%1 Get motion detection hysteresis value (return int)",
  "UNIT_TMOS_GET_TAMBIENT_SHOCK_HYSTERESIS": "%1 Get ambient temperature shock detection hysteresis value (return int)",
  "UNIT_TMOS_SET_GAIN_MODE": "%1 Set gain mode to %2",
  "UNIT_TMOS_SET_TMOS_SENSITIVITY": "%1 Set sensitivity to %2 (0 ~ 4080)",
  "UNIT_TMOS_SET_PRESENCE_THRESHOLD": "%1 Set presence threshold to %2 (0 ~ 32767)",
  "UNIT_TMOS_SET_MOTION_THRESHOLD": "%1 Set motion threshold to %2 (0 ~ 32767)",
  "UNIT_TMOS_SET_TAMBIENT_SHOCK_THRESHOLD": "%1 Set ambient temperature shock threshold to %2 (0 ~ 32767)",
  "UNIT_TMOS_SET_PRESENCE_HYSTERESIS": "%1 Set presence detection hysteresis value to %2 (0 ~ 255)",
  "UNIT_TMOS_SET_MOTION_HYSTERESIS": "%1 Set motion detection hysteresis value to %2 (0 ~ 255)",
  "UNIT_TMOS_SET_TAMBIENT_SHOCK_HYSTERESIS": "%1 Set ambient temperature shock detection hysteresis value to %2 (0 ~ 255)",
  "UNIT_TMOS_CALLBACK": "When %1 was %2 detect",
  "UNIT_TMOS_TICK": "%1 Update in loop",
  "UNIT_DMX": "DMX",
  "UNIT_DMX_INIT": "Init %1 mode %2 UART %3",
  "UNIT_DMX_WRITE_VALUE": "%1 Set channel %2 (1 ~ 512) value %3 (0 ~ 255)",
  "UNIT_DMX_CLEAR_BUFFER": "%1 Clear all channel values",
  "UNIT_DMX_DEINIT": "%1 Deinit",
  "UNIT_DMX_READ_VALUE": "%1 Get channel %2 (1 ~ 512) value (return int)",
  "UNIT_CATM_AT_COMMAND_TESTER": "%1 AT command tester CMD %2 keyword %3 timeout %4 format %5 (return list)",
  "COM_GSM_AT_COMMAND_TESTER": "AT command tester CMD %1 keyword %2 timeout %3 format %4 (return list)",
  "USB_MOUSE_GET_CLICK_STATUS": "Get mouse button status %1 click (return True or False)",
  "UNIT_MIDI": "MIDI",
  "UNIT_MIDI_SET_NOTE_ON": "%1 Set note on channel %2 pitch %3 (0 ~ 127) velocity %4 (0 ~ 127)",
  "UNIT_MIDI_SET_NOTE_ON_PITCH": "%1 Set note on channel %2 pitch %3 velocity %4 (0 ~ 127)",
  "UNIT_MIDI_SET_NOTE_OFF": "%1 Set note off channel %2 pitch %3 (0 ~ 127)",
  "UNIT_MIDI_SET_CHANGE_INSTRUMENT": "%1 Set instrument bank %2 (0 or 127) channel %3 value %4 (1 ~ 128)",
  "UNIT_MIDI_SET_INSTRUMENT_GENERAL_MIDI": "%1 Set general instrument channel %2 name %3",
  "UNIT_MIDI_SET_INSTRUMENT_VARIATION": "%1 Set MT-32 instrument channel %2 name %3",
  "UNIT_MIDI_SET_DRUMS_INSTRUMENT": "%1 Set drums instrument name %2 velocity %3 (0 ~ 127)",
  "UNIT_MIDI_SET_PITCH_BEND": "%1 Set pitch bend channel %2  value %3 (0 ~ 1023)",
  "UNIT_MIDI_SET_PITCH_BEND_RANGE": "%1 Set pitch bend range channel %2 value %3 (0 ~ 255)",
  "UNIT_MIDI_SET_DEVICE_RESET": "%1 Reset",
  "UNIT_MIDI_SET_CHANNEL_VOLUME": "%1 Set channel %2 volume %3 (0 ~ 100)",
  "UNIT_MIDI_SET_ALL_NOTE_OFF": "%1 Set all notes off channel %2",
  "UNIT_MIDI_SET_MASTER_VOLUME": "%1 Set master volume %2 (0 ~ 100)",
  "UNIT_MIDI_SET_REVERB": "%1 Set reverb %2 channel %3 program %4 level (0 ~ 127) %5 delay feedback (0 ~ 255) %6",
  "UNIT_MIDI_SET_CHORUS": "%1 Set chorus %2 channel %3 program %4 level (0 ~ 127) %5 feedback (0 ~ 255) %6 chorusdelay (0 ~ 255) %7",
  "UNIT_MIDI_SET_PAN": "%1 Set pan channel %2 value %3 (0 ~ 127)",
  "UNIT_MIDI_SET_EQ": "%1 Set equalizer %2 channel %3 low band (0 ~ 127) %4 medium low band (0 ~ 127) %5 medium high band (0 ~ 127) %6 high band (0 ~ 127) %7 low freq (0 ~ 127) %8 medium low freq (0 ~ 127) %9 medium high freq (0 ~ 127) %10 high freq (0 ~ 127) %11",
  "UNIT_MIDI_SET_TUNING": "%1 Set tuning %2 channel %3 fine tuning (0 ~ 127) %4 coarse tunning (0 ~ 127) %5",
  "UNIT_MIDI_SET_VIBRATE": "%1 Set vibrate %2 channel %3 rate (0 ~ 127) %4 depth (0 ~ 127) %5 delay (0 ~ 127) %6",
  "UNIT_MIDI_SET_TVF": "%1 Set TVF %2 channel %3 cutoff freq (0 ~ 127) %4 resonance (0 ~ 127) %5",
  "UNIT_MIDI_SET_ENVELOPE": "%1 Set envelope time %2 channel %3 attack (0 ~ 127) %4 decay (0 ~ 127) %5 release (0 ~ 127) %6",
  "UNIT_MIDI_SET_SCALE_TUNING": "%1 Set scale tuning %2 channel %3 v1 (0 ~ 127) %4 v2 (0 ~ 127) %5 v3 (0 ~ 127) %6 v4 (0 ~ 127) %7 v5 (0 ~ 127) %8 v6 (0 ~ 127) %9 v7 (0 ~ 127) %10 v8 (0 ~ 127) %11 v9 (0 ~ 127) %12 v10 (0 ~ 127) %13 v11 (0 ~ 127) %14 v12 (0 ~ 127) %15",
  "UNIT_MIDI_SET_MOD_WHEEL": "%1 Set modulation wheel %2 channel %3 pitch (0 ~ 127) %4 TVT cutoff (0 ~ 127) %5 amplitude (0 ~ 127) %6 rate (0 ~ 127) %7 pitch depth (0 ~ 127) %8 TVF depth (0 ~ 127) %9 TVA depth (0 ~ 127) %10",
  "UNIT_MIDI_SET_ALL_DRUMS": "%1 Set all channels drums",
  "UNIT_JOYSTICK2": "JoyStick2",
  "UNIT_JOYSTICK2_INIT": "%1 Init I2C address %2 (0x08 ~ 0x77)",
  "UNIT_JOYSTICK2_SET_ADDRESS": "%1 Set I2C address %2 (0x08 ~ 0x77)",
  "UNIT_JOYSTICK2_SET_AXIS_X_INVERT": "%1 Invert x-axis %2",
  "UNIT_JOYSTICK2_SET_AXIS_Y_INVERT": "%1 Invert y-axis %2",
  "UNIT_JOYSTICK2_SET_AXIS_SWAP": "%1 Swap x-axis and y-axis %2",
  "UNIT_JOYSTICK2_GET_BUTTON_STATUS": "%1 Get button status (return True or False)",
  "UNIT_JOYSTICK2_GET_ADC_VALUE": "%1 Get ADC value (return tuple)",
  "UNIT_JOYSTICK2_FILL_COLOR": "%1 Fill color %2",
  "UNIT_JOYSTICK2_GET_X_RAW": "%1 Get ADC value of x-axis",
  "UNIT_JOYSTICK2_GET_Y_RAW": "%1 Get ADC value of y-axis",
  "UNIT_JOYSTICK2_GET_X_POSITION": "%1 Get x-axis position",
  "UNIT_JOYSTICK2_GET_Y_POSITION": "%1 Get y-axis position",
  "UNIT_JOYSTICK2_GET_FIRMWARE_VERSION": "%1 Get firmware version (return int)",
  "UNIT_JOYSTICK2_GET_AXIS_POSITION": "%1 Get position (return tuple)",
  "UNIT_JOYSTICK2_SET_DEADZONE_ADC": "%1 Set deadzone with ADC value X %2 (0 ~ 32768) and Y %3 (0 ~ 32768)",
  "UNIT_JOYSTICK2_SET_DEADZONE_POSITION": "%1 Set deadzone with position X %2 (0 ~ 4096) and Y %3 (0 ~ 4096)",
  "UNIT_JOYSTICK2_SET_AXIS_X_MAPPING": "%1 Set mapping parameters of the x-axis with %2 min negative ADC value (0 ~ 65536) %3 max negative ADC value (0 ~ 65536) %4 min positive ADC value (0 ~ 65536) %5 max positive ADC value (0 ~ 65536) %6",
  "UNIT_JOYSTICK2_SET_AXIS_Y_MAPPING": "%1 Set mapping parameters of the y-axis with %2 min negative ADC value (0 ~ 65536) %3 max negative ADC value (0 ~ 65536) %4 min positive ADC value (0 ~ 65536) %5 max positive ADC value (0 ~ 65536) %6",
  "UNIT_JOYSTICK2_SET_LED_BRIGHTNESS": "%1 Set LED brightness %2 % (0 ~ 100)",
  "UNIT_TIMERPWR": "TimerPWR",
  "UNIT_TIMERPWR_INIT": "Init %1 I2C address %2",
  "UNIT_TIMERPWR_GET_FIRMWARE_VERSION": "Get %1 firmware version (return int)",
  "UNIT_TIMERPWR_GET_BATTERY_VOLTAGE": "Get %1 battery voltage in millivolt (return int)",
  "UNIT_TIMERPWR_GET_BATTERY_CURRENT": "Get %1 battery current in milliamperes (return int)",
  "UNIT_TIMERPWR_GET_USB_VOLTAGE": "Get %1 usb voltage in millivolt (return int)",
  "UNIT_TIMERPWR_GET_USB_CURRENT": "Get %1 usb current in milliamperes (return int)",
  "UNIT_TIMERPWR_GET_GROVE_VOLTAGE": "Get %1 grove voltage in millivolt (return int)",
  "UNIT_TIMERPWR_GET_GROVE_CURRENT": "Get %1 grove current in milliamperes (return int)",
  "UNIT_TIMERPWR_IS_CHARGING": "%1 is battery charging (return True or False)",
  "UNIT_TIMERPWR_GET_BUTTON_STATUS": "Get %1 button %2 status (return True or False)",
  "UNIT_TIMERPWR_SAVE_DATA_TO_FLASH": "Save %1 data to flash",
  "UNIT_TIMERPWR_GET_GROVE_OUTPUT_STATUS": "Get %1 grove output status (return True or False)",
  "UNIT_TIMERPWR_SET_GROVE_OUTPUT_STATUS": "Set %1 grove output %2",
  "UNIT_TIMERPWR_GET_OLED_BACKLIGHT_STATUS": "Get %1 grove oled backlight status (return True or False)",
  "UNIT_TIMERPWR_SET_OLED_BACKLIGHT_STATUS": "Set %1 oled backlight %2",
  "UNIT_TIMERPWR_SET_WAKEUP_TRIGGER": "Set %1 wake-up trigger %2",
  "UNIT_TIMERPWR_SET_SLEEP_TRIGGER": "Set %1 sleep trigger %2",
  "UNIT_TIMERPWR_SLEEP_ONCE": "Set %1 %2 sleep once after %3 wake up in %4",
  "UNIT_TIMERPWR_SLEEP_CYCLE": "Set %1 %2 sleep cycle after %3 wake up in %4",
  "UNIT_TIMERPWR_TIME_INPUT_MSG0": "hours (0 ~ 255)",
  "UNIT_TIMERPWR_TIME_INPUT_MSG1": "minutes (0 ~ 59)",
  "UNIT_TIMERPWR_TIME_INPUT_MSG2": "seconds (0 ~ 59)",
  "UNIT_TIMERPWR_USB_CALLBACK": "When %1 was USB %2",
  "UNIT_TIMERPWR_CHARGING_CALLBACK": "When %1 %2",
  "UNIT_TIMERPWR_BUTTON_CALLBACK": "When %1 button %2 was %3",
  "UNIT_TIMERPWR_TICK": "%1 check event in loop",
  "MODULE_LLM": "LLM",
  "MODULE_LLM_INIT": "Init LLM %1 with %2 UART %3 TX %4 RX %5",
  "MODULE_LLM_TICK": "Update %1 in loop",
  "MODULE_LLM_CHECK_CONNECTION": "%1 is connection normal (return True or False)",
  "MODULE_LLM_GET_RESPONSE_MSG_LIST": "Get %1 response msg list (return list)",
  "MODULE_LLM_CLEAR_RESPONSE_MSG_LIST": "Clear %1 response msg list",
  "MODULE_LLM_SYS_PING": "%1 Send ping signal",
  "MODULE_LLM_SYS_RESET": "Reset %1 wait reset finish %2",
  "MODULE_LLM_SYS_REBOOT": "Reboot %1",
  "MODULE_LLM_SETUP": "%1 setup LLM with %2 system prompt %3 version %4 %5 model %6 enoutput %7 enkws %8 max token length %9 request id %10",
  "MODULE_LLM_INFERENCE": "%1 LLM inference with %2 work id %3 input data %4 request id %5",
  "MODULE_LLM_TTS_INFERENCE": "%1 TTS inference with %2 work id %3 input data %4 timeout %5 request id %6",
  "MODULE_LLM_AUDIO_SETUP": "%1 Setup audio with %2 cap volume %3 play volume %4 request id %5",
  "MODULE_LLM_TTS_SETUP": "%1 Setup TTS with %2 model %3 input %4 enoutput %5 enkws %6 request id %7",
  "MODULE_LLM_KWS_SETUP": "%1 setup KWS with %2 wake-up keyword %3 model %4 enoutput %5 enaudio %6 request id %7",
  "MODULE_LLM_ASR_SETUP": "%1 Setup ASR with %2 model %3 enoutput %4 enkws %5 wake-up no content timeout %6 ASR no content timeout %7 ASR max recognition timeout %8 request id %9",
  "MODULE_LLM_BEGIN_VOICE_ASSISTANT": "%1 begin voice assistant preset with %2 wake-up keyword %3 system prompt %4 system language %5 (return True or False)",
  "MODULE_LLM_KEYWORD_DETECTED_CALLBACK": "When %1 detected keyword",
  "MODULE_LLM_ASR_DATA_INPUT_CALLBACK": "When %1 ASR data input %2 data %3 finish %4 index %5",
  "MODULE_LLM_DATA_INPUT_CALLBACK": "When %1 LLM data input %2 data %3 finish %4 index %5",
  "MODULE_LLM_GET_LATEST_LLM_WORK_ID": "Get %1 latest llm work id (return string)",
  "MODULE_LLM_GET_LATEST_AUDIO_WORK_ID": "Get %1 latest audio work id (return string)",
  "MODULE_LLM_GET_LATEST_TTS_WORK_ID": "Get %1 latest tts work id (return string)",
  "MODULE_LLM_GET_LATEST_KWS_WORK_ID": "Get %1 latest kws work id (return string)",
  "MODULE_LLM_GET_LATEST_ASR_WORK_ID": "Get %1 latest asr work id (return string)",
  "MODULE_LLM_GET_LATEST_ERROR_CODE": "Get %1 latest error code (return int)",
  "UNIT_PUZZLE": "Puzzle",
  "UNIT_PUZZLE_INIT": "Init %1 nodes quantity is %2 (1 ~ 100)",
  "UNIT_PUZZLE_SET_COLOR": "Set %1 index (1 ~ 64) %2 RGB color %3",
  "UNIT_PUZZLE_SET_BRIGHTNESS": "Set %1 brightness to %2 (0 ~ 100)",
  "UNIT_PUZZLE_SET_COLOR_FROM": "Set %1 from %2 to %3 RGB color %4",
  "UNIT_PUZZLE_SET_COLOR_ALL": "Set %1 all RGB color %2",
  "UNIT_PUZZLE_SET_SHOW_LOCK": "Set %1 show lock %2",
  "UNIT_PUZZLE_SHOW": "Show %1 RGB LED",
  "UNIT_PUZZLE_SET_HEXAGON_MATRIX": "hexagon matrix in",
  "UNIT_ROLLERCAN": "RollerCAN",
  "UNIT_ROLLERCAN_INIT_MSG0": "Init %1",
  "UNIT_ROLLERCAN_INIT_MSG1": "I2C address (0x08 ~ 0x77)",
  "UNIT_ROLLERCAN_INIT_MSG2": "Bus",
  "UNIT_ROLLERCAN_INIT_MSG3": "motor ID (0x00 ~ 0xFF)",
  "UNIT_ROLLERCAN_INIT_MSG4": "CAN obj",
  "UNIT_ROLLERCAN_GET_MOTOR_STATUS_MSG0": "get %1 motor status (return int)",
  "UNIT_ROLLERCAN_GET_MOTOR_OUTPUT_STATUS_MSG0": "get %1 motor output status (return True or False)",
  "UNIT_ROLLERCAN_GET_MOTOR_JAM_PROTECT_STATE_MSG0": "get %1 motor jam protect state (return True or False)",
  "UNIT_ROLLERCAN_GET_MOTOR_MODE_MSG0": "get %1 motor current mode (return int)",
  "UNIT_ROLLERCAN_GET_MOTOR_ERROR_CODE_MSG0": "get %1 motor error code (return int)",
  "UNIT_ROLLERCAN_GET_MOTOR_ID_MSG0": "get %1 motor CAN id (return int)",
  "UNIT_ROLLERCAN_GET_CAN_BAUDRATE_MSG0": "get %1 motor CAN baudrate (return int)",
  "UNIT_ROLLERCAN_GET_RGB_MODE_MSG0": "get %1 RGB mode (return int)",
  "UNIT_ROLLERCAN_GET_RGB_COLOR_MSG0": "get %1 RGB color (return tuple)",
  "UNIT_ROLLERCAN_GET_RGB_BRIGHTNESS_MSG0": "get %1 RGB LED brightness (return 0 ~ 100)",
  "UNIT_ROLLERCAN_GET_VIN_VALUE_MSG0": "get %1 input voltage (mV, return int)",
  "UNIT_ROLLERCAN_GET_TEMPERATURE_VALUE_MSG0": "get %1 temperature (°C, return int)",
  "UNIT_ROLLERCAN_SET_MOTOR_OUTPUT_STATE_MSG0": "Set %1 motor output status to %2",
  "UNIT_ROLLERCAN_SET_MOTOR_MODE_MSG0": "Set %1 motor mode to %2",
  "UNIT_ROLLERCAN_SET_MOTOR_OVER_RANGE_PROTECT_MSG0": "Set %1 motor over range protection to %2",
  "UNIT_ROLLERCAN_SET_BUTTON_CHANGE_MODE_MSG0": "Set %1 motor mode change via button to %2",
  "UNIT_ROLLERCAN_SET_REMOVE_PROTECT_MSG0": "Temporary remove %1 motor jam protect state",
  "UNIT_ROLLERCAN_SET_MOTOR_STALL_PROTECT_MSG0": "Set %1 motor jam protect to %2",
  "UNIT_ROLLERCAN_SET_MOTOR_ID_MSG0": "Set %1 motor CAN id to %2",
  "UNIT_ROLLERCAN_SET_CAN_BAUDRATE_MSG0": "Set %1 motor CAN baudrate to %2",
  "UNIT_ROLLERCAN_SET_RGB_MODE_MSG0": "Set %1 RGB mode to %2",
  "UNIT_ROLLERCAN_SET_RGB_COLOR_MSG0": "Set %1 RGB color to %2",
  "UNIT_ROLLERCAN_SET_RGB_BRIGHTNESS_MSG0": "Set %1 RGB LED brightness to %2 (0 ~ 100)",
  "UNIT_ROLLERCAN_SET_DATA_SAVE_IN_FLASH_MSG0": "Set %1 current setting save in flash",
  "UNIT_ROLLERCAN_GET_MOTOR_SPEED_READBACK_MSG0": "get %1 motor current speed(rpm) readback value(return float)",
  "UNIT_ROLLERCAN_GET_MOTOR_SPEED_PID_MSG0": "get %1 motor speed pid(return tuple)",
  "UNIT_ROLLERCAN_SET_MOTOR_SPEED_MSG0": "Set %1 motor speed %2 rpm",
  "UNIT_ROLLERCAN_SET_SPEED_MAX_CURRENT_MSG0": "Set %1 max current to %2 (mA) in speed mode",
  "UNIT_ROLLERCAN_SET_MOTOR_SPEED_PID_MSG0": "Set %1 motor speed P %2 I %3 D %4",
  "UNIT_ROLLERCAN_GET_MOTOR_POSITION_READBACK_MSG0": "get %1 motor current position readback value (return float)",
  "UNIT_ROLLERCAN_GET_MOTOR_POSITION_PID_MSG0": "get %1 motor position pid (return tuple)",
  "UNIT_ROLLERCAN_SET_MOTOR_POSITION_MSG0": "Set %1 motor position %2 count",
  "UNIT_ROLLERCAN_SET_POSITION_MAX_CURRENT_MSG0": "Set %1 max current to %2 in position mode",
  "UNIT_ROLLERCAN_SET_MOTOR_POSITION_PID_MSG0": "Set %1 motor position P %2 I %3 D %4",
  "UNIT_ROLLERCAN_GET_MOTOR_CURRENT_READBACK_MSG0": "get %1 motor current readback value (return float)",
  "UNIT_ROLLERCAN_SET_MOTOR_MAX_CURRENT_MSG0": "Set %1 motor max current to %2 mA",
  "UNIT_ROLLERCAN_GET_ENCODER_VALUE_MSG0": "get %1 motor encoder count value (return float)",
  "UNIT_ROLLERCAN_SET_ENCODER_VALUE_MSG0": "Set %1 motor encoder count to %2",
  "UNIT_ROLLERCAN_GET_MOTOR_SPEED_SETTING_MSG0": "get %1 motor speed(rpm) (return int)",
  "UNIT_ROLLERCAN_GET_MOTOR_SPEED_MAX_CURRENT_MSG0": "get %1 max current in speed mode (mA, return int)",
  "UNIT_ROLLERCAN_GET_MOTOR_POSITION_SETTING_MSG0": "get %1 motor position (return int)",
  "UNIT_ROLLERCAN_GET_MOTOR_POSITION_MAX_CURRENT_MSG0": "get %1 max current in position mode (mA, return int)",
  "UNIT_ROLLERCAN_GET_MOTOR_MAX_CURRENT_MSG0": "get %1 motor max current setting value (mA, return float)",
  "UNIT_ROLLERCAN_GET_FIRMWARE_VERSION_MSG0": "get %1 firmware version (return int)",
  "UNIT_ROLLERCAN_GET_I2C_ADDRESS_MSG0": "get %1 I2C Address (return int)",
  "UNIT_ROLLERCAN_SET_I2C_ADDRESS_MSG0": "Set %1 I2C address %2 (0x08 ~ 0x77)",
  "UNIT_ROLLERCAN_GET_MOTOR_OVER_RANGE_PROTECT_STATE_MSG0": "get %1 motor over range protect setting (return True or False)",
  "UNIT_ROLLERCAN_GET_BUTTON_CHANGE_MODE_MSG0": "get %1 button switching mode status (return True or False)",
  "UNIT_GPSV11": "GPS V1.1",
  "UNIT_GPSV11_INIT_MSG0": "Init %1 UART %2",
  "UNIT_GPSV11_DEINIT_MSG0": "%1 deinit",
  "UNIT_GPSV11_GET_ANTENNA_STATE_MSG0": "get %1 antenna State (return string)",
  "UNIT_GPSV11_GET_GPS_TIME_MSG0": "get %1 local time (return list [hour, min, second])",
  "UNIT_GPSV11_GET_GPS_DATE_MSG0": "get %1 date (return list [yyyy, mm, dd])",
  "UNIT_GPSV11_GET_GPS_DATE_TIME_MSG0": "get %1 date and local time (return list [yyyy, mm, dd, hour, min, second])",
  "UNIT_GPSV11_GET_TIMESTAMP_MSG0": "get %1 timestamp (return int)",
  "UNIT_GPSV11_GET_LATITUDE_MSG0": "get %1 latitude (return string)",
  "UNIT_GPSV11_GET_LONGITUDE_MSG0": "get %1 longitude (return string)",
  "UNIT_GPSV11_GET_ALTITUDE_MSG0": "get %1 altitude (return string)",
  "UNIT_GPSV11_GET_SATELLITE_NUM_MSG0": "get %1 satellite number (return int)",
  "UNIT_GPSV11_GET_POS_QUALITY_MSG0": "get %1 position quality (return int)",
  "UNIT_GPSV11_GET_CORSE_OVER_GROUND_MSG0": "get %1 course over ground degree (return string)",
  "UNIT_GPSV11_GET_SPEED_OVER_GROUND_MSG0": "get %1 speed over ground knot (return string)",
  "UNIT_GPSV11_GET_WORK_MODE_MSG0": "get %1 work mode (return int)",
  "UNIT_GPSV11_SET_WORK_MODE_MSG0": "Set %1 work mode to %2",
  "UNIT_GPSV11_GET_TIME_ZONE_MSG0": "get %1 current time zone offset (return int)",
  "UNIT_GPSV11_SET_TIME_ZONE_MSG0": "Set %1 time zone offset to %2",
  "UNIT_GPSSMA": "GPS SMA",
  "UNIT_GPSSMA_INIT_MSG0": "Init %1 UART %2",
  "UNIT_GPSSMA_DEINIT_MSG0": "%1 deinit",
  "UNIT_GPSSMA_GET_ANTENNA_STATE_MSG0": "get %1 antenna State (return string)",
  "UNIT_GPSSMA_GET_GPS_TIME_MSG0": "get %1 local time (return list [hour, min, second])",
  "UNIT_GPSSMA_GET_GPS_DATE_MSG0": "get %1 date (return list [yyyy, mm, dd])",
  "UNIT_GPSSMA_GET_GPS_DATE_TIME_MSG0": "get %1 date and local time (return list [yyyy, mm, dd, hour, min, second])",
  "UNIT_GPSSMA_GET_TIMESTAMP_MSG0": "get %1 timestamp (return int)",
  "UNIT_GPSSMA_GET_LATITUDE_MSG0": "get %1 latitude (return string)",
  "UNIT_GPSSMA_GET_LONGITUDE_MSG0": "get %1 longitude (return string)",
  "UNIT_GPSSMA_GET_ALTITUDE_MSG0": "get %1 altitude (return string)",
  "UNIT_GPSSMA_GET_SATELLITE_NUM_MSG0": "get %1 satellite number (return int)",
  "UNIT_GPSSMA_GET_POS_QUALITY_MSG0": "get %1 position quality (return int)",
  "UNIT_GPSSMA_GET_CORSE_OVER_GROUND_MSG0": "get %1 course over ground degree (return string)",
  "UNIT_GPSSMA_GET_SPEED_OVER_GROUND_MSG0": "get %1 speed over ground knot (return string)",
  "UNIT_GPSSMA_GET_WORK_MODE_MSG0": "get %1 work mode (return int)",
  "UNIT_GPSSMA_SET_WORK_MODE_MSG0": "Set %1 work mode to %2",
  "UNIT_GPSSMA_GET_TIME_ZONE_MSG0": "get %1 current time zone offset (return int)",
  "UNIT_GPSSMA_SET_TIME_ZONE_MSG0": "Set %1 time zone offset to %2",
  "UNIT_BYTEBUTTON": "ByteButton",
  "UNIT_BYTEBUTTON_INIT_MSG0": "Init %1 I2C address %2 (0x08 ~ 0x77)",
  "UNIT_BYTEBUTTON_GET_BYTE_BUTTON_STATUS_MSG0": "get %1 all button status (return int)",
  "UNIT_BYTEBUTTON_GET_BUTTON_STATE_MSG0": "get %1 the status of %2 key (return True or False)",
  "UNIT_BYTEBUTTON_GET_LED_SHOW_MODE_MSG0": "get %1 the LED show mode (return 0 or 1)",
  "UNIT_BYTEBUTTON_SET_LED_SHOW_MODE_MSG0": "Set %1 the LED show mode to %2",
  "UNIT_BYTEBUTTON_SET_LED_BRIGHTNESS_MSG0": "Set %1 the brightness of %2 LED to %3 (0 ~ 255)",
  "UNIT_BYTEBUTTON_GET_LED_BRIGHTNESS_MSG0": "get %1 the brightness of %2 LED (return 0 ~ 255)",
  "UNIT_BYTEBUTTON_GET_FIRMWARE_VERSION_MSG0": "get %1 firmware version",
  "UNIT_BYTEBUTTON_GET_I2C_ADDRESS_MSG0": "get %1 I2C address",
  "UNIT_BYTEBUTTON_SET_I2C_ADDRESS_MSG0": "Set %1 I2C address to %2 (0x08 ~ 0x77)",
  "UNIT_BYTEBUTTON_SAVE_TO_FLASH_MSG0": "%1 save user settings to flash",
  "UNIT_BYTEBUTTON_GET_INDICATOR_COLOR_MSG0": "get %1 the color of the indicator LED (return RGB888)",
  "UNIT_BYTEBUTTON_SET_INDICATOR_COLOR_MSG0": "Set %1 the color of the indicator LED to %2",
  "UNIT_BYTEBUTTON_GET_INDICATOR_BRIGHTNESS_MSG0": "get %1 the brightness of the indicator LED (return 0 ~ 255)",
  "UNIT_BYTEBUTTON_SET_INDICATOR_BRIGHTNESS_MSG0": "Set %1 the brightness of the indicator LED to %2 (0 ~ 255)",
  "UNIT_BYTEBUTTON_GET_USER_MODE_LED_COLOR_MSG0": "get %1 the color of %2 LED in user mode",
  "UNIT_BYTEBUTTON_GET_SYS_MODE_LED_COLOR_MSG0": "get %1 the color of %2 LED when it %3 in sys mode",
  "UNIT_BYTEBUTTON_SET_USER_MODE_LED_COLOR_MSG0": "Set %1 the color of %2 LED to %3 in user mode",
  "UNIT_BYTEBUTTON_SET_SYS_MODE_LED_COLOR_MSG0": "Set %1 the color of %2 LED to %3 when it %4 in sys mode",
  "UNIT_BYTESWITCH": "ByteSwitch",
  "UNIT_BYTESWITCH_INIT_MSG0": "Init %1 I2C address %2 (0x08 ~ 0x77)",
  "UNIT_BYTESWITCH_GET_BYTE_SWITCH_STATUS_MSG0": "get %1 all switch status (return int)",
  "UNIT_BYTESWITCH_GET_SWITCH_STATE_MSG0": "get %1 the status of %2 key (return True or False)",
  "UNIT_BYTESWITCH_GET_LED_SHOW_MODE_MSG0": "get %1 the LED show mode (return 0 or 1)",
  "UNIT_BYTESWITCH_SET_LED_SHOW_MODE_MSG0": "Set %1 the LED show mode to %2",
  "UNIT_BYTESWITCH_SET_LED_BRIGHTNESS_MSG0": "Set %1 the brightness of %2 LED to %3 (0 ~ 255)",
  "UNIT_BYTESWITCH_GET_LED_BRIGHTNESS_MSG0": "get %1 the brightness of %2 LED (return 0 ~ 255)",
  "UNIT_BYTESWITCH_GET_FIRMWARE_VERSION_MSG0": "get %1 firmware version",
  "UNIT_BYTESWITCH_GET_I2C_ADDRESS_MSG0": "get %1 I2C address",
  "UNIT_BYTESWITCH_SET_I2C_ADDRESS_MSG0": "Set %1 I2C address to %2 (0x08 ~ 0x77)",
  "UNIT_BYTESWITCH_SAVE_TO_FLASH_MSG0": "%1 save user settings to flash",
  "UNIT_BYTESWITCH_GET_INDICATOR_COLOR_MSG0": "get %1 the color of the indicator LED (return RGB888)",
  "UNIT_BYTESWITCH_SET_INDICATOR_COLOR_MSG0": "Set %1 the color of the indicator LED to %2",
  "UNIT_BYTESWITCH_GET_INDICATOR_BRIGHTNESS_MSG0": "get %1 the brightness of the indicator LED (return 0 ~ 255)",
  "UNIT_BYTESWITCH_SET_INDICATOR_BRIGHTNESS_MSG0": "Set %1 the brightness of the indicator LED to %2 (0 ~ 255)",
  "UNIT_BYTESWITCH_GET_USER_MODE_LED_COLOR_MSG0": "get %1 the color of %2 LED in user mode",
  "UNIT_BYTESWITCH_GET_SYS_MODE_LED_COLOR_MSG0": "get %1 the color of %2 LED when it %3 in sys mode",
  "UNIT_BYTESWITCH_SET_USER_MODE_LED_COLOR_MSG0": "Set %1 the color of %2 LED to %3 in user mode",
  "UNIT_BYTESWITCH_SET_SYS_MODE_LED_COLOR_MSG0": "Set %1 the color of %2 LED to %3 when it %4 in sys mode",
  "UNIT_LORAWANCN470": "LoRaWAN CN470",
  "UNIT_LORAWANAS923": "LoRaWAN AS923",
  "UNIT_LORAWANUS915": "LoRaWAN US915",
  "UNIT_LORAWANEU868": "LoRaWAN EU868",
  "UNIT_LORAWANCN470_INIT_MSG0": "Init %1 UART %2",
  "UNIT_LORAWANCN470_GET_ABP_CONFIG_MSG0": "get %1 ABP config (return tuple)",
  "UNIT_LORAWANCN470_GET_OTAA_CONFIG_MSG0": "get %1 OTAA config (return tuple)",
  "UNIT_LORAWANCN470_GET_JOIN_STATE_MSG0": "check %1 join status",
  "UNIT_LORAWANCN470_SET_JOIN_MODE_MSG0": "Set %1 join mode %2",
  "UNIT_LORAWANCN470_CONFIG_MSG0": "Config %1 %2 frequency band mask %3 RX window param: %4 RX1 delay (1~15) %5 RX2 delay (2~16) %6 RX2 datarate %7 class mode %8",
  "UNIT_LORAWANCN470_START_JOIN_NETWORK_MSG0": "Start %1 join LoRaWAN network",
  "UNIT_LORAWANCN470_START_JOIN_NETWORK_RETURN_MSG0": "Start %1 join LoRaWAN network, wait %2 ms for response",
  "UNIT_LORAWANCN470_JOIN_MSG0": "Start %1 join LoRaWAN network %2 %3 %4 reattempt interval (seconds) (7 ~ 255) %5 maximum number of attempts (0 ~ 255) %6 wait (ms) %7",
  "UNIT_LORAWANCN470_CONFIG_MODE_MSG0": "config",
  "UNIT_LORAWANCN470_SEND_DATA_PAYLOAD_MSG0": "%1 send data %2 on port %3 (1 ~ 233)",
  "UNIT_LORAWANCN470_SEND_DATA_PAYLOAD_RETURN_MSG0": "%1 send data %2 on port %3 (1 ~ 233) wait %4 ms to confirm",
  "UNIT_LORAWANCN470_SET_NETWORK_MODE_MSG0": "Set %1 network mode to %2",
  "UNIT_LORAWANCN470_GET_LAST_RECEIVE_MSG0": "get %1 last received data (return tuple, [port, payload])",
  "UNIT_LORAWANCN470_GET_P2P_FREQUENCY_MSG0": "get %1 P2P mode frequency",
  "UNIT_LORAWANCN470_SET_P2P_FREQUENCY_MSG0": "Set %1 P2P mode frequency to %2",
  "UNIT_LORAWANCN470_GET_P2P_SPREADING_FACTOR_MSG0": "get %1 P2P mode spreading factor",
  "UNIT_LORAWANCN470_SET_P2P_SPREADING_FACTOR_MSG0": "Set %1 P2P mode spreading factor to %2 (5 ~ 12)",
  "UNIT_LORAWANCN470_GET_P2P_BANDWIDTH_MSG0": "get %1 P2P mode bandwidth",
  "UNIT_LORAWANCN470_SET_P2P_LORA_BANDWIDTH_MSG0": "Set %1 P2P LORA mode bandwidth to %2",
  "UNIT_LORAWANCN470_SET_P2P_FSK_BANDWIDTH_MSG0": "Set %1 P2P FSK mode bandwidth to %2 (4800 ~ 467000)",
  "UNIT_LORAWANCN470_GET_P2P_TX_POWER_MSG0": "get %1 P2P mode tx power",
  "UNIT_LORAWANCN470_SET_P2P_TX_POWER_MSG0": "Set %1 P2P mode tx power to %2 (5 ~ 22)",
  "UNIT_LORAWANCN470_GET_P2P_FSK_BITRATE_MSG0": "get %1 P2P mode FSK bitrate",
  "UNIT_LORAWANCN470_SET_P2P_FSK_BITRATE_MSG0": "Set %1 P2P mode FSK bitrate to %2 (600 ~ 300000)",
  "UNIT_LORAWANCN470_SEND_P2P_DATA_MSG0": "Send %1 P2P data %2",
  "UNIT_LORAWANCN470_SEND_P2P_DATA_RETURN_MSG0": "Send %1 P2P data %2 wait %3 ms to get send result",
  "UNIT_LORAWANCN470_GET_P2P_RECEIVE_DATA_MSG0": "get %1 P2P mode receive data in %2 ms (return tuple)",
  "UNIT_LORAWANCN470_GET_P2P_SYNC_WORD_MSG0": "get %1 P2P mode sync word",
  "UNIT_LORAWANCN470_SET_P2P_SYNC_WORD_MSG0": "Set %1 P2P mode sync word to %2 (0x0000 ~ 0xffff)",
  "UNIT_LORAWANCN470_RESET_MODULE_TO_DEFAULT_MSG0": "Restore %1 to default parameters",
  "UNIT_LORAWANCN470_GET_P2P_CODE_RATE_MSG0": "get %1 P2P mode code rate",
  "UNIT_LORAWANCN470_SET_P2P_CODE_RATE_MSG0": "Set %1 P2P mode code rate to %2",
  "UNIT_LORAWANCN470_GET_P2P_PREAMBLE_LENGTH_MSG0": "get %1 P2P mode preamble length",
  "UNIT_LORAWANCN470_SET_P2P_PREAMBLE_LENGTH_MSG0": "Set %1 P2P mode preamble length to %2",
  "UNIT_LORAWANEU868_CONFIG_MSG0": "Config %1 %2 RX window param: %3 RX1 delay (1~15) %4 RX2 delay (2~16) %5 RX2 datarate %6 class mode %7",
  "UNIT_ASR": "ASR",
  "UNIT_ASR_INIT_MSG0": "Init %1 UART %2",
  "UNIT_ASR_GET_CURRENT_RAW_MESSAGE_MSG0": "get %1 current raw message (return string)",
  "UNIT_ASR_GET_CURRENT_COMMAND_WORD_MSG0": "get %1 current command word (return string)",
  "UNIT_ASR_GET_CURRENT_COMMAND_NUM_MSG0": "get %1 current command num (return string)",
  "UNIT_ASR_GET_COMMAND_HANDLER_MSG0": "get %1 current command handler state (return True or False)",
  "UNIT_ASR_GET_RECEIVED_STATUS_MSG0": "get %1 status of the receive message (return True or False)",
  "UNIT_ASR_GET_COMMAND_LIST_MSG0": "get %1 current command list",
  "UNIT_ASR_SEND_MESSAGE_MSG0": "Send message to %1 with command number (hex) %2",
  "UNIT_ASR_REMOVE_COMMAND_WORD_MSG0": "Remove %1 command word %2",
  "UNIT_ASR_SEARCH_COMMAND_NUM_MSG0": "search %1 command number of the command word %2 (return int)",
  "UNIT_ASR_SEARCH_COMMAND_WORD_MSG0": "search %1 command word of the command number (hex) %2 (return string)",
  "UNIT_ASR_ADD_COMMAND_WORD_MSG0": "Add %1 command num (hex) %2 and the command word %3",
  "UNIT_ASR_EVENT_MSG0": "When %1 recognizes command word %2",
  "UNIT_ASR_UPDATE_IN_LOOP": "%1 Update in loop",
  "MODULE_FANV11": "Fan V1.1",
  "MODULE_FANV11_INIT_MSG0": "Init Fan v1.1 %1 I2C address %2 (0x08 ~ 0x77)",
  "MODULE_FANV11_GET_I2C_ADDRESS_MSG0": "get %1 current I2C address (return int)",
  "MODULE_FANV11_SET_ADDRESS_MSG0": "Set %1 I2C address %2 (0x08 ~ 0x77)",
  "MODULE_FANV11_GET_FIRMWARE_VERSION_MSG0": "get %1 firmware version (return int)",
  "MODULE_FANV11_GET_FAN_STATE_MSG0": "get %1 current fan state (return True or False)",
  "MODULE_FANV11_SET_FAN_STATE_MSG0": "Set %1 fan state to %2",
  "MODULE_FANV11_GET_PWM_FREQUENCY_MSG0": "get %1 fan PWM frequency (return int)",
  "MODULE_FANV11_SET_PWM_FREQUENCY_MSG0": "Set %1 fan PWM frequency to %2",
  "MODULE_FANV11_GET_PWM_DUTY_CYCLE_MSG0": "get %1 current fan PWM duty cycle (return int)",
  "MODULE_FANV11_SET_PWM_DUTY_CYCLE_MSG0": "Set %1 fan PWM duty cycle to %2",
  "MODULE_FANV11_GET_FAN_RPM_MSG0": "get %1 current fan rpm (return int)",
  "MODULE_FANV11_GET_SINGLE_FREQUENCY_MSG0": "get %1 current fan single frequency (return int)",
  "MODULE_FANV11_WRITE_FLASH_MSG0": "Save %1 current setting to flash",
  "MODULE_BALA2_INIT_MSG0": "Init Bala2 %1 with timer %2 (0~3)",
  "MODULE_BALA2_SET_MOTOR_SPEED_MSG0": "Set %1 left motor speed to %2 (-1023~1023) and right motor speed to %3 (-1023~1023)",
  "MODULE_BALA2_SET_ENCODER_VALUE_MSG0": "Set %1 left encoder value to %2 and right encoder value to %3",
  "MODULE_BALA2_GET_ENCODER_VALUE_MSG0": "get %1 encoder value (return tuple)",
  "MODULE_BALA2_SET_SERVO_ANGLE_MSG0": "Set %1 servo pos to %2 (1~4) and angle to %3 (0~180)",
  "MODULE_BALA2_START_MSG0": "%1 start",
  "MODULE_BALA2_STOP_MSG0": "%1 stop",
  "MODULE_BALA2_GET_ANGLE_MSG0": "get %1 tilt angle",
  "MODULE_BALA2_SET_ANGLE_PID_MSG0": "Set %1 angle PID parameters with %2 proportional gain %3 integral gain %4 derivative gain %5",
  "MODULE_BALA2_GET_ANGLE_PID_MSG0": "get %1 angle PID parameters (return tuple)",
  "MODULE_BALA2_SET_ANGLE_PID_TARGET_MSG0": "Set %1 target angle for angle PID control to %2",
  "MODULE_BALA2_GET_ANGLE_PID_TARGET_MSG0": "get %1 target angle for angle PID control (return float)",
  "MODULE_BALA2_SET_SPEED_PID_MSG0": "Set %1 speed PID parameters with %2 proportional gain %3 integral gain %4 derivative gain %5",
  "MODULE_BALA2_GET_SPEED_PID_MSG0": "get %1 speed PID parameters (return tuple)",
  "MODULE_BALA2_SET_SPEED_PID_TARGET_MSG0": "Set %1 target speed for speed PID control to %2",
  "MODULE_BALA2_GET_SPEED_PID_TARGET_MSG0": "get %1 target speed for speed PID control (return float)",
  "MODULE_BALA2_SET_TURN_SPEED_MSG0": "Set %1 turning speed to %2 (-1023~1023)",
  "MODULE_BALA2_CALIBRATE_MSG0": "%1 sensor calibrate",
  "MODULE_LLM_CAMERA_SETUP_MSG0": "%1 setup camera with %2 input %3 frame width %4 frame height %5 request id %6 enoutput %7",
  "MODULE_LLM_YOLO_SETUP_MSG0": "%1 setup YOLO with %2 model %3 enoutput %4 input %5 request id %6",
  "MODULE_LLM_GET_MODEL_LIST_MSG0": "get %1 model list",
  "MODULE_LLM_REMOVE_MODE_MSG0": "Remove %1 model %2",
  "MODULE_LLM_GET_LATEST_YOLO_WORK_ID_MSG0": "get %1 latest YOLO work id (return string)",
  "MODULE_LLM_GET_LATEST_CAMERA_WORK_ID_MSG0": "get %1 latest camera work id (return string)",
  "CONTROLS_FOR_RANGE_MSG0": "for %1 in range %2",
  "BASE_MOTION_READ_VOLTAGE_MSG0": "Motion read voltage (V, return float)",
  "BASE_MOTION_READ_CURRENT_MSG0": "Motion read current (A, return float)",
  "BASE_MOTION_READ_POWER_MSG0": "Motion read power (W, return float)",
  "MODULE_LLM_GET_LATEST_WHISPER_WORK_ID_MSG0": "get %1 latest whisper work id (return string)",
  "MODULE_LLM_GET_LATEST_VAD_WORK_ID_MSG0": "get %1 latest vad work id (return string)",
  "MODULE_LLM_WHISPER_SETUP_MSG0": "%1 setup whisper with %2 model %3 enoutput %4 enkws %5 envad %6 language %7 request id %8",
  "MODULE_LLM_VAD_SETUP_MSG0": "%1 setup VAD with %2 model %3 enoutput %4 enkws %5 request id %6",
  "MODULE_GPSV2": "GPS v2.0",
  "MODULE_GPSV2_INIT_MSG0": "Init %1 pin TX %2 RX %3",
  "MODULE_GPSV2_SET_UART_MSG0": "set %1 UART ID %2",
  "MODULE_GPSV2_DEINIT_MSG0": "%1 deinit",
  "MODULE_GPSV2_GET_ANTENNA_STATE_MSG0": "get %1 antenna State (return string)",
  "MODULE_GPSV2_GET_GPS_TIME_MSG0": "get %1 local time (return list [hour, min, second])",
  "MODULE_GPSV2_GET_GPS_DATE_MSG0": "get %1 date (return list [yyyy, mm, dd])",
  "MODULE_GPSV2_GET_GPS_DATE_TIME_MSG0": "get %1 date and local time (return list [yyyy, mm, dd, hour, min, second])",
  "MODULE_GPSV2_GET_TIMESTAMP_MSG0": "get %1 timestamp (return int)",
  "MODULE_GPSV2_GET_LATITUDE_MSG0": "get %1 latitude (return string)",
  "MODULE_GPSV2_GET_LONGITUDE_MSG0": "get %1 longitude (return string)",
  "MODULE_GPSV2_GET_ALTITUDE_MSG0": "get %1 altitude (return string)",
  "MODULE_GPSV2_GET_SATELLITE_NUM_MSG0": "get %1 satellite number (return int)",
  "MODULE_GPSV2_GET_POS_QUALITY_MSG0": "get %1 position quality (return int)",
  "MODULE_GPSV2_GET_CORSE_OVER_GROUND_MSG0": "get %1 course over ground degree (return string)",
  "MODULE_GPSV2_GET_SPEED_OVER_GROUND_MSG0": "get %1 speed over ground knot (return string)",
  "MODULE_GPSV2_GET_WORK_MODE_MSG0": "get %1 work mode (return int)",
  "MODULE_GPSV2_SET_WORK_MODE_MSG0": "set %1 work mode to %2",
  "MODULE_GPSV2_GET_TIME_ZONE_MSG0": "get %1 current time zone offset (return int)",
  "MODULE_GPSV2_SET_TIME_ZONE_MSG0": "set %1 time zone offset to %2",
  "BASE_LORAWANCN470": "DTU LoRaWAN-CN470",
  "BASE_LORAWANCN470_TITLE": "LoRaWAN-CN470",
  "BASE_LORAWANCN470_LORAWAN": "LoRaWAN",
  "BASE_LORAWANCN470_P2P": "P2P",
  "BASE_LORAWANCN470_RS485": "RS485",
  "BASE_LORAWANCN470_INIT_MSG0": "Init LoRaWAN-CN470 with %1 %2 RS485",
  "BASE_LORAWANCN470_LORAWAN_CONFIG_MSG0": "Config",
  "BASE_LORAWANCN470_LORAWAN_CONFIG_MSG1": "mode",
  "BASE_LORAWANCN470_LORAWAN_CONFIG_MSG2": "device eui *",
  "BASE_LORAWANCN470_LORAWAN_CONFIG_MSG3": "app key *",
  "BASE_LORAWANCN470_LORAWAN_CONFIG_MSG4": "app eui",
  "BASE_LORAWANCN470_LORAWAN_CONFIG_MSG5": "device address",
  "BASE_LORAWANCN470_LORAWAN_CONFIG_MSG6": "app session key",
  "BASE_LORAWANCN470_LORAWAN_CONFIG_MSG7": "network session key",
  "BASE_LORAWANCN470_LORAWAN_CONFIG_MSG8": "frequency band mask",
  "BASE_LORAWANCN470_LORAWAN_CONFIG_MSG9": "RX window param:",
  "BASE_LORAWANCN470_LORAWAN_CONFIG_MSG10": "RX1 delay (1~15)",
  "BASE_LORAWANCN470_LORAWAN_CONFIG_MSG11": "RX2 delay (2~16)",
  "BASE_LORAWANCN470_LORAWAN_CONFIG_MSG12": "RX2 datarate",
  "BASE_LORAWANCN470_LORAWAN_CONFIG_MSG13": "class mode",
  "BASE_LORAWANCN470_P2P_CONFIG_MSG0": "Config P2P parameters",
  "BASE_LORAWANCN470_P2P_CONFIG_MSG1": "frequency",
  "BASE_LORAWANCN470_P2P_CONFIG_MSG2": "spreading factor (5 ~ 12)",
  "BASE_LORAWANCN470_P2P_CONFIG_MSG3": "bandwidth",
  "BASE_LORAWANCN470_P2P_CONFIG_MSG4": "TX power (5 ~ 22)",
  "BASE_LORAWANCN470_P2P_CONFIG_MSG5": "code rate",
  "BASE_LORAWANCN470_P2P_CONFIG_MSG6": "preamble length",
  "BASE_LORAWANCN470_RS485_CONFIG_MSG0": "",
  "BASE_LORAWANCN470_RS485_CONFIG_MSG1": "Config RS485 with",
  "BASE_LORAWANCN470_RS485_CONFIG_MSG2": "baudrate",
  "BASE_LORAWANCN470_RS485_CONFIG_MSG3": "bits",
  "BASE_LORAWANCN470_RS485_CONFIG_MSG4": "parity",
  "BASE_LORAWANCN470_RS485_CONFIG_MSG5": "stop",
  "BASE_LORAWANCN470_RS485_CONFIG_MSG6": "RTS",
  "BASE_LORAWANCN470_RS485_CONFIG_MSG7": "CTS",
  "BASE_LORAWANCN470_RS485_CONFIG_MSG8": "TX buffer",
  "BASE_LORAWANCN470_RS485_CONFIG_MSG9": "RX buffer",
  "BASE_LORAWANCN470_RS485_CONFIG_MSG10": "timeout",
  "BASE_LORAWANCN470_RS485_CONFIG_MSG11": "timeout char",
  "BASE_LORAWANCN470_RS485_CONFIG_MSG12": "invert",
  "BASE_LORAWANCN470_RS485_CONFIG_MSG13": "flow",
  "BASE_LORAWANCN470_RS485_CONFIG_MSG14": "mode",
  "BASE_LORAWANCN470_GET_RECEIVED_DATA_MSG0": "get LoRaWAN-CN470 received data",
  "BASE_LORAWANCN470_GET_RECEIVED_DATA_STRING_MSG0": "get LoRaWAN-CN470 received data as string",
  "BASE_LORAWANCN470_GET_RECEIVED_DATA_COUNT_MSG0": "get LoRaWAN-CN470 received data count",
  "BASE_LORAWANCN470_SEND_DATA_PAYLOAD_MSG0": "LoRaWAN-CN470 send data %1 on port %2 (1 ~ 233)",
  "BASE_LORAWANCN470_SEND_DATA_PAYLOAD_RETURN_MSG0": "LoRaWAN-CN470 send data %1 on port %2 (1 ~ 233) wait %3 ms to confirm",
  "BASE_LORAWANCN470_START_JOIN_LORAWAN_NETWORK_MSG0": "Start LoRaWAN-CN470 join LoRaWAN network, wait %1 ms for response",
  "BASE_LORAWANCN470_START_JOIN_LORAWAN_NETWORK_MSG1": "Successed %1",
  "BASE_LORAWANCN470_START_JOIN_LORAWAN_NETWORK_MSG2": "Failed %1",
  "BASE_LORAWANCN470_SEND_P2P_DATA_MSG0": "Send LoRaWAN-CN470 P2P data %1 , convert to hex %2",
  "BASE_LORAWANCN470_SEND_P2P_DATA_RETURN_MSG0": "send LoRaWAN-CN470 P2P data %1 wait %2 ms to get send result, convert to hex %3 (return True or False)",
  "BASE_LORAWANCN470_GET_P2P_RECEIVE_DATA_MSG0": "get LoRaWAN-CN470 P2P mode receive data in %1 ms, convert to hex %2 (return tuple)",
  "BASE_LORAWANCN470_RS485_SETUP_MSG0": "LoRaWAN-CN470 RS485 setup %1 baudrate %2 bits %3 parity %4 stop %5 TX %6 RX %7",
  "BASE_LORAWANCN470_RS485_SETUP_MSG1": "RTS",
  "BASE_LORAWANCN470_RS485_SETUP_MSG2": "CTS",
  "BASE_LORAWANCN470_RS485_SETUP_MSG3": "TX buffer",
  "BASE_LORAWANCN470_RS485_SETUP_MSG4": "RX buffer",
  "BASE_LORAWANCN470_RS485_SETUP_MSG5": "timeout",
  "BASE_LORAWANCN470_RS485_SETUP_MSG6": "timeout char",
  "BASE_LORAWANCN470_RS485_SETUP_MSG7": "invert",
  "BASE_LORAWANCN470_RS485_SETUP_MSG8": "flow",
  "BASE_LORAWANCN470_RS485_SETUP_MSG9": "mode",
  "BASE_LORAWANCN470_RS485_DEINIT_MSG0": "LoRaWAN-CN470 RS485 deinit",
  "BASE_LORAWANCN470_RS485_AVAILABLE_CHAR_MSG0": "LoRaWAN-CN470 RS485 count of available",
  "BASE_LORAWANCN470_RS485_READ_ALL_MSG0": "LoRaWAN-CN470 RS485 read all bytes (return bytes)",
  "BASE_LORAWANCN470_RS485_READ_BYTES_MSG0": "LoRaWAN-CN470 RS485 read %1 bytes (return bytes)",
  "BASE_LORAWANCN470_RS485_READ_LINE_MSG0": "LoRaWAN-CN470 RS485 read line (return bytes)",
  "BASE_LORAWANCN470_RS485_READ_RAW_DATA_MSG0": "LoRaWAN-CN470 RS485 read a raw data (return 0 ~ 255)",
  "BASE_LORAWANCN470_RS485_WRITE_MSG0": "LoRaWAN-CN470 RS485 write %1",
  "BASE_LORAWANCN470_RS485_WRITE_LINE_MSG0": "LoRaWAN-CN470 RS485 write line %1",
  "BASE_LORAWANCN470_RS485_WRITE_LIST_MSG0": "LoRaWAN-CN470 RS485 write list or tuple %1",
  "BASE_LORAWANCN470_RS485_WRITE_RAW_DATA_LIST_MSG0": "LoRaWAN-CN470 RS485 write raw data %1",
  "BASE_LORAWANCN470_RS485_WRITE_RAW_DATA_MSG0": "LoRaWAN-CN470 RS485 write raw data %1",
  "BASE_LORAWANCN470_RS485_READ_INTO_BUF_MSG0": "LoRaWAN-CN470 RS485 read into buf %1",
  "BASE_LORAWANCN470_RS485_SEND_BREAK_MSG0": "LoRaWAN-CN470 RS485 send break single",
  "BASE_LORAWANCN470_RS485_FLUSH_MSG0": "LoRaWAN-CN470 RS485 flush",
  "BASE_LORAWANCN470_RS485_TXDONE_MSG0": "LoRaWAN-CN470 RS485 is transfer done (return True or False)",
  "BASE_LORAWANEU868": "DTU LoRaWAN-EU868",
  "BASE_LORAWANEU868_TITLE": "LoRaWAN-EU868",
  "BASE_LORAWANEU868_LORAWAN": "LoRaWAN",
  "BASE_LORAWANEU868_P2P": "P2P",
  "BASE_LORAWANEU868_RS485": "RS485",
  "BASE_LORAWANEU868_INIT_MSG0": "Init LoRaWAN-EU868 with %1 %2 RS485",
  "BASE_LORAWANEU868_LORAWAN_CONFIG_MSG0": "Config",
  "BASE_LORAWANEU868_LORAWAN_CONFIG_MSG1": "mode",
  "BASE_LORAWANEU868_LORAWAN_CONFIG_MSG2": "device eui *",
  "BASE_LORAWANEU868_LORAWAN_CONFIG_MSG3": "app key *",
  "BASE_LORAWANEU868_LORAWAN_CONFIG_MSG4": "app eui",
  "BASE_LORAWANEU868_LORAWAN_CONFIG_MSG5": "device address",
  "BASE_LORAWANEU868_LORAWAN_CONFIG_MSG6": "app session key",
  "BASE_LORAWANEU868_LORAWAN_CONFIG_MSG7": "network session key",
  "BASE_LORAWANEU868_LORAWAN_CONFIG_MSG8": "RX window param:",
  "BASE_LORAWANEU868_LORAWAN_CONFIG_MSG9": "RX1 delay (1~15)",
  "BASE_LORAWANEU868_LORAWAN_CONFIG_MSG10": "RX2 delay (2~16)",
  "BASE_LORAWANEU868_LORAWAN_CONFIG_MSG11": "RX2 datarate",
  "BASE_LORAWANEU868_LORAWAN_CONFIG_MSG12": "class mode",
  "BASE_LORAWANEU868_P2P_CONFIG_MSG0": "Config P2P parameters",
  "BASE_LORAWANEU868_P2P_CONFIG_MSG1": "frequency",
  "BASE_LORAWANEU868_P2P_CONFIG_MSG2": "spreading factor (5 ~ 12)",
  "BASE_LORAWANEU868_P2P_CONFIG_MSG3": "bandwidth",
  "BASE_LORAWANEU868_P2P_CONFIG_MSG4": "TX power (5 ~ 22)",
  "BASE_LORAWANEU868_P2P_CONFIG_MSG5": "code rate",
  "BASE_LORAWANEU868_P2P_CONFIG_MSG6": "preamble length",
  "BASE_LORAWANEU868_RS485_CONFIG_MSG0": "",
  "BASE_LORAWANEU868_RS485_CONFIG_MSG1": "Config RS485 with",
  "BASE_LORAWANEU868_RS485_CONFIG_MSG2": "baudrate",
  "BASE_LORAWANEU868_RS485_CONFIG_MSG3": "bits",
  "BASE_LORAWANEU868_RS485_CONFIG_MSG4": "parity",
  "BASE_LORAWANEU868_RS485_CONFIG_MSG5": "stop",
  "BASE_LORAWANEU868_RS485_CONFIG_MSG6": "RTS",
  "BASE_LORAWANEU868_RS485_CONFIG_MSG7": "CTS",
  "BASE_LORAWANEU868_RS485_CONFIG_MSG8": "TX buffer",
  "BASE_LORAWANEU868_RS485_CONFIG_MSG9": "RX buffer",
  "BASE_LORAWANEU868_RS485_CONFIG_MSG10": "timeout",
  "BASE_LORAWANEU868_RS485_CONFIG_MSG11": "timeout char",
  "BASE_LORAWANEU868_RS485_CONFIG_MSG12": "invert",
  "BASE_LORAWANEU868_RS485_CONFIG_MSG13": "flow",
  "BASE_LORAWANEU868_RS485_CONFIG_MSG14": "mode",
  "BASE_LORAWANEU868_GET_RECEIVED_DATA_MSG0": "get LoRaWAN-EU868 received data",
  "BASE_LORAWANEU868_GET_RECEIVED_DATA_STRING_MSG0": "get LoRaWAN-EU868 received data as string",
  "BASE_LORAWANEU868_GET_RECEIVED_DATA_COUNT_MSG0": "get LoRaWAN-EU868 received data count",
  "BASE_LORAWANEU868_SEND_DATA_PAYLOAD_MSG0": "LoRaWAN-EU868 send data %1 on port %2 (1 ~ 233)",
  "BASE_LORAWANEU868_SEND_DATA_PAYLOAD_RETURN_MSG0": "LoRaWAN-EU868 send data %1 on port %2 (1 ~ 233) wait %3 ms to confirm",
  "BASE_LORAWANEU868_START_JOIN_LORAWAN_NETWORK_MSG0": "Start LoRaWAN-EU868 join LoRaWAN network, wait %1 ms for response",
  "BASE_LORAWANEU868_START_JOIN_LORAWAN_NETWORK_MSG1": "Successed %1",
  "BASE_LORAWANEU868_START_JOIN_LORAWAN_NETWORK_MSG2": "Failed %1",
  "BASE_LORAWANEU868_SEND_P2P_DATA_MSG0": "Send LoRaWAN-EU868 P2P data %1 , convert to hex %2",
  "BASE_LORAWANEU868_SEND_P2P_DATA_RETURN_MSG0": "send LoRaWAN-EU868 P2P data %1 wait %2 ms to get send result, convert to hex %3 (return True or False)",
  "BASE_LORAWANEU868_GET_P2P_RECEIVE_DATA_MSG0": "get LoRaWAN-EU868 P2P mode receive data in %1 ms, convert to hex %2 (return tuple)",
  "BASE_LORAWANEU868_RS485_SETUP_MSG0": "LoRaWAN-EU868 RS485 setup %1 baudrate %2 bits %3 parity %4 stop %5 TX %6 RX %7",
  "BASE_LORAWANEU868_RS485_SETUP_MSG1": "RTS",
  "BASE_LORAWANEU868_RS485_SETUP_MSG2": "CTS",
  "BASE_LORAWANEU868_RS485_SETUP_MSG3": "TX buffer",
  "BASE_LORAWANEU868_RS485_SETUP_MSG4": "RX buffer",
  "BASE_LORAWANEU868_RS485_SETUP_MSG5": "timeout",
  "BASE_LORAWANEU868_RS485_SETUP_MSG6": "timeout char",
  "BASE_LORAWANEU868_RS485_SETUP_MSG7": "invert",
  "BASE_LORAWANEU868_RS485_SETUP_MSG8": "flow",
  "BASE_LORAWANEU868_RS485_SETUP_MSG9": "mode",
  "BASE_LORAWANEU868_RS485_DEINIT_MSG0": "LoRaWAN-EU868 RS485 deinit",
  "BASE_LORAWANEU868_RS485_AVAILABLE_CHAR_MSG0": "LoRaWAN-EU868 RS485 count of available",
  "BASE_LORAWANEU868_RS485_READ_ALL_MSG0": "LoRaWAN-EU868 RS485 read all bytes (return bytes)",
  "BASE_LORAWANEU868_RS485_READ_BYTES_MSG0": "LoRaWAN-EU868 RS485 read %1 bytes (return bytes)",
  "BASE_LORAWANEU868_RS485_READ_LINE_MSG0": "LoRaWAN-EU868 RS485 read line (return bytes)",
  "BASE_LORAWANEU868_RS485_READ_RAW_DATA_MSG0": "LoRaWAN-EU868 RS485 read a raw data (return 0 ~ 255)",
  "BASE_LORAWANEU868_RS485_WRITE_MSG0": "LoRaWAN-EU868 RS485 write %1",
  "BASE_LORAWANEU868_RS485_WRITE_LINE_MSG0": "LoRaWAN-EU868 RS485 write line %1",
  "BASE_LORAWANEU868_RS485_WRITE_LIST_MSG0": "LoRaWAN-EU868 RS485 write list or tuple %1",
  "BASE_LORAWANEU868_RS485_WRITE_RAW_DATA_LIST_MSG0": "LoRaWAN-EU868 RS485 write raw data %1",
  "BASE_LORAWANEU868_RS485_WRITE_RAW_DATA_MSG0": "LoRaWAN-EU868 RS485 write raw data %1",
  "BASE_LORAWANEU868_RS485_READ_INTO_BUF_MSG0": "LoRaWAN-EU868 RS485 read into buf %1",
  "BASE_LORAWANEU868_RS485_SEND_BREAK_MSG0": "LoRaWAN-EU868 RS485 send break single",
  "BASE_LORAWANEU868_RS485_FLUSH_MSG0": "LoRaWAN-EU868 RS485 flush",
  "BASE_LORAWANEU868_RS485_TXDONE_MSG0": "LoRaWAN-EU868 RS485 is transfer done (return True or False)",
  "BASE_LORAWANUS915": "DTU LoRaWAN-US915",
  "BASE_LORAWANUS915_TITLE": "LoRaWAN-US915",
  "BASE_LORAWANUS915_LORAWAN": "LoRaWAN",
  "BASE_LORAWANUS915_P2P": "P2P",
  "BASE_LORAWANUS915_RS485": "RS485",
  "BASE_LORAWANUS915_INIT_MSG0": "Init LoRaWAN-US915 with %1 %2 RS485",
  "BASE_LORAWANUS915_LORAWAN_CONFIG_MSG0": "Config",
  "BASE_LORAWANUS915_LORAWAN_CONFIG_MSG1": "mode",
  "BASE_LORAWANUS915_LORAWAN_CONFIG_MSG2": "device eui *",
  "BASE_LORAWANUS915_LORAWAN_CONFIG_MSG3": "app key *",
  "BASE_LORAWANUS915_LORAWAN_CONFIG_MSG4": "app eui",
  "BASE_LORAWANUS915_LORAWAN_CONFIG_MSG5": "device address",
  "BASE_LORAWANUS915_LORAWAN_CONFIG_MSG6": "app session key",
  "BASE_LORAWANUS915_LORAWAN_CONFIG_MSG7": "network session key",
  "BASE_LORAWANUS915_LORAWAN_CONFIG_MSG8": "frequency band mask",
  "BASE_LORAWANUS915_LORAWAN_CONFIG_MSG9": "RX window param:",
  "BASE_LORAWANUS915_LORAWAN_CONFIG_MSG10": "RX1 delay (1~15)",
  "BASE_LORAWANUS915_LORAWAN_CONFIG_MSG11": "RX2 delay (2~16)",
  "BASE_LORAWANUS915_LORAWAN_CONFIG_MSG12": "RX2 datarate",
  "BASE_LORAWANUS915_LORAWAN_CONFIG_MSG13": "class mode",
  "BASE_LORAWANUS915_P2P_CONFIG_MSG0": "Config P2P parameters",
  "BASE_LORAWANUS915_P2P_CONFIG_MSG1": "frequency",
  "BASE_LORAWANUS915_P2P_CONFIG_MSG2": "spreading factor (5 ~ 12)",
  "BASE_LORAWANUS915_P2P_CONFIG_MSG3": "bandwidth",
  "BASE_LORAWANUS915_P2P_CONFIG_MSG4": "TX power (5 ~ 22)",
  "BASE_LORAWANUS915_P2P_CONFIG_MSG5": "code rate",
  "BASE_LORAWANUS915_P2P_CONFIG_MSG6": "preamble length",
  "BASE_LORAWANUS915_RS485_CONFIG_MSG0": "",
  "BASE_LORAWANUS915_RS485_CONFIG_MSG1": "Config RS485 with",
  "BASE_LORAWANUS915_RS485_CONFIG_MSG2": "baudrate",
  "BASE_LORAWANUS915_RS485_CONFIG_MSG3": "bits",
  "BASE_LORAWANUS915_RS485_CONFIG_MSG4": "parity",
  "BASE_LORAWANUS915_RS485_CONFIG_MSG5": "stop",
  "BASE_LORAWANUS915_RS485_CONFIG_MSG6": "RTS",
  "BASE_LORAWANUS915_RS485_CONFIG_MSG7": "CTS",
  "BASE_LORAWANUS915_RS485_CONFIG_MSG8": "TX buffer",
  "BASE_LORAWANUS915_RS485_CONFIG_MSG9": "RX buffer",
  "BASE_LORAWANUS915_RS485_CONFIG_MSG10": "timeout",
  "BASE_LORAWANUS915_RS485_CONFIG_MSG11": "timeout char",
  "BASE_LORAWANUS915_RS485_CONFIG_MSG12": "invert",
  "BASE_LORAWANUS915_RS485_CONFIG_MSG13": "flow",
  "BASE_LORAWANUS915_RS485_CONFIG_MSG14": "mode",
  "BASE_LORAWANUS915_GET_RECEIVED_DATA_MSG0": "get LoRaWAN-US915 received data",
  "BASE_LORAWANUS915_GET_RECEIVED_DATA_STRING_MSG0": "get LoRaWAN-US915 received data as string",
  "BASE_LORAWANUS915_GET_RECEIVED_DATA_COUNT_MSG0": "get LoRaWAN-US915 received data count",
  "BASE_LORAWANUS915_SEND_DATA_PAYLOAD_MSG0": "LoRaWAN-US915 send data %1 on port %2 (1 ~ 233)",
  "BASE_LORAWANUS915_SEND_DATA_PAYLOAD_RETURN_MSG0": "LoRaWAN-US915 send data %1 on port %2 (1 ~ 233) wait %3 ms to confirm",
  "BASE_LORAWANUS915_START_JOIN_LORAWAN_NETWORK_MSG0": "Start LoRaWAN-US915 join LoRaWAN network, wait %1 ms for response",
  "BASE_LORAWANUS915_START_JOIN_LORAWAN_NETWORK_MSG1": "Successed %1",
  "BASE_LORAWANUS915_START_JOIN_LORAWAN_NETWORK_MSG2": "Failed %1",
  "BASE_LORAWANUS915_SEND_P2P_DATA_MSG0": "Send LoRaWAN-US915 P2P data %1 , convert to hex %2",
  "BASE_LORAWANUS915_SEND_P2P_DATA_RETURN_MSG0": "send LoRaWAN-US915 P2P data %1 wait %2 ms to get send result, convert to hex %3 (return True or False)",
  "BASE_LORAWANUS915_GET_P2P_RECEIVE_DATA_MSG0": "get LoRaWAN-US915 P2P mode receive data in %1 ms, convert to hex %2 (return tuple)",
  "BASE_LORAWANUS915_RS485_SETUP_MSG0": "LoRaWAN-US915 RS485 setup %1 baudrate %2 bits %3 parity %4 stop %5 TX %6 RX %7",
  "BASE_LORAWANUS915_RS485_SETUP_MSG1": "RTS",
  "BASE_LORAWANUS915_RS485_SETUP_MSG2": "CTS",
  "BASE_LORAWANUS915_RS485_SETUP_MSG3": "TX buffer",
  "BASE_LORAWANUS915_RS485_SETUP_MSG4": "RX buffer",
  "BASE_LORAWANUS915_RS485_SETUP_MSG5": "timeout",
  "BASE_LORAWANUS915_RS485_SETUP_MSG6": "timeout char",
  "BASE_LORAWANUS915_RS485_SETUP_MSG7": "invert",
  "BASE_LORAWANUS915_RS485_SETUP_MSG8": "flow",
  "BASE_LORAWANUS915_RS485_SETUP_MSG9": "mode",
  "BASE_LORAWANUS915_RS485_DEINIT_MSG0": "LoRaWAN-US915 RS485 deinit",
  "BASE_LORAWANUS915_RS485_AVAILABLE_CHAR_MSG0": "LoRaWAN-US915 RS485 count of available",
  "BASE_LORAWANUS915_RS485_READ_ALL_MSG0": "LoRaWAN-US915 RS485 read all bytes (return bytes)",
  "BASE_LORAWANUS915_RS485_READ_BYTES_MSG0": "LoRaWAN-US915 RS485 read %1 bytes (return bytes)",
  "BASE_LORAWANUS915_RS485_READ_LINE_MSG0": "LoRaWAN-US915 RS485 read line (return bytes)",
  "BASE_LORAWANUS915_RS485_READ_RAW_DATA_MSG0": "LoRaWAN-US915 RS485 read a raw data (return 0 ~ 255)",
  "BASE_LORAWANUS915_RS485_WRITE_MSG0": "LoRaWAN-US915 RS485 write %1",
  "BASE_LORAWANUS915_RS485_WRITE_LINE_MSG0": "LoRaWAN-US915 RS485 write line %1",
  "BASE_LORAWANUS915_RS485_WRITE_LIST_MSG0": "LoRaWAN-US915 RS485 write list or tuple %1",
  "BASE_LORAWANUS915_RS485_WRITE_RAW_DATA_LIST_MSG0": "LoRaWAN-US915 RS485 write raw data %1",
  "BASE_LORAWANUS915_RS485_WRITE_RAW_DATA_MSG0": "LoRaWAN-US915 RS485 write raw data %1",
  "BASE_LORAWANUS915_RS485_READ_INTO_BUF_MSG0": "LoRaWAN-US915 RS485 read into buf %1",
  "BASE_LORAWANUS915_RS485_SEND_BREAK_MSG0": "LoRaWAN-US915 RS485 send break single",
  "BASE_LORAWANUS915_RS485_FLUSH_MSG0": "LoRaWAN-US915 RS485 flush",
  "BASE_LORAWANUS915_RS485_TXDONE_MSG0": "LoRaWAN-US915 RS485 is transfer done (return True or False)",
  "UNIT_MINITOF90": "Mini Tof-90°",
  "UNIT_MINITOF90_INIT_MSG0": "Init %1 I2C address %2 (0x08 ~ 0x77)",
  "UNIT_MINITOF90_GET_RANGE_MSG0": "get %1 target distance (mm, return int)",
  "UNIT_MINITOF90_GET_RANGE_MSG1": "If Continuous Measurement Mode is not turned on, calling this function will immediately take a ranging measurement and return the result.",
  "UNIT_MINITOF90_GET_DATA_READY_MSG0": "get %1 data ready status (return True or False)",
  "UNIT_MINITOF90_IS_CONTINUOUS_MODE_MSG0": "get %1 continuous measurement mode status (return True or False)",
  "UNIT_MINITOF90_GET_MEASUREMENT_TIMING_BUDGET_MSG0": "get %1 measurement timing budget (us, return int)",
  "UNIT_MINITOF90_SET_MEASUREMENT_TIMING_BUDGET_MSG0": "Set %1 measurement timing budget to %2 us",
  "UNIT_MINITOF90_START_CONTINUOUS_MSG0": "%1 start continuous measurement",
  "UNIT_MINITOF90_STOP_CONTINUOUS_MSG0": "%1 stop continuous measurement",
  "UNIT_MINITOF90_SET_ADDRESS_MSG0": "Set %1 I2C address %2 (0x08 ~ 0x77)",
  "BASE_ECHO": "Echo",
  "BASE_ECHO_INIT_MSG0": "Init Echo with %1 I2S port %2 sample rate %3",
  "BASE_ECHO_SPEAKER_PLAYWAV_FILE_MSG0": "Echo play WAV file %1 %2",
  "BASE_ECHO_SPEAKER_TONE_MSG0": "Echo play tone freq %1 (Hz) millisecond %2",
  "BASE_ECHO_SPEAKER_PLAY_WAV_MSG0": "Echo play WAV (bytearray / bytes) %1 duration (millisecond) %2",
  "BASE_ECHO_SPEAKER_PLAY_RAW_MSG0": "Echo play PCM (bytearray / bytes) %1 sample rate (Hz) %2 channel %3 bit %4 duration (millisecond) %5",
  "BASE_ECHO_SPEAKER_PAUSE_MSG0": "Echo pause play",
  "BASE_ECHO_SPEAKER_RESUME_MSG0": "Echo resume play",
  "BASE_ECHO_SPEAKER_STOP_MSG0": "Echo stop play",
  "BASE_ECHO_SPEAKER_GET_VOLUME_PERCENTAGE_MSG0": "Echo get volume (return int, 0 ~ 100)",
  "BASE_ECHO_SPEAKER_SET_VOLUME_PERCENTAGE_MSG0": "Echo Set volume %1",
  "BASE_ECHO_RECORD_WAV_FILE_MSG0": "Echo record WAV file %1 %2 sample rate %3 channel %4 bit %5 duration (millisecond) %6",
  "BASE_ECHO_RECORD_PCM_MSG0": "Echo record PCM with %1 sample rate %2 channel %3 bit %4 duration (millisecond) %5",
  "BASE_ECHO_MIC_GET_PCM_MSG0": "get Echo PCM buffer (return bytes)",
  "MODULE_LORA868V12": "LoRa868 v1.2",
  "MODULE_LORA868V12_INIT2_MSG0": "Init LoRa868 %1",
  "MODULE_LORA868V12_INIT2_MSG1": "reset pin",
  "MODULE_LORA868V12_INIT2_MSG2": "CS pin",
  "MODULE_LORA868V12_INIT2_MSG3": "interrupt pin",
  "MODULE_LORA868V12_INIT2_MSG4": "busy pin",
  "MODULE_LORA868V12_INIT2_MSG5": "frequency (850000 ~ 930000 kHz)",
  "MODULE_LORA868V12_INIT2_MSG6": "bandwidth",
  "MODULE_LORA868V12_INIT2_MSG7": "spreading factor (7 ~ 12)",
  "MODULE_LORA868V12_INIT2_MSG8": "coding rate (5 ~ 8)",
  "MODULE_LORA868V12_INIT2_MSG9": "preamble length (0 ~ 255)",
  "MODULE_LORA868V12_INIT2_MSG10": "syncword (0 ~ 0xff)",
  "MODULE_LORA868V12_INIT2_MSG11": "output power (-9 ~ 22 dBm)",
  "MODULE_LORA868V12_SEND_RETURN_MSG0": "%1 send packet %2 (return int)",
  "MODULE_LORA868V12_SEND_WITH_TIME_RETURN_MSG0": "%1 send packet %2 at %3 milliseconds (return int)",
  "MODULE_LORA868V12_SEND_MSG0": "%1 send packet %2",
  "MODULE_LORA868V12_START_RECV_MSG0": "%1 start receive data",
  "MODULE_LORA868V12_STANDBY_MSG0": "Set %1 to standby mode",
  "MODULE_LORA868V12_SLEEP_MSG0": "%1 sleep",
  "MODULE_LORA868V12_IRQ_TRIGGERED_MSG0": "%1 check if the IRQ has been triggered (return True or False)",
  "MODULE_LORA868V12_RECV_MSG0": "%1 receive with timeout %2 milliseconds RX length %3 RX packet %4",
  "MODULE_LORA868V12_RECEIVE_DATA_EVENT_MSG0": "When %1 receive data %2",
  "MODULE_LORA868V12_RECV_DATA_PARAM_MSG0": "get %2 in receive data %1",
  "MODULE_LORA868V12_SET_FREQ_MSG0": "%1 set frequency to %2 (850000 ~ 930000 kHz)",
  "MODULE_LORA868V12_SET_SF_MSG0": "%1 set spreading factor to %2 (7 ~ 12)",
  "MODULE_LORA868V12_SET_BW_MSG0": "%1 set bandwidth to %2",
  "MODULE_LORA868V12_SET_CODING_RATE_MSG0": "%1 set coding rate to %2 (5 ~ 8)",
  "MODULE_LORA868V12_SET_SYNCWORD_MSG0": "%1 set syncword to %2 (0 ~ 0xff)",
  "MODULE_LORA868V12_SET_PREAMBLE_LEN_MSG0": "%1 set preamble length to %2 (0 ~ 255)",
  "MODULE_LORA868V12_SET_OUTPUT_POWER_MSG0": "%1 set output power to %2 (-9 ~ 22 dBm)",
  "MODULE_AUDIO": "Audio",
  "MODULE_AUDIO_INIT_MSG0": "Init Audio %1 with %2 sample rate %3",
  "MODULE_AUDIO_INIT_MSG1": "channel",
  "MODULE_AUDIO_INIT_MSG2": "offset",
  "MODULE_AUDIO_INIT_MSG3": "MUX",
  "MODULE_AUDIO_INIT_CORES3_MSG0": "Init Audio %1 with %2 sample rate %3 switch %4",
  "MODULE_AUDIO_SPEAKER_PLAYWAV_FILE_MSG0": "%1 play WAV file %2 %3",
  "MODULE_AUDIO_SPEAKER_TONE_MSG0": "%1 play tone freq %2 (Hz) millisecond %3",
  "MODULE_AUDIO_SPEAKER_PLAY_WAV_MSG0": "%1 play WAV (bytearray / bytes) %2 duration (millisecond) %3",
  "MODULE_AUDIO_SPEAKER_PLAY_RAW_MSG0": "%1 play PCM (bytearray / bytes) %2 sample rate (Hz) %3 channel %4 bit %5 duration (millisecond) %6",
  "MODULE_AUDIO_SPEAKER_PAUSE_MSG0": "%1 pause play",
  "MODULE_AUDIO_SPEAKER_RESUME_MSG0": "%1 resume play",
  "MODULE_AUDIO_SPEAKER_STOP_MSG0": "%1 stop play",
  "MODULE_AUDIO_SPEAKER_GET_VOLUME_PERCENTAGE_MSG0": "get %1 volume (return int, 0 ~ 100)",
  "MODULE_AUDIO_SPEAKER_SET_VOLUME_PERCENTAGE_MSG0": "Set %1 volume %2 %",
  "MODULE_AUDIO_RGB_SET_COLOR_MSG0": "Set %1 LED %2 (0~2) color %3",
  "MODULE_AUDIO_RGB_FILL_COLOR_MSG0": "Fill %1 all LED color %2",
  "MODULE_AUDIO_RGB_SET_BRIGHTNESS_MSG0": "Set %1 LED brightness %2 (0~100)",
  "MODULE_AUDIO_RECORD_WAV_FILE_MSG0": "%1 record WAV file %2 %3 sample rate %4 channel %5 bit %6 duration (millisecond) %7",
  "MODULE_AUDIO_RECORD_PCM_MSG0": "%1 record PCM with %2 sample rate %3 channel %4 bit %5 duration (millisecond) %6",
  "MODULE_AUDIO_MIC_GET_PCM_MSG0": "get %1 PCM buffer (return bytes)",
  "UNIT_AUDIOPLAYER": "AudioPlayer",
  "UNIT_AUDIOPLAYER_INIT_MSG0": "Init %1 %2",
  "UNIT_AUDIOPLAYER_INIT_MSG1": "UART",
  "UNIT_AUDIOPLAYER_CHECK_PLAY_STATUS_MSG0": "get %1 current play status (return int)",
  "UNIT_AUDIOPLAYER_PLAY_AUDIO_MSG0": "%1 play audio",
  "UNIT_AUDIOPLAYER_PAUSE_AUDIO_MSG0": "%1 pause audio",
  "UNIT_AUDIOPLAYER_STOP_AUDIO_MSG0": "%1 stop audio",
  "UNIT_AUDIOPLAYER_NEXT_AUDIO_MSG0": "%1 play next audio",
  "UNIT_AUDIOPLAYER_PREVIOUS_AUDIO_MSG0": "%1 play previous audio",
  "UNIT_AUDIOPLAYER_PLAY_AUDIO_BY_INDEX_MSG0": "%1 play specify audio %2 (1 ~ 65535)",
  "UNIT_AUDIOPLAYER_GET_TOTAL_AUDIO_NUMBER_MSG0": "get %1 total audio number (return int)",
  "UNIT_AUDIOPLAYER_GET_CURRENT_AUDIO_NUMBER_MSG0": "get %1 current audio number (return int)",
  "UNIT_AUDIOPLAYER_SELECT_AUDIO_NUM_MSG0": "%1 select specify audio %2 (1 ~ 65535)",
  "UNIT_AUDIOPLAYER_INCREASE_VOLUME_MSG0": "%1 increase volume",
  "UNIT_AUDIOPLAYER_DECREASE_VOLUME_MSG0": "%1 decrease volume",
  "UNIT_AUDIOPLAYER_SET_VOLUME_MSG0": "Set %1 volume to %2 (0 ~ 30)",
  "UNIT_AUDIOPLAYER_GET_VOLUME_MSG0": "get %1 current volume (return int)",
  "UNIT_AUDIOPLAYER_GET_PLAY_MODE_MSG0": "get %1 play mode (return int)",
  "UNIT_AUDIOPLAYER_SET_PLAY_MODE_MSG0": "Set %1 play mode to %2",
  "UNIT_AUDIOPLAYER_PLAY_STATUS_MSG0": "Stopped",
  "UNIT_AUDIOPLAYER_PLAY_STATUS_MSG1": "Playing",
  "UNIT_AUDIOPLAYER_PLAY_STATUS_MSG2": "Paused",
  "UNIT_AUDIOPLAYER_PLAY_MODE_MSG0": "Repeat All",
  "UNIT_AUDIOPLAYER_PLAY_MODE_MSG1": "Repeat One",
  "UNIT_AUDIOPLAYER_PLAY_MODE_MSG2": "Folder Repeat",
  "UNIT_AUDIOPLAYER_PLAY_MODE_MSG3": "Shuffle Play",
  "UNIT_AUDIOPLAYER_PLAY_MODE_MSG4": "Single Play",
  "UNIT_AUDIOPLAYER_PLAY_MODE_MSG5": "Sequential Play",
  "MODULE_QRCODE": "QRCode",
  "MODULE_QRCODE_INIT_MSG0": "Init QRCode %1 with %2 UART %3 TX %4 RX %5",
  "MODULE_QRCODE_SET_POWER_MSG0": "Set %1 power to %2",
  "MODULE_QRCODE_SET_TRIG_MSG0": "Set %1 trigger pin value to %2",
  "MODULE_QRCODE_START_DECODE_MSG0": "Start %1 decode",
  "MODULE_QRCODE_STOP_DECODE_MSG0": "Stop %1 decode",
  "MODULE_QRCODE_READ_MSG0": "%1 read",
  "MODULE_QRCODE_SET_TRIGGER_MODE_MSG0": "Set %1 trigger mode to %2",
  "MODULE_QRCODE_SET_DECODE_DELAY_MSG0": "Set %1 decode delay to %2 (ms)",
  "MODULE_QRCODE_SET_TRIGGER_TIMEOUT_MSG0": "Set %1 trigger timeout to %2 (ms)",
  "MODULE_QRCODE_SET_MOTION_SENSITIVITY_MSG0": "Set %1 motion detection sensitivity to %2 (1~5)",
  "MODULE_QRCODE_SET_CONTINUOUS_DECODE_DELAY_MSG0": "Set %1 continuous decode delay to %2 (100ms)",
  "MODULE_QRCODE_SET_TRIGGER_DECODE_DELAY_MSG0": "Set %1 trigger decode delay to %2 (ms)",
  "MODULE_QRCODE_SET_SAME_CODE_INTERVAL_MSG0": "Set %1 same code interval to %2 (ms)",
  "MODULE_QRCODE_SET_DIFF_CODE_INTERVAL_MSG0": "Set %1 difference code interval to %2 (ms)",
  "MODULE_QRCODE_SET_SAME_CODE_NO_DELAY_MSG0": "Set %1 same code no delay to %2",
  "MODULE_QRCODE_SET_FILL_LIGHT_MODE_MSG0": "Set %1 fill light mode to %2",
  "MODULE_QRCODE_SET_FILL_LIGHT_BRIGHTNESS_MSG0": "Set %1 fill light mode brightness to %2 (0~100)",
  "MODULE_QRCODE_SET_POS_LIGHT_MODE_MSG0": "Set %1 positioning light mode to %2",
  "MODULE_QRCODE_SET_STARTUP_TONE_MSG0": "Set %1 startup tone to %2",
  "MODULE_QRCODE_SET_DECODE_SUCCESS_BEEP_MSG0": "Set %1 decode success beep to %2",
  "MODULE_QRCODE_SET_CASE_CONVERSION_MSG0": "Set %1 case conversion to %2",
  "MODULE_QRCODE_SET_PROTOCOL_FORMAT_MSG0": "Set %1 protocol format to %2 (0~3)",
  "MODULE_QRCODE_LEVEL_OPTION_MSG0": "low level",
  "MODULE_QRCODE_LEVEL_OPTION_MSG1": "high level",
  "MODULE_QRCODE_TRIGGER_OPTION_MSG0": "key mode",
  "MODULE_QRCODE_TRIGGER_OPTION_MSG1": "continuous mode",
  "MODULE_QRCODE_TRIGGER_OPTION_MSG2": "auto mode",
  "MODULE_QRCODE_TRIGGER_OPTION_MSG3": "pulse mode",
  "MODULE_QRCODE_TRIGGER_OPTION_MSG4": "motion sensing mode",
  "MODULE_QRCODE_FILL_LIGHT_OPTION_MSG0": "light off",
  "MODULE_QRCODE_FILL_LIGHT_OPTION_MSG1": "light on during decoding",
  "MODULE_QRCODE_FILL_LIGHT_OPTION_MSG2": "light always on when powered",
  "MODULE_QRCODE_POS_LIGHT_OPTION_MSG0": "light off",
  "MODULE_QRCODE_POS_LIGHT_OPTION_MSG1": "light flash during decoding",
  "MODULE_QRCODE_POS_LIGHT_OPTION_MSG2": "light on during decoding",
  "MODULE_QRCODE_TONE_OPTION_MSG0": "disable startup tone",
  "MODULE_QRCODE_TONE_OPTION_MSG1": "play 4 beeps",
  "MODULE_QRCODE_TONE_OPTION_MSG2": "play 2 beeps",
  "MODULE_QRCODE_BEEP_OPTION_MSG0": "no prompt sound",
  "MODULE_QRCODE_BEEP_OPTION_MSG1": "play prompt sound once",
  "MODULE_QRCODE_BEEP_OPTION_MSG2": "play prompt sound twice",
  "MODULE_QRCODE_CONVERSION_OPTION_MSG0": "off (Original data)",
  "MODULE_QRCODE_CONVERSION_OPTION_MSG1": "convert to uppercase",
  "MODULE_QRCODE_CONVERSION_OPTION_MSG2": "convert to lowercase",
  "BASE_GPSV2": "GPS V2.0",
  "BASE_GPSV2_INIT_MSG0": "Init GPSv2.0 %1",
  "BASE_GPSV2_INIT_MSG1": "UART",
  "BASE_GPSV2_GET_GPS_DATE_MSG0": "get GPSv2.0 date (return list [yyyy, mm, dd])",
  "BASE_GPSV2_GET_GPS_TIME_MSG0": "get GPSv2.0 local time (return list [hour, min, second])",
  "BASE_GPSV2_GET_GPS_DATE_TIME_MSG0": "get GPSv2.0 date and local time (return list [yyyy, mm, dd, hour, min, second])",
  "BASE_GPSV2_GET_TIMESTAMP_MSG0": "get GPSv2.0 timestamp (return int)",
  "BASE_GPSV2_GET_LONGITUDE_MSG0": "get GPSv2.0 longitude (return string)",
  "BASE_GPSV2_GET_LATITUDE_MSG0": "get GPSv2.0 latitude (return string)",
  "BASE_GPSV2_GET_ALTITUDE_MSG0": "get GPSv2.0 altitude (return string)",
  "BASE_GPSV2_GET_SATELLITE_NUM_MSG0": "get GPSv2.0 satellite number (return int)",
  "BASE_GPSV2_GET_POS_QUALITY_MSG0": "get GPSv2.0 position quality (return int)",
  "BASE_GPSV2_GET_COURSE_OVER_GROUND_MSG0": "get GPSv2.0 course over ground degree (return string)",
  "BASE_GPSV2_GET_SPEED_OVER_GROUND_MSG0": "get GPSv2.0 speed over ground knot (return string)",
  "BASE_GPSV2_GET_WORK_MODE_MSG0": "get GPSv2.0 work mode (return int)",
  "BASE_GPSV2_SET_WORK_MODE_MSG0": "Set GPSv2.0 work mode to %1",
  "BASE_GPSV2_GET_TIME_ZONE_MSG0": "get GPSv2.0 current time zone offset (return int)",
  "BASE_GPSV2_SET_TIME_ZONE_MSG0": "Set GPSv2.0 time zone offset to %1",
  "BASE_GPSV2_DEINIT_MSG0": "GPSv2.0 deinit",
  "UNIT_STEP16": "Step16",
  "UNIT_STEP16_INIT_MSG0": "Init %1 I2C address %2 (0x08 ~ 0x77)",
  "UNIT_STEP16_GET_ENCODER_VALUE_MSG0": "get %1 encoder value (return 0 ~ 15)",
  "UNIT_STEP16_GET_ENCODER_CW_INCREASE_MSG0": "get %1 encoder clockwise increase (return True or False)",
  "UNIT_STEP16_SET_ENCODER_CW_INCREASE_MSG0": "Set %1 encoder clockwise increase %2",
  "UNIT_STEP16_SET_LED_MODE_MSG0": "Set %1 LED work mode to %2",
  "UNIT_STEP16_SET_LED_MODE_MSG1": "time to off",
  "UNIT_STEP16_SET_LED_MODE_MSG2": "(seconds, 1 ~ 253)",
  "UNIT_STEP16_GET_LED_MODE_MSG0": "get %1 LED work mode (return int)",
  "UNIT_STEP16_SET_LED_BRIGHTNESS_MSG0": "Set %1 LED brightness %2 (0 ~ 100)",
  "UNIT_STEP16_GET_LED_BRIGHTNESS_MSG0": "get %1 LED brightness (return 0 ~ 100)",
  "UNIT_STEP16_SET_RGB_POWER_MSG0": "Set %1 RGB power %2",
  "UNIT_STEP16_GET_RGB_POWER_MSG0": "get %1 RGB power (return True or False)",
  "UNIT_STEP16_SET_RGB_BRIGHTNESS_MSG0": "Set %1 RGB brightness %2 (0 ~ 100)",
  "UNIT_STEP16_GET_RGB_BRIGHTNESS_MSG0": "get %1 RGB brightness (return 0 ~ 100)",
  "UNIT_STEP16_SET_RGB_VALUE_MSG0": "Set %1 RGB color %2",
  "UNIT_STEP16_GET_RGB_VALUE_MSG0": "get %1 RGB color (return tuple, [R, G, B])",
  "UNIT_STEP16_SAVE_LED_CONFIG_MSG0": "Save %1 LED config",
  "UNIT_STEP16_SAVE_RGB_CONFIG_MSG0": "Save %1 RGB config",
  "UNIT_STEP16_SET_I2C_ADDR_MSG0": "Set %1 I2C address %2 (0x08 ~ 0x77)",
  "UNIT_STEP16_GET_ADDR_MSG0": "get %1 I2C address",
  "UNIT_STEP16_GET_FIRMWARE_VERSION_MSG0": "get %1 firmware version",
  "IOTDEVICE": "IoTDevice",
  "IOT_SWITCHC6": "SwitchC6",
  "IOT_SWITCHC6_INIT_MSG0": "Init SwitchC6 %1 target mac %2 wifi channel %3 verbose %4",
  "IOT_SWITCHC6_SET_SWITCH_MSG0": "SwitchC6 set %1 onoff status to %2 timeout %3 ms",
  "IOT_SWITCHC6_TOGGLE_MSG0": "SwitchC6 toggle %1 timeout %2 ms",
  "IOT_SWITCHC6_GET_CAPACITOR_VOLTAGE_MSG0": "SwitchC6 get %1 capacitor voltage (return float) timeout %2 ms",
  "IOT_SWITCHC6_GET_SWITCH_STATUS_MSG0": "SwitchC6 get %1 onoff status (return True or False) timeout %2 ms",
  "IOT_SWITCHC6_GET_FIRMWARE_VERSION_MSG0": "SwitchC6 get %1 firmware version (return int) timeout %2 ms",
  "IOT_SWITCHC6_EVENT_CALLBACK_MSG0": "When SwitchC6 trigger %1 %2 target mac %3 onoff %4 voltage %5",
  "UNIT_INA226": "INA226",
  "UNIT_INA226_10A": "INA226-10A",
  "UNIT_INA226_1A": "INA226-1A",
  "UNIT_INA226_INIT_MSG0": "Init %1 I2C address %2 and type %3",
  "UNIT_INA226_READ_SHUNT_VOLTAGE_MSG0": "get %1 shunt voltage (V, return float)",
  "UNIT_INA226_READ_BUS_VOLTAGE_MSG0": "get %1 bus voltage (V, return float)",
  "UNIT_INA226_READ_CURRENT_MSG0": "get %1 current (A, return float)",
  "UNIT_INA226_READ_POWER_MSG0": "get %1 power (W, return float)",
  "UNIT_MQ": "MQ",
  "UNIT_MQ_INIT_MSG0": "Init %1 I2C address %2 (0x08 ~ 0x77)",
  "UNIT_MQ_SET_I2C_ADDR_MSG0": "Set %1 I2C address %2 (0x08 ~ 0x77)",
  "UNIT_MQ_GET_ADDR_MSG0": "get %1 I2C address",
  "UNIT_MQ_GET_FIRMWARE_VERSION_MSG0": "get %1 firmware version",
  "UNIT_MQ_GET_VALID_TAGS_MSG0": "get %1 valid tags (return True or False)",
  "UNIT_MQ_GET_ADC_VALUE_MSG0": "get %1 %2 ADC value (return int)",
  "UNIT_MQ_SET_MODE_MSG0": "Set %1 work mode to %2",
  "UNIT_MQ_GET_MODE_MSG0": "get %1 work mode (return int)",
  "UNIT_MQ_SET_HEAT_TIME_MSG0": "Set %1 high level time to %2 low level time to %3 (Pin Level Switching Mode)"
}